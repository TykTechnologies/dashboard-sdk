openapi: 3.0.3
info:
  contact:
    email: support@tyk.io
    name: Tyk Technologies
    url: https://tyk.io/contact
  description: |-
    ## <a name="introduction"></a> Introduction

        The Tyk Dashboard API offers granular, programmatic access to a centralised database of resources that your Tyk nodes can pull from. This API has a dynamic user administrative structure which means the secret key that is used to communicate with your Tyk nodes can be kept secret and access to the wider management functions can be handled on a user-by-user and organisation-by-organisation basis.

        A common question around using a database-backed configuration is how to programatically add API definitions to your Tyk nodes, the Dashboard API allows much more fine-grained, secure and multi-user access to your Tyk cluster, and should be used to manage a database-backed Tyk node.

        The Tyk Dashboard API works seamlessly with the Tyk Dashboard (and the two come bundled together).

        ## <a name="security-hierarchy"></a> Security Hierarchy

        The Dashboard API provides a more structured security layer to managing Tyk nodes.

        ### Organisations, APIs and Users

        With the Dashboard API and a database-backed Tyk setup, (and to an extent with file-based API setups - if diligence is used in naming an creating definitions), the following security model is applied to the management of Upstream APIs:

        * **Organisations**: All APIs are *owned* by an organisation, this is designated by the OrgID parameter in the API Definition.
        * **Users**: All users created in the Dashboard belong to an organisation (unless an exception is made for super-administrative access).
        * **APIs**: All APIs belong to an Organisation and only Users that belong to that organisation can see the analytics for those APIs and manage their configurations.
        * **API Keys**: API Keys are designated by organisation, this means an API key that has full access rights will not be allowed to access the APIs of another organisation on the same system, but can have full access to all APIs within the organisation.
        * **Access Rights**: Access rights are stored with the key, this enables a key to give access to multiple APIs, this is defined by the session object in the core Tyk API.

        In order to use the Dashboard API, you'll need to get the Tyk Dashboard API Access Credentials secret from your user profile on the Dashboard UI.

        The secret you set should then be sent along as a header with each Dashboard API Request in order for it to be successful:

    authorization: <your-secret>
  license:
    name: Mozilla Public License Version 2.0
    url: https://github.com/TykTechnologies/tyk/blob/master/LICENSE.md
  title: NEW Tyk DASH API
  version: 5.4.0
servers:
- url: "https://{tenant}"
  variables:
    tenant:
      default: localhost:8080
      description: Your dashboard host
security:
- bearerAuth: []
tags:
- description: |
    The API Catalogue is a list of APIs that you have published to your portal. <br/>

    You can use the portal Api Catalogue APIS to manage which APIs your registered developers have access to.

    The API catalogue is completely separate from the regular API list section of the dashboard, as you may only wish to expose some of those APIs managed by Tyk to end users.

    API Catalogue entries are not actual directly tied to APIs in any way, they are connected to policies.

    [Read more about Api catalogue here] (https://tyk.io/docs/tyk-developer-portal/tyk-portal-classic/portal-concepts/)
  externalDocs:
    description: API Catalogue full documentation
    url: https://tyk.io/docs/tyk-developer-portal/tyk-portal-classic/portal-concepts/
  name: Portal API Catalogue
- description: |
    Currently tyk dashboard only support API template assets.An API template is an asset managed by Tyk Dashboard that is used as the starting point - a blueprint - from which you can create a new Tyk OAS API definition. <br/>

    Templates are used only during the creation of an API, they cannot be applied later.

    [Read more about API template assets here](https://tyk.io/docs/product-stack/tyk-dashboard/advanced-configurations/templates/template-overview/)
  externalDocs:
    description: Api Templates full documentation
    url: https://tyk.io/docs/product-stack/tyk-dashboard/advanced-configurations/templates/template-overview/
  name: Assets
- description: |
    The Tyk Dashboard permission system can be extended by writing custom rules using an Open Policy Agent (OPA). The rules engine works on top of your Dashboard API, which means you can control not only access rules, but also behaviour of all Dashboard APIs (except your public developer portal)  <br/>

    By default the Dashboard OPA engine is turned off, and you need to explicitly enable it via your Dashboard tyk_analytics.conf file. <br/>

    You can use Opa rule to accomplish tasks like: <br/>

    1. Prevent users from creating keyless apis.
    2. Assign specific categories to apis created to certain user groups or users
    3. Control access for individual fields. For example, do not allow changing the API “active” status (e.g. deploy), unless you have a specific permission set
    4. And many more <br/>

    [Read more about Tyk Open Policy Agent here](https://tyk.io/docs/tyk-dashboard/open-policy-agent/)
  externalDocs:
    description: Tyk Open Policy Agent full documentation
    url: https://tyk.io/docs/tyk-dashboard/open-policy-agent/
  name: Open Policy Agent
- description: |
    These APIS helps you get,add and delete (CRUD) a list of additional (custom) permissions for your Dashboard users. You can use the created additional permissions with Open Policy Agent (OPA) <br/>

     Once created, a custom permission will be added to standard list of user permissions. <br/>

    You can also configure these custom permissions in the security.additional_permissions map in the Tyk Dashboard configuration file.

    You can check the [full documentation here](https://tyk.io/docs/tyk-dashboard-api/org/permissions/).
  externalDocs:
    description: Additional Permissions full documentation
    url: https://tyk.io/docs/tyk-dashboard-api/org/permissions/
  name: Additional Permissions
- description: |
    Webhooks are a great way to let external applications know about the status of a user, an API or an event that has occurred in the Tyk gateway <br/>

    You can create webhooks that you can then re-use in your API Definitions and assign to different Tyk Events such as quota violations or rate-limiting violations.<br/>

    Each webhook require a target_path (which is an absolute URL that should be targeted by the webhook e.g https://httpbin.org/expired-keys) and a method which can be any of GET, PUT, POST, PATCH or DELETE.<br/>

    Request types that do not support an encoded BODY will not have the event metadata encoded as part of the request. We would advise using POST where possible.
  name: Webhooks
paths:
  /api/apis:
    get:
      description: Get List of APIs.By default the returned apis will be sorted by
        created_at field in descending order but this can be changed via sort query
        parameter.The apis returned are paginated
      operationId: getApis
      parameters:
      - deprecated: true
        description: Return smaller API list payload
        example: "1"
        explode: true
        in: query
        name: compressed
        required: false
        schema:
          enum:
          - "1"
          type: string
        style: form
      - deprecated: true
        description: Transform the response payload for graphql.If any value is sent
          in this query parameter then the response will be be transformed for graphql
        example: "1"
        explode: true
        in: query
        name: graph
        required: false
        schema:
          type: string
        style: form
      - description: API Type you want returned.
        example: rest
        explode: true
        in: query
        name: api_type
        required: false
        schema:
          enum:
          - tcp
          - rest
          - graphql
          - udg
          - subgraph
          - supergraph
          - internal
          type: string
        style: form
      - description: Comma separated list of categories you want to filter Apis by.
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of authentication type you want to filter
          apis by.
        example: "keyless,authToken"
        explode: true
        in: query
        name: auth_type
        required: false
        schema:
          type: string
        style: form
      - description: "For versioned APIs, return only the base versions.If any value\
          \ is sent in this query parameter only the base version will be returned"
        example: "1"
        explode: true
        in: query
        name: base_apis
        required: false
        schema:
          type: string
        style: form
      - description: Query string for search/filtering.This will return all apis whose
          names matches the given pattern
        example: Rate Limit Path API 1
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: The field you want to use to sort the apis.Add - as a prefix
          to return in desceding order
        example: name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          - -name
          - created_at
          - -created_at
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                paginatedApiExample:
                  $ref: '#/components/examples/paginatedApiExample'
              schema:
                $ref: '#/components/schemas/ApiDefinitions'
          description: List of API definitions
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve Apis
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for Apis
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get List of APIs
      tags:
      - APIs
    post:
      description: |-
        Create an API Definition in Tyk Classic API format.
          Note that the response includes the newly created Tyk Classic API Definition containing the unique identifier for the API (`api_id`). You can provide a value for the `api_id` in the request body, otherwise Tyk will automatically generate a value.
                The `id` field within the Tyk Classic API Definition is a proprietary field used by Tyk to identify the API within the database and cannot be chosen or modified by the user.
      operationId: postApis
      parameters:
      - description: The base API which the new version will be linked to.
        example: 663a4ed9b6be920001b191ae
        explode: true
        in: query
        name: base_api_id
        required: false
        schema:
          type: string
        style: form
      - description: "The version name of the base API while creating the first version.\
          \ This doesn't have to be sent for the next versions but if it is set, it\
          \ will override base API version name."
        example: Default
        explode: true
        in: query
        name: base_api_version_name
        required: false
        schema:
          type: string
        style: form
      - description: The version name of the created version.
        example: v2
        explode: true
        in: query
        name: new_version_name
        required: false
        schema:
          type: string
        style: form
      - description: "If true, the new version is set as default version."
        example: true
        explode: true
        in: query
        name: set_default
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              api_definition:
                api_id: b84fe1a04e5648927971c0557971565c
                auth:
                  auth_header_name: authorization
                definition:
                  key: version
                  location: header
                name: Tyk Test API
                org_id: 664a14650619d40001f1f00f
                proxy:
                  listen_path: /tyk-api-test/
                  strip_listen_path: true
                  target_url: https://httpbin.org
                use_oauth2: true
                version_data:
                  not_versioned: true
                  versions:
                    Default:
                      name: Default
            schema:
              $ref: '#/components/schemas/ApiDefinition'
      responses:
        "200":
          content:
            application/json:
              example:
                ID: 284acad18f44f3d4e9a0832ccf5fd1
                Message: API created
                Meta: 663cd8615715ec1405aafbea
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: API created
        "400":
          content:
            application/json:
              example:
                Message: version name header should be set with base API id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              example:
                Message: Found API with the same id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: if api with api exist
      summary: Create API Definition
      tags:
      - APIs
  /api/apis/{apiID}/keys/{keyID}:
    delete:
      description: "Deleting a key will remove it permanently from the system, however\
        \ analytics relating to that key will still be available."
      operationId: deleteApiKeyDetail
      parameters:
      - description: 'TODO::'
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: Set to true if the passed key is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      - description: ID of API the keys grant access to. Can either be the internal
          or external API ID.
        example: 546e885199c947147e7f39b7d6e8e984
        explode: false
        in: path
        name: apiID
        required: true
        schema:
          type: string
        style: simple
      - description: The Key ID
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Key deleted successfully
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key deleted
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Trying to access a key your org does not own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiID}/keys/{keyID}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Could not delete key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete key with API ID and Key ID
      tags:
      - Keys
    get:
      description: "Fetches the key that grant access to the API with the ID {apiID}\
        \ and key ID {keyID}."
      operationId: getApiKeyDetail
      parameters:
      - description: 'TODO::'
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: Set to true if the passed key ID is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      - description: ID of API the keys grant access to. Can either be the internal
          or external API ID.
        example: 546e885199c947147e7f39b7d6e8e984
        explode: false
        in: path
        name: apiID
        required: true
        schema:
          type: string
        style: simple
      - description: The Key ID
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key Data fetched
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Trying to access a key your org does not own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiID}/keys/{keyID}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
      summary: Get key details with API ID and Key ID
      tags:
      - Keys
    put:
      description: You can also manually add keys to Tyk using your own key-generation
        algorithm. It is recommended if using this approach to ensure that the OrgID
        being used in the API Definition and the key data is blank so that Tyk does
        not try to prepend or manage the key in any way.
      operationId: updateApiKeyDetail
      parameters:
      - description: If you are not sure if a key is hashed you can send this as true
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: Set to true if the passed key ID is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      - description: "Adding the suppress_reset parameter and setting it to 1, will\
          \ cause Tyk not to reset the quota limit that is in the current live quota\
          \ manager. By default Tyk will reset the quota in the live quota manager\
          \ (initialising it) when adding a key. Adding the `suppress_reset` flag\
          \ to the URL parameters will avoid this behaviour."
        explode: true
        in: query
        name: suppress_reset
        required: false
        schema:
          type: string
        style: form
      - description: ID of API the keys grant access to. Can either be the internal
          or external API ID.
        example: 546e885199c947147e7f39b7d6e8e984
        explode: false
        in: path
        name: apiID
        required: true
        schema:
          type: string
        style: simple
      - description: The Key ID
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key updated
        "400":
          content:
            application/json:
              example:
                Message: "User/Key object validation failed, most likely malformed\
                  \ input"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed input
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: "Unmarshalling request body failed, malformed"
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal Key data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: with API ID and Key ID
      tags:
      - Keys
  /api/apis/{apiId}:
    delete:
      description: Delete an API by ID
      operationId: deleteApi
      parameters:
      - description: ID of API to delete. Can either be internal or public API id.
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: API deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: Could not delete the API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Failed to delete
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve API detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api with given Id not found
      summary: Delete a single API by ID
      tags:
      - APIs
    get:
      description: Get an API by ID
      operationId: getApi
      parameters:
      - description: ID of API to get. Can either be internal or public API id.
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: Transform the response payload for graphql.
        example: "1"
        explode: true
        in: query
        name: graph
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                singleAPIDef:
                  $ref: '#/components/examples/singleAPIDef'
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          description: API definition
          headers:
            x-tyk-base-api-id:
              description: ID of the base API if the requested API is a version.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get a single API by ID
      tags:
      - APIs
    put:
      description: "Update an API Definition. api_id can be updated for On-Premise\
        \ installations, but it cannot be updated when the Dashboard resides in Tyk\
        \ Cloud. Updates to api_id in Tyk Cloud will be ignored."
      operationId: putApi
      parameters:
      - description: ID of API to get. Can either be internal or public API id.
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              api_definition:
                api_id: b84fe1a04e5648927971c0557971565c
                auth:
                  auth_header_name: authorization
                definition:
                  key: version
                  location: header
                name: Update api name
                org_id: 664a14650619d40001f1f00f
                proxy:
                  listen_path: /updated-tyk-api-test/
                  strip_listen_path: true
                  target_url: https://httpbin.org
                use_oauth2: true
                version_data:
                  not_versioned: true
                  versions:
                    Default:
                      name: Default
            schema:
              $ref: '#/components/schemas/ApiDefinition'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Api updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: API updated
        "400":
          content:
            application/json:
              example:
                Message: Invalid `id` value
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: the id sent in the body is not same as the id in the path parameter
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: api definition does not exist
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api with given Id not found
        "500":
          content:
            application/json:
              example:
                Message: Error while validating schema
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update API Definition
      tags:
      - APIs
  /api/apis/{apiId}/access:
    get:
      description: This will return APIAccessManagementPayload that has  two lists
        containing users and user groups that have access to an API
      operationId: getApiAccessRights
      parameters:
      - description: The API ID
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                userGroupIds:
                - 663a4ed6b6be920001b191aa
                - 663a4ed6b6be920001b191ab
                userIds:
                - 663b2a835715ecb6edef24e3
                - 663a5bbf5715ec8040251f2a
              schema:
                $ref: '#/components/schemas/AccessManagementPayload'
          description: APIAccessManagementPayload represents two lists containing
            users and user groups that have access to an API
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}/access"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: API not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api with this id does not exist
        "500":
          content:
            application/json:
              example:
                Message: failed to marshal ownership payload
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get API access rights (users and userGroups)
      tags:
      - APIs
    put:
      description: This will update the user group and users that have access to an
        api.The userIds and userGroup sent will entirely replace the existing userIds
        ids and userGroup ids.
      operationId: updateApiAccessRights
      parameters:
      - description: The API ID
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              userGroupIds:
              - 663a4ed6b6be920001b191aa
              - 663a4ed6b6be920001b191ab
              userIds:
              - 663a5bbf5715ec8040251f2a
            schema:
              $ref: '#/components/schemas/AccessManagementPayload'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Api access updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api access updated
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}/access"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: API not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: API with Id not found
        "500":
          content:
            application/json:
              example:
                Message: failed to unmarshal categories payload
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update API access rights (users and userGroups)
      tags:
      - APIs
  /api/apis/{apiId}/keys:
    get:
      description: "Lists keys that grant access to the API with the ID {apiID}."
      operationId: listApiKeys
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: ID of the API
        example: 663a4ed9b6be920001b191ae
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  keys:
                  - 5e9d9544a1dcd60001d0ed20a28c495beff140a4a6d8c272a1956b99
                  - 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
                  - 5e9d9544a1dcd60001d0ed2060ff87c0deab4a508dd2ac18ccb8b664
                pages: 1
              schema:
                $ref: '#/components/schemas/Keys'
          description: Paginated key IDS
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}/keys"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve keys
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when keys are hashed and hashed key listing is disabled
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal keys data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List Keys by API
      tags:
      - Keys
  /api/apis/{apiId}/keys/search:
    get:
      description: "Lists keys that grant access to the API with the ID {apiID}.When\
        \ q query parameter is passed it will only return keys that contains the string\
        \ sent by q"
      operationId: SearchKeys
      parameters:
      - description: Filter and return all keys that contain this text in there key_id
        example: itachi
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: ID of the API
        example: 663a4ed9b6be920001b191ae
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  keys:
                  - 5e9d9544a1dcd60001d0ed20itachi
                  - 5e9d9544a1dcd60001d0ed20ns-itachi
                pages: 1
              schema:
                $ref: '#/components/schemas/Keys'
          description: Paginated key IDS
        "400":
          content:
            application/json:
              example:
                Message: Could not search keys
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Could not search keys
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}/keys/search"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal User data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Search Keys by API
      tags:
      - Keys
  /api/apis/{apiId}/url:
    get:
      description: "This will return your api BasePath(your api listen path) ,Host(your\
        \ api domain or gateway hostname ) and ApiURL (full url to your api upstream\
        \ which is a combination of your the protocol the api uses (e.g http)+ host\
        \ name(e.g tyk.io) and the api listen_path )"
      operationId: getApiUrl
      parameters:
      - description: The API ID
        example: b84fe1a04e5648927971c0557971565c
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ApiURL: http://localhost:8080/rate-limit-proxy-api/
                BasePath: /rate-limit-proxy-api/
                Host: localhost:8080
              schema:
                $ref: '#/components/schemas/URLVals'
          description: Urls returned successfully
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/{apiId}/url"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      summary: Get API URLs
      tags:
      - APIs
  /api/apis/categories:
    get:
      description: 'Get a list of all the defined API categories and the number(count)
        of apis that are in each category '
      operationId: getAllApiCategories
      responses:
        "200":
          content:
            application/json:
              example:
                categories:
                - count: 3
                  name: tag2
                - count: 1
                  name: tag2
                - count: 1
                  name: tag3
              schema:
                $ref: '#/components/schemas/AllCategoriesResponse'
          description: API categories
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/categories"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Could not retrieve APIs
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get API Categories
      tags:
      - APIs
  /api/apis/groups:
    get:
      description: This will return a map/hashmap with categories as keys and the
        key values will be  a list that contains all the APIIDs that belong to that
        category.
      operationId: getAPIGroups
      responses:
        "200":
          content:
            application/json:
              example:
                '#tag2':
                - d1dfc6a927a046c54c0ed470f19757cc
                '#tag3':
                - d1dfc6a927a046c54c0ed470f19757cc
                httpbin:
                - d1dfc6a927a046c54c0ed470f19757cc
                tag1:
                - d1dfc6a927a046c54c0ed470f19757cc
                - 627efb71ebae49df7a853b9769b65fce
                tag2:
                - d1dfc6a927a046c54c0ed470f19757cc
                - 627efb71ebae49df7a853b9769b65fce
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: A map of groups with apis ids in that group
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve APIs
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unable to get groups e.g because database is down
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/groups"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal API groups data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get API Groups
      tags:
      - APIs
  /api/apis/keys:
    get:
      description: Return a paginated list of keys
      operationId: listKeys
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  keys:
                  - 5e9d9544a1dcd60001d0ed20a28c495beff140a4a6d8c272a1956b99
                  - 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
                  - 5e9d9544a1dcd60001d0ed2060ff87c0deab4a508dd2ac18ccb8b664
                pages: 1
              schema:
                $ref: '#/components/schemas/Keys'
          description: Paginated key IDS
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/keys"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal keys data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List All the Keys
      tags:
      - Keys
  /api/apis/keys/basic/{username}:
    post:
      description: "Create a Basic Auth user with the username specified in the path\
        \ {username}.Note you have to send password via(the basic_auth_data.password\
        \ field) in the request body"
      operationId: createBasicAuthUser
      parameters:
      - description: ' Username of Basic Auth user to create or update.'
        example: itachi
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              basic_auth_data:
                password: test123
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: User created successfully
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: "Unmarshalling request body failed, malformed"
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal Key data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create a Basic Auth User
      tags:
      - Keys
  /api/apis/oas:
    post:
      description: |-
        Create an API Definition in Tyk OAS API format.
        Note that the response includes the newly created Tyk OAS API Definition containing the unique identifier for the API (`id`). You can provide a value for `id` in the request body, otherwise Tyk will automatically generate a value.
      operationId: createApiOAS
      parameters:
      - description: The base API which the new version will be linked to.
        example: 663a4ed9b6be920001b191ae
        explode: true
        in: query
        name: base_api_id
        required: false
        schema:
          type: string
        style: form
      - description: "The version name of the base API while creating the first version.\
          \ This doesn't have to be sent for the next versions but if it is set, it\
          \ will override base API version name."
        example: Default
        explode: true
        in: query
        name: base_api_version_name
        required: false
        schema:
          type: string
        style: form
      - description: The version name of the created version.
        example: v2
        explode: true
        in: query
        name: new_version_name
        required: false
        schema:
          type: string
        style: form
      - description: "If true, the new version is set as default version."
        example: true
        explode: true
        in: query
        name: set_default
        required: false
        schema:
          type: boolean
        style: form
      - description: The asset ID of template to apply while creating the OAS API
        example: my-unique-template-id
        explode: true
        in: query
        name: templateID
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              oasExample:
                $ref: '#/components/examples/oasExample'
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          content:
            application/json:
              example:
                ID: 4c1c0d8fc885401053ddac4e39ef676b
                Message: API created
                Meta: 665597e0b646b300011acb69
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OAS Created
        "400":
          content:
            application/json:
              example:
                Message: 'couldn''t read body '
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Malformed data
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: could not retrieve detail of apiID 62a0ec9092faf50001395817
                  in org 82a0ec9052faf50001395817
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              example:
                Message: "Found API with the same id: "
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "500":
          content:
            application/json:
              example:
                Message: Error while validating schema
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create OAS API
      tags:
      - OAS APIs
  /api/apis/oas/{apiId}:
    delete:
      description: Deleting an API definition will remove the file from the file store.
        The API definition will NOT be unloaded and a separate reload request will
        need to be made to disable the API endpoint.
      operationId: deleteOASApi
      parameters:
      - description: ID of the api you want to delete
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: API deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: deleted successfully
        "400":
          content:
            application/json:
              example:
                Message: Could not delete the API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve API detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: api not found
      summary: Delete OAS API
      tags:
      - OAS APIs
    get:
      description: Get a single API definition in OAS format
      operationId: getOASAPIDetails
      parameters:
      - description: ID of the api you want to fetch
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: Transform the response payload for graphql.
        example: "1"
        explode: true
        in: query
        name: graph
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                oasExample:
                  $ref: '#/components/examples/oasExample'
              schema:
                $ref: '#/components/schemas/schema'
          description: fetched api
          headers:
            x-tyk-base-api-id:
              description: ID of the base API if the requested API is a version.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: bad request or Api not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get OAS API Details
      tags:
      - OAS APIs
    patch:
      description: Update an OAS format API. You can use this endpoint to update the
        OAS part of your Tyk API definition.This endpoint allows you to configure
        the Tyk OAS extension based on the query parameters provided (similar to import)
      operationId: patchApiOAS
      parameters:
      - description: ID of the api you want to patch
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: Upstream URL for the API
        example: https://localhost:8080
        explode: true
        in: query
        name: upstreamURL
        required: false
        schema:
          type: string
        style: form
      - description: Listen path for the API
        example: /user-test/
        explode: true
        in: query
        name: listenPath
        required: false
        schema:
          type: string
        style: form
      - description: Custom domain for the API
        example: tyk.io
        explode: true
        in: query
        name: customDomain
        required: false
        schema:
          type: string
        style: form
      - description: Enable validateRequest middleware for all endpoints having a
          request body with media type application/json
        example: true
        explode: true
        in: query
        name: validateRequest
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable mockResponse middleware for all endpoints having responses
          configured.
        example: true
        explode: true
        in: query
        name: mockResponse
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable allowList middleware for all endpoints
        example: true
        explode: true
        in: query
        name: allowList
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable/disable the authentication mechanism in your Tyk Gateway
          for your OAS API
        example: true
        explode: true
        in: query
        name: authentication
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiOAS_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataFile'
        description: The content of the file should be the OpenAPI document in JSON
          format (without x-tyk-api-gateway extension).
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Api updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: patched api
        "400":
          content:
            application/json:
              example:
                Message: Invalid `id` value
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Failed to update Org object to DB
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: forbidden
        "404":
          content:
            application/json:
              example:
                Message: API not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api not found
      summary: Patch a single OAS API by ID
      tags:
      - OAS APIs
    put:
      description: Updating an API definition uses the same signature object as a
        `POST`. It will first ensure that the API ID being updated is the same as
        in the `PUT` object.<br/>Updating will completely replace the file descriptor
        and will not change an API Definition that has already been loaded. The hot-reload
        endpoint will need to be called to push the new definition to live.
      operationId: updateApiOAS
      parameters:
      - description: ID of the api you want to update
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              oasExample:
                $ref: '#/components/examples/oasExample'
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Api updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: updated api
        "400":
          content:
            application/json:
              example:
                Message: the payload should contain x-tyk-api-gateway
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Malformed API data
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Found API with same url
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: api definition does not exist
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: api not found
        "500":
          content:
            application/json:
              example:
                Message: Error while validating schema
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update OAS API
      tags:
      - OAS APIs
  /api/apis/oas/{apiId}/categories:
    get:
      description: Get a list of the API categories associated with the specified
        API
      operationId: getApiCategories
      parameters:
      - description: ID of the api
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                categories:
                - developers
                - devops
                - research
              schema:
                $ref: '#/components/schemas/CategoriesPayload'
          description: Category fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}/categories"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: API not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: APi not found
        "500":
          content:
            application/json:
              example:
                Message: failed to marshal categories payload
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get OAS API's Categories
      tags:
      - OAS APIs
    put:
      description: Update the list of API categories associated with the specified
        API
      operationId: updateApiCategories
      parameters:
      - description: ID of the api
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              categories:
              - dev
              - testers
              - messages
            schema:
              $ref: '#/components/schemas/CategoriesPayload'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Api categories updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: categories updated
        "400":
          content:
            application/json:
              example:
                Message: failed to update ApiDef object to DB
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request data
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}/categories"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: API not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Api not found
        "500":
          content:
            application/json:
              example:
                Message: failed to update ApiDef object to DB
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update Oas Api categories
      tags:
      - OAS APIs
  /api/apis/oas/{apiId}/export:
    get:
      description: download API definition in OAS format(only APIs saved in OAS format)
      operationId: downloadApiOASPublic
      parameters:
      - description: ID of the api you want to export
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: "Mode of OAS export, by default mode could be empty which means\
          \ to export OAS spec including OAS Tyk extension.When mode=public, OAS spec\
          \ excluding Tyk extension is exported"
        example: public
        explode: true
        in: query
        name: mode
        required: false
        schema:
          enum:
          - public
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              example: !!binary |-
                ewoJCSAgIm9wZW5hcGkiOiAiMy4wLjMiLAoJCSAgICJpbmZvIjogewoJCQkidGl0bGUiOiAiT0FT
                IFNhbXBsZSIsCgkJCSJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGEgc2FtcGxlIE9BUy4iLAoJCQki
                dmVyc2lvbiI6ICIxLjAuMCIKCQkgIH0sCgkJICAic2VydmVycyI6IFsKCQkJewoJCQkgICJ1cmwi
                OiAiaHR0cHM6Ly9sb2NhbGhvc3Q6ODA4MCIKCQkJfQoJCSAgXSwKCQkgICJzZWN1cml0eSI6IFsK
                CQkJewoJCQkgICJiZWFyZXJBdXRoIjogW10KCQkJfQoJCSAgXSwKCQkgICJwYXRocyI6IHsKCQkJ
                Ii9hcGkvc2FtcGxlL3VzZXJzIjogewoJCQkgICJnZXQiOiB7CgkJCQkidGFncyI6IFsKCQkJCSAg
                InVzZXJzIgoJCQkJXSwKCQkJCSJzdW1tYXJ5IjogIkdldCB1c2VycyIsCgkJCQkib3BlcmF0aW9u
                SWQiOiAiZ2V0VXNlcnMiLAoJCQkJInJlc3BvbnNlcyI6IHsKCQkJCSAgIjIwMCI6IHsKCQkJCQki
                ZGVzY3JpcHRpb24iOiAiZmV0Y2hlZCB1c2VycyIsCgkJCQkJImNvbnRlbnQiOiB7CgkJCQkJICAi
                YXBwbGljYXRpb24vanNvbiI6IHsKCQkJCQkJInNjaGVtYSI6IHsKCQkJCQkJICAidHlwZSI6ICJh
                cnJheSIsCgkJCQkJCSAgIml0ZW1zIjogewoJCQkJCQkJInR5cGUiOiAib2JqZWN0IiwKCQkJCQkJ
                CSJwcm9wZXJ0aWVzIjogewoJCQkJCQkJICAibmFtZSI6IHsKCQkJCQkJCQkidHlwZSI6ICJzdHJp
                bmciCgkJCQkJCQkgIH0KCQkJCQkJCX0KCQkJCQkJICB9CgkJCQkJCX0KCQkJCQkgIH0KCQkJCQl9
                CgkJCQkgIH0KCQkJCX0KCQkJICB9CgkJCX0KCQkgIH0sCgkJICAgImNvbXBvbmVudHMiOiB7CgkJ
                CSJzZWN1cml0eVNjaGVtZXMiOiB7CgkJCSAgImJlYXJlckF1dGgiOiB7CgkJCQkidHlwZSI6ICJo
                dHRwIiwKCQkJCSJzY2hlbWUiOiAiYmVhcmVyIiwKCQkJCSJkZXNjcmlwdGlvbiI6ICJUaGUgQVBJ
                IEFjY2VzcyBDcmVkZW50aWFscyIKCQkJICB9CgkJCX0KCQkgIH0sCgkJCSJ4LXR5ay1hcGktZ2F0
                ZXdheSI6IHsKCQkJCQkiaW5mbyI6IHsKCQkJCQkJIm5hbWUiOiAidXNlciIsCgkJCQkJCSJzdGF0
                ZSI6IHsKCQkJCQkJCSJhY3RpdmUiOiB0cnVlCgkJCQkJCX0KCQkJCQl9LAoJCQkJCSJ1cHN0cmVh
                bSI6IHsKCQkJCQkJInVybCI6ICJodHRwczovL2xvY2FsaG9zdDo4MDgwIgoJCQkJCX0sCgkJCQkJ
                InNlcnZlciI6IHsKCQkJCQkJImxpc3RlblBhdGgiOiB7CgkJCQkJCQkidmFsdWUiOiAiL3VzZXIt
                dGVzdC8iLAoJCQkJCQkJInN0cmlwIjogdHJ1ZQoJCQkJCQl9CgkJCQkJfQoJCQkJfQogICAgfQ==
              schema:
                format: binary
                type: string
          description: Fetched successfully
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve Api detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: api not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}/export"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      summary: Export OAS API
      tags:
      - OAS APIs
  /api/apis/oas/{apiId}/versions:
    get:
      description: List all the  versions of an OAS API
      operationId: listOASApiVersions
      parameters:
      - description: ID of the api you want to fetch
        example: 4c1c0d8fc885401053ddac4e39ef676b
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: Search for API version name
        example: Sample oas
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Filter for internal or external API versions
        example: internal
        explode: true
        in: query
        name: accessType
        required: false
        schema:
          enum:
          - internal
          - external
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                apis:
                - expirationDate: 2024-11-30 12:00
                  id: 5b633de8673e40e44bc88b6b248f0937
                  internal: false
                  isDefaultVersion: true
                  name: user
                  versionName: Default
                - expirationDate: 2024-11-30 12:00
                  id: 0fec4eb890cf4b8c5cb6fc011456c315
                  internal: false
                  isDefaultVersion: false
                  name: user
                  versionName: v2
                pages: 1
              schema:
                $ref: '#/components/schemas/VersionMetas'
          description: version fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oas/{apiId}/versions"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve API detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: api not found
      summary: List OAS API Versions
      tags:
      - OAS APIs
  /api/apis/oas/import:
    post:
      description: For use with an existing OpenAPI document that you want to expose
        via your Tyk Gateway.<br/> Create a new Tyk OAS API from an OpenAPI document
        in JSON format (without x-tyk-api-gateway extension).<br/>The payload can
        contain either a fully fledged OpenAPI document or a URL pointing to an OpenAPI
        document.
      operationId: importOAS
      parameters:
      - description: Upstream URL for the API
        example: https://localhost:8080
        explode: true
        in: query
        name: upstreamURL
        required: false
        schema:
          type: string
        style: form
      - description: Listen path for the API
        example: /user-test/
        explode: true
        in: query
        name: listenPath
        required: false
        schema:
          type: string
        style: form
      - description: Custom domain for the API
        example: tyk.io
        explode: true
        in: query
        name: customDomain
        required: false
        schema:
          type: string
        style: form
      - description: Enable validateRequest middleware for all endpoints having a
          request body with media type application/json
        example: true
        explode: true
        in: query
        name: validateRequest
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable mockResponse middleware for all endpoints having responses
          configured.
        example: true
        explode: true
        in: query
        name: mockResponse
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable allowList middleware for all endpoints
        example: true
        explode: true
        in: query
        name: allowList
        required: false
        schema:
          type: boolean
        style: form
      - description: Enable/disable the authentication mechanism in your Tyk Gateway
          for your OAS API
        example: true
        explode: true
        in: query
        name: authentication
        required: false
        schema:
          type: boolean
        style: form
      - description: The asset ID of template to apply while importing an OAS API.
        example: my-unique-template-id
        explode: true
        in: query
        name: templateID
        required: false
        schema:
          type: string
        style: form
      - description: The base API which the new version will be linked to.
        example: 663a4ed9b6be920001b191ae
        explode: true
        in: query
        name: base_api_id
        required: false
        schema:
          type: string
        style: form
      - description: "The version name of the base API while creating the first version.\
          \ This doesn't have to be sent for the next versions but if it is set, it\
          \ will override base API version name."
        example: Default
        explode: true
        in: query
        name: base_api_version_name
        required: false
        schema:
          type: string
        style: form
      - description: The version name of the created version.
        example: v2
        explode: true
        in: query
        name: new_version_name
        required: false
        schema:
          type: string
        style: form
      - description: "If true, the new version is set as default version."
        example: true
        explode: true
        in: query
        name: set_default
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiOAS_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataFile'
        description: The content of the file should be the OpenAPI document in JSON
          format (without x-tyk-api-gateway extension).
      responses:
        "200":
          content:
            application/json:
              example:
                ID: 78ade81be12349087e194c858f06f595
                Message: API created
                Meta: 6656cda15715ec8ddb0e7e7c
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OAS Imported
        "400":
          content:
            application/json:
              example:
                Message: the import payload should not contain x-tyk-api-gateway
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: the user does not have the rights to apply templates
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              example:
                Message: "Found API with the same id: "
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "500":
          content:
            application/json:
              example:
                Message: Failed to save new Org object to DB
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Import OAS
      tags:
      - OAS APIs
  /api/apis/oauth/{apiId}:
    get:
      description: Return all the auth 2 clients that have been registered with you
        tyk instance
      operationId: getOathClientsList
      parameters:
      - description: The API’s ID.
        example: e95400eba23c4a2d4622a722be06fe95
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apps:
                - client_id: 2a06b398c17f46908de3dffcb71ef87d
                  client_name: ""
                  dcr_registration:
                    access_token: ""
                    client_uri: ""
                    provider: ""
                  description: google client
                  meta_data:
                    user_id: 362b3fb9a1d5e4f00017226f5
                  policy_id: 665d51505715ec2d76022c87
                  redirect_uri: https://httpbin.org/ip
                  secret: MmQwNTI5NGQtYjU0YS00NjMyLWIwZjktNTZjY2M1ZjhjYWY0
                pages: 1
              schema:
                $ref: '#/components/schemas/OAuthApps'
          description: Fetched successfully
        "400":
          content:
            application/json:
              example:
                Message: API Reference not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not enough permissions or  Api not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oauth/{apiId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve apps list
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal key data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List OAuth Clients
      tags:
      - Oauth
    post:
      description: "Client apps are created dynamically, the only parameter required\
        \ to create a new client app with Tyk is to specify the redirect URI, this\
        \ is used as part of the client authentication and cannot be edited later.Please\
        \ note that if you don't attach a policy to the OAuth client you will need\
        \ to provide dynamic key rules to client authorization endpoint."
      operationId: createNewClientApp
      parameters:
      - description: The API’s ID.
        example: e95400eba23c4a2d4622a722be06fe95
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              meta_data:
                user_id: 362b3fb9a1d5e4f00017226f5
              policy_id: 665d51505715ec2d76022c87
              redirect_uri: https://httpbin.org/ip
            schema:
              $ref: '#/components/schemas/NewClientRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                client_id: 2a06b398c17f46908de3dffcb71ef87d
                client_name: ""
                dcr_registration:
                  access_token: ""
                  client_uri: ""
                  provider: ""
                description: google client
                meta_data:
                  user_id: 362b3fb9a1d5e4f00017226f5
                policy_id: 665d51505715ec2d76022c87
                redirect_uri: https://httpbin.org/ip
                secret: MmQwNTI5NGQtYjU0YS00NjMyLWIwZjktNTZjY2M1ZjhjYWY0
              schema:
                $ref: '#/components/schemas/OAuthClient'
          description: client created
        "400":
          content:
            application/json:
              example:
                Message: API Reference not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Request body malformed
        "500":
          content:
            application/json:
              example:
                Message: Could not retrieve policy details
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create a new OAuth2.0 Client
      tags:
      - Oauth
  /api/apis/oauth/{apiId}/{clientId}:
    delete:
      description: You can delete an OAuth client using this endpoint. Please note
        that tokens issued with the client ID will still be valid until they expire
      operationId: deleteOathClient
      parameters:
      - description: The API’s ID.
        example: e95400eba23c4a2d4622a722be06fe95
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: The Client ID.
        example: 2a06b398c17f46908de3dffcb71ef87
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: OAuth Client deleted successfully
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Deleted Successfully
        "400":
          content:
            application/json:
              example:
                Message: API Reference not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: You don't have access to this
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: You have no access
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve app detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not found
        "500":
          content:
            application/json:
              example:
                Message: Could not remove app
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete OAuth Client
      tags:
      - Oauth
    get:
      description: 'Get Single  OAuth Client Details with its client ID '
      operationId: getOAuthClientDetail
      parameters:
      - description: The API’s ID.
        example: e95400eba23c4a2d4622a722be06fe95
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: The Client ID.
        example: 2a06b398c17f46908de3dffcb71ef87
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                client_id: 2a06b398c17f46908de3dffcb71ef87d
                client_name: ""
                dcr_registration:
                  access_token: ""
                  client_uri: ""
                  provider: ""
                description: google client
                meta_data:
                  user_id: 362b3fb9a1d5e4f00017226f5
                policy_id: 665d51505715ec2d76022c87
                redirect_uri: https://httpbin.org/ip
                secret: MmQwNTI5NGQtYjU0YS00NjMyLWIwZjktNTZjY2M1ZjhjYWY0
              schema:
                $ref: '#/components/schemas/OAuthClient'
          description: Details fetched successfully
        "400":
          content:
            application/json:
              example:
                Message: API Reference not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: You don't have access to this
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: You have no access
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve app detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal app data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get Single OAuth Client Details
      tags:
      - Oauth
  /api/apis/oauth/{apiId}/{clientId}/tokens:
    get:
      description: This endpoint allows you to retrieve a list of all current tokens
        and their expiry date for a provided API ID and OAuth-client ID.
      operationId: getClientTokens
      parameters:
      - description: The API’s ID.
        example: e95400eba23c4a2d4622a722be06fe95
        explode: false
        in: path
        name: apiId
        required: true
        schema:
          type: string
        style: simple
      - description: The Client ID.
        example: 2a06b398c17f46908de3dffcb71ef87
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - code: 5a7d110be6355b0c071cc339327563cb45174ae387f52f87a80d2496
                expires: 1.618158407E9
              - code: 5a7d110be6355b0c071cc33988884222b0cf436eba7979c6c51d6dbd
                expires: 1.618158594E9
              schema:
                $ref: '#/components/schemas/OAuthClientTokens'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: API Reference not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/oauth/{apiId}/{clientId}/tokens"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve tokens
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal tokens data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List OAuth Client Tokens
      tags:
      - Oauth
  /api/apis/search:
    get:
      description: This will return a list of apis whose names matches the provided
        q query parameter.If q is not sent all apis will be returned.The returned
        results are paginated.
      operationId: searchApis
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the apis you want to search
        example: Rate Limit Path API 1
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                paginatedApiExample:
                  $ref: '#/components/examples/paginatedApiExample'
              schema:
                $ref: '#/components/schemas/ApiDefinitions'
          description: List of API definitions
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve APIs
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/apis/search"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal APIs data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Search List of APIs
      tags:
      - APIs
  /api/assets:
    get:
      description: Retrieves all types of assets with optional kind filter.
      operationId: listAssets
      parameters:
      - description: Filter assets by kind (optional).
        example: oas-template
        explode: true
        in: query
        name: kind
        required: false
        schema:
          default: oas-template
          enum:
          - oas-template
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - _id: "363634636164353135373135656333663739386262636433"
                data:
                  info:
                    title: Our Sample OAS
                    version: 1.0.0
                  openapi: 3.0.3
                  paths:
                    /anything:
                      post:
                        operationId: anythingpost
                        responses:
                          "200":
                            description: Post created
                  x-tyk-api-gateway:
                    middleware:
                      global:
                        cache:
                          cacheAllSafeRequests: true
                          enabled: true
                          timeout: 5
                      operations:
                        anythingpost:
                          requestSizeLimit:
                            enabled: true
                            value: 100
                description: My first template
                id: my-unique-template-id
                kind: oas-template
                last_updated: 2024-05-21T17:18:57.294797+03:00
                name: my-template
                org_id: 5e9d9544a1dcd60001d0ed20
              schema:
                items:
                  $ref: '#/components/schemas/Asset'
                type: array
          description: templates fetched
        "400":
          content:
            application/json:
              example:
                Message: "unsupported asset kind: 'oas-temp'"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 'sending a  type that is not supported in the kind query parameter '
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/assets"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: error listing assets
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Retrieve list of assets
      tags:
      - Assets
    post:
      description: Create an assets that you can use as a blueprint from which you
        can create a new Tyk OAS API definition.
      operationId: addAsset
      requestBody:
        content:
          application/json:
            example:
              data:
                info:
                  title: Our Sample OAS
                  version: 1.0.0
                openapi: 3.0.3
                paths:
                  /anything:
                    post:
                      operationId: anythingpost
                      responses:
                        "200":
                          description: post created
                x-tyk-api-gateway:
                  middleware:
                    global:
                      cache:
                        cacheAllSafeRequests: true
                        enabled: true
                        timeout: 5
              description: My first template
              id: my-unique-template-id
              kind: oas-template
              name: my-template
            schema:
              $ref: '#/components/schemas/addAsset_request'
        description: Sample asset
      responses:
        "201":
          content:
            application/json:
              example:
                ID: my-unique-template-id
                Message: asset created
                Meta: 664d86e35715ec0d370bbe11
                Status: success
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset created
        "400":
          content:
            application/json:
              example:
                Message: error reading json body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed  request body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/assets"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              example:
                Message: "asset ID already exists: 'my-unique-template-id.'"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: trying to add an asset with an id that already exist
        "422":
          content:
            application/json:
              example:
                Message: "unsupported asset kind: 'oas-templat'"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: validation failed
        "500":
          content:
            application/json:
              example:
                Message: error adding asset
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create an asset
      tags:
      - Assets
  /api/assets/{assetID}:
    delete:
      description: Remove an asset ID.
      operationId: deleteAsset
      parameters:
      - description: ID of the asset to delete - this value can be the database ID
          of the asset or the custom ID provided during creation/update.
        examples:
          customID:
            summary: Custom template ID
            value: my-unique-template-id
          dbID:
            summary: a unique database identifier assigned by Tyk
            value: 664cad515715ec3f798bbcd3
        explode: false
        in: path
        name: assetID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: asset removed successfully
                Meta: null
                Status: success
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset deleted
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/assets/{assetID}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: asset not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset with ID does not exist
        "500":
          content:
            application/json:
              example:
                Message: error removing asset
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete an asset by ID.
      tags:
      - Assets
    get:
      description: Retrieve an asset by ID.
      operationId: getAsset
      parameters:
      - description: ID of the asset to retrieve - this value can be the database
          ID of the asset or the custom ID provided during creation/update.
        examples:
          customID:
            summary: Custom template ID
            value: my-unique-template-id
          dbID:
            summary: a unique database identifier assigned by Tyk
            value: 664cad515715ec3f798bbcd3
        explode: false
        in: path
        name: assetID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                _id: "363634636164353135373135656333663739386262636433"
                data:
                  info:
                    title: Our Sample OAS
                    version: 1.0.0
                  openapi: 3.0.3
                  paths:
                    /anything:
                      post:
                        operationId: anythingpost
                        responses:
                          "200":
                            description: Post created
                  x-tyk-api-gateway:
                    middleware:
                      global:
                        cache:
                          cacheAllSafeRequests: true
                          enabled: true
                          timeout: 5
                      operations:
                        anythingpost:
                          requestSizeLimit:
                            enabled: true
                            value: 100
                description: My first template
                id: my-unique-template-id
                kind: oas-template
                last_updated: 2024-05-21T17:18:57.294797+03:00
                name: my-template
                org_id: 5e9d9544a1dcd60001d0ed20
              schema:
                $ref: '#/components/schemas/Asset'
          description: asset fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/assets/{assetID}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: asset not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset with ID does not exist
        "500":
          content:
            application/json:
              example:
                Message: error fetching asset
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Retrieve an asset.
      tags:
      - Assets
    put:
      description: Update an asset by ID.You cannot update _id(database id assigned
        by tyk)
      operationId: updateAsset
      parameters:
      - description: ID of the asset to update - this value can be the database ID
          of the asset or the custom ID provided during creation/update.
        examples:
          customID:
            summary: Custom template ID
            value: my-unique-template-id
          dbID:
            summary: a unique database identifier assigned by Tyk
            value: 664cad515715ec3f798bbcd3
        explode: false
        in: path
        name: assetID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              data:
                info:
                  title: Our Sample OAS
                  version: 1.0.0
                openapi: 3.0.3
                paths:
                  /anything:
                    post:
                      operationId: anythingpost
                      responses:
                        "200":
                          description: post created
                x-tyk-api-gateway:
                  middleware:
                    global:
                      cache:
                        cacheAllSafeRequests: true
                        enabled: true
                        timeout: 5
              description: My first template
              id: my-unique-template-id
              kind: oas-template
              name: Update Asset Name example
            schema:
              $ref: '#/components/schemas/addAsset_request'
        description: update name example
      responses:
        "200":
          content:
            application/json:
              example:
                ID: my-unique-template-id
                Message: asset updated
                Meta: 664d86e35715ec0d370bbe11
                Status: success
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset updated
        "400":
          content:
            application/json:
              example:
                Message: error reading json body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed  request body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/assets/{assetID}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: asset not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: asset with ID does not exist
        "409":
          content:
            application/json:
              example:
                Message: "asset ID already exists: 'my-unique-template-id.'"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: trying to update an asset ID with an id that is used by another
            asset
        "422":
          content:
            application/json:
              example:
                Message: "unsupported asset kind: 'oas-templat'"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: validation failed
        "500":
          content:
            application/json:
              example:
                Message: error fetching asset
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update an asset by ID.
      tags:
      - Assets
  /api/certs:
    get:
      description: "Return list of certificates.If you send the mode query parameter\
        \ with the value `detailed` the certificates returned will be more detailed(Will\
        \ contains all certs basic details).To retrieve a list with all the certificate\
        \ details use [this endpoint](#operation/listDetailedCertificates).If the\
        \ mode query parameter is omitted or is empty this endpoint will only return\
        \ the certificates ids.The list of certificates returned is paginated."
      operationId: listCertificates
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: "Set to detailed to get certificates that are more detailed(Will\
          \ contains certs basic details).To retrieve a list of certificates with\
          \ all the certificate details use [this endpoint](#operation/listDetailedCertificates)"
        example: detailed
        explode: true
        in: query
        name: mode
        required: false
        schema:
          enum:
          - detailed
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                detailed_mode:
                  summary: Returned when you send mode=detailed in query parameter
                  value:
                    cert_basics:
                    - dns_names:
                      - .*itachi.io
                      has_private: false
                      id: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
                      issuer_cn: tyk-gateway-2.localhost
                      not_after: 2025-05-19T05:23:10Z
                      not_before: 2024-05-19T05:23:10Z
                      subject_cn: tyk-gateway-2.localhost
                    - dns_names:
                      - .*tyk.io
                      has_private: false
                      id: 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                      issuer_cn: tyk.io
                      not_after: 2034-03-26T08:46:37Z
                      not_before: 2024-03-25T08:46:37Z
                      subject_cn: tyk.io
                    pages: 1
                empty_mode:
                  summary: Returned if `mode` in query parameter is empty
                  value:
                    certs:
                    - 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
                    - 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                    pages: 1
              schema:
                $ref: '#/components/schemas/listCertificates_200_response'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve certs
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to retrieve certificates
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for certificates basics list
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List Certificates
      tags:
      - Certs
    post:
      description: "Upload new SSL certificate in PEM format(you should upload as\
        \ a file). If the certificate should have a private key, convert both the\
        \ public certificate and the associated private key to PEM format and concatenate\
        \ them to a single file.You can only upload one certificate at a time"
      operationId: createCertificates
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataFile'
        description: file containing the certs
      responses:
        "200":
          content:
            application/json:
              example:
                id: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
                message: Certificate added
                status: ok
              schema:
                $ref: '#/components/schemas/APICertificateStatusMessage'
          description: certificates created
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: "Could not create certificate: Certificate with 5e9d9...\
                  \ id already exists"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to create certs
        "500":
          content:
            application/json:
              example:
                Message: "Failed to read response body, body empty"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: sending data without the certs file
      summary: Create Certificate
      tags:
      - Certs
  /api/certs/{certId}:
    delete:
      description: Delete certificate by their id
      operationId: deleteCertificates
      parameters:
      - description: Id of the certificate you want to delete
        example: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
        explode: false
        in: path
        name: certId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                message: message
                status: status
              schema:
                $ref: '#/components/schemas/ApiStatusMessage'
          description: certs deleted
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned certificate
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: trying to delete certs you don't own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs/{certId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: 'Could not delete certificate:'
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed to delete certs
      summary: Delete Certificate
      tags:
      - Certs
    get:
      description: Get a single certificate details with the certificate's ID
      operationId: getCertificate
      parameters:
      - description: Id of the certificate you want to fetch
        example: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
        explode: false
        in: path
        name: certId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                dns_names:
                - .*tyk.io
                fingerprint: 7c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                has_private: false
                id: 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                issuer:
                  CommonName: tyk.io
                  Country:
                  - 'Peachtree '
                  ExtraNames:
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 6
                    Value: 'Peachtree '
                  Locality:
                  - JN
                  Names:
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 6
                    Value: Peachtree
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 10
                    Value: tyk
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 11
                    Value: tyk
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 3
                    Value: tyk.io
                  - Type:
                    - 1
                    - 2
                    - 840
                    - 113549
                    - 1
                    - 9
                    - 1
                    Value: support@tyk.io
                  Organization:
                  - tyk
                  OrganizationalUnit:
                  - tyk
                  PostalCode:
                  - "00010"
                  Province:
                  - San Jore
                  SerialNumber: ""
                  StreetAddress:
                  - River side drive
                not_after: 2034-03-26T08:46:37Z
                not_before: 2024-03-25T08:46:37Z
                subject:
                  CommonName: tyk.io
                  Country:
                  - 'Peachtree '
                  ExtraNames:
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 6
                    Value: 'Peachtree '
                  Locality:
                  - JN
                  Names:
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 6
                    Value: 'Peachtree '
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 10
                    Value: tyk
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 11
                    Value: tyk
                  - Type:
                    - 2
                    - 5
                    - 4
                    - 3
                    Value: tyk.io
                  - Type:
                    - 1
                    - 2
                    - 840
                    - 113549
                    - 1
                    - 9
                    - 1
                    Value: support@tyk.io
                  Organization:
                  - tyk
                  OrganizationalUnit:
                  - tyk
                  PostalCode:
                  - "00010"
                  Province:
                  - San Jore
                  SerialNumber: ""
                  StreetAddress:
                  - River side drive
              schema:
                $ref: '#/components/schemas/CertsCertificateMeta'
          description: certificates fetched
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned certificate
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: trying to fetch certs you don't own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs/{certId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: "Could not retrieve certificate details: Certificate with\
                  \ given SHA256 fingerprint not found"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed to fetch certs
      summary: Get single certificate with ID
      tags:
      - Certs
  /api/certs/dependencies/{certId}:
    delete:
      description: This api will remove the certificates from any apis that contains
        it as an upstream certificates or as a client certificate.It will also remove
        any key that uses this certs
      operationId: deleteCertificateDependencies
      parameters:
      - description: Id of the certificate you want to delete dependencies for
        example: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
        explode: false
        in: path
        name: certId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Certificate dependencies deletion successfully attempted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: dependencies deleted
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs/dependencies/{certId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      summary: Delete Certificate Dependencies
      tags:
      - Certs
    get:
      description: This will return the API IDS and API names of all apis that uses
        this certificates as either upstream certificates or as client certificates.
      operationId: getCertificateDependencies
      parameters:
      - description: Id of the certificate you want to fetch dependencies for
        example: 5e9d9544a1dcd60001d0ed208edce514c2d0a866063550c64d6c90be99d01561ac5aa7e82b8610b7e273d37d
        explode: false
        in: path
        name: certId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                certID: 5e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
                client_cert_api_names:
                - Ngrok Dashboard API
                client_cert_apis:
                - edc9b2bd3e7b4cc55c4ff0a7e1529b45
                key_cert: 5e9d9544a1dcd60001d0ed205e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
                upstream_cert_api_names:
                - External HTTPbin
                upstream_cert_apis:
                - 627efb71ebae49df7a853b9769b65fce
              schema:
                $ref: '#/components/schemas/CertificateDependencies'
          description: Dependencies fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs/dependencies/{certId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      summary: Get Certificate Dependencies
      tags:
      - Certs
  /api/certs/details:
    get:
      description: Return a list that contains certificates and their full details.
      operationId: listDetailedCertificates
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                certificates:
                - dns_names:
                  - .*tyk.io
                  fingerprint: 7c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                  has_private: false
                  id: 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
                  issuer:
                    CommonName: tyk.io
                    Country:
                    - 'Peachtree '
                    ExtraNames:
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 6
                      Value: 'Peachtree '
                    Locality:
                    - JN
                    Names:
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 6
                      Value: Peachtree
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 10
                      Value: tyk
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 11
                      Value: tyk
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 3
                      Value: tyk.io
                    - Type:
                      - 1
                      - 2
                      - 840
                      - 113549
                      - 1
                      - 9
                      - 1
                      Value: support@tyk.io
                    Organization:
                    - tyk
                    OrganizationalUnit:
                    - tyk
                    PostalCode:
                    - "00010"
                    Province:
                    - San Jore
                    SerialNumber: ""
                    StreetAddress:
                    - River side drive
                  not_after: 2034-03-26T08:46:37Z
                  not_before: 2024-03-25T08:46:37Z
                  subject:
                    CommonName: tyk.io
                    Country:
                    - 'Peachtree '
                    ExtraNames:
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 6
                      Value: 'Peachtree '
                    Locality:
                    - JN
                    Names:
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 6
                      Value: 'Peachtree '
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 10
                      Value: tyk
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 11
                      Value: tyk
                    - Type:
                      - 2
                      - 5
                      - 4
                      - 3
                      Value: tyk.io
                    - Type:
                      - 1
                      - 2
                      - 840
                      - 113549
                      - 1
                      - 9
                      - 1
                      Value: support@tyk.io
                    Organization:
                    - tyk
                    OrganizationalUnit:
                    - tyk
                    PostalCode:
                    - "00010"
                    Province:
                    - San Jore
                    SerialNumber: ""
                    StreetAddress:
                    - River side drive
                pages: 1
              schema:
                $ref: '#/components/schemas/CertificateDetailedList'
          description: fetched certificates
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve certs details
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: could not connect to gateway
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/certs/details"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for certificate list
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List all Certificates Details
      tags:
      - Certs
  /api/examples:
    get:
      description: "Returns a list of all example API definitions available in \"\
        repository.json\" file defined in \"x-tyk-examples-index\" header. If the\
        \ header is not provided, Tyk will use the default value of this header which\
        \ is `tyk-examples` repo as detailed below"
      operationId: getAPIExamples
      parameters:
      - description: URL that points to the index file (repository.json) or root of
          a repository housing examples.
        example: https://raw.githubusercontent.com/TykTechnologies/tyk-examples/main/repository.json
        explode: false
        in: header
        name: x-tyk-examples-index
        required: false
        schema:
          default: https://raw.githubusercontent.com/TykTechnologies/tyk-examples/main/repository.json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - location: udg/vat-checker
                name: VAT number checker UDG
                shortDescription: Simple REST API wrapped in GQL using Universal Data
                  Graph that allows user to check validity of a VAT number and display
                  some details about it.
              - location: udg/geo-info
                name: Geo information about the World
                shortDescription: Countries GQL API extended with information from
                  geocode.xyz
              - location: udg/react-conferences
                name: React conferences in Europe
                shortDescription: Information about React conferences in Europe. This
                  Data Graph stitches together two GQL APIs. The flag image is added
                  by using Trevorblades API as a data source.
              schema:
                items:
                  $ref: '#/components/schemas/ExampleAPIMetadata'
                type: array
          description: List of API Examples response
        "400":
          content:
            application/json:
              example:
                Message: Invalid examples index file or root path
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/examples"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to fetch examples index file
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get a list of example API definitions
      tags:
      - APIs
  /api/examples/{location}:
    get:
      description: "Get the details of a single API definition, details include full\
        \ name, location in the repository, description, features and min tyk version"
      operationId: getAPIExample
      parameters:
      - description: URL that points to the index file (repository.json) or root of
          a repository housing examples.
        example: https://raw.githubusercontent.com/TykTechnologies/tyk-examples/main/repository.json
        explode: false
        in: header
        name: x-tyk-examples-index
        required: false
        schema:
          default: https://raw.githubusercontent.com/TykTechnologies/tyk-examples/main/repository.json
          type: string
        style: simple
      - description: Repository URL to fetch example API definitions from
        example: https://github.com/TykTechnologies/tyk-examples.git
        explode: false
        in: header
        name: x-tyk-repo-url
        required: false
        schema:
          default: https://github.com/TykTechnologies/tyk-examples.git
          type: string
        style: simple
      - description: Location of the tyk example in the repository defined in `x-tyk-repo-url`
        example: udg/vat-checker
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, the response will contain the APIDefinition\
          \ of the specified example, the definition will be present as the `apiDefinition`\
          \ field."
        example: false
        explode: true
        in: query
        name: apiDef
        required: false
        schema:
          default: "false"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                description: Simple REST API wrapped in GQL using Universal Data Graph
                  that allows user to check validity of a VAT number and display some
                  details about it.
                features:
                - REST Datasource
                location: udg/vat-checker
                min_version: "5.0"
                name: VAT number checker UDG
              schema:
                $ref: '#/components/schemas/DetailedExampleAPIMetadata'
          description: fetched suc
        "400":
          content:
            application/json:
              example:
                Message: Invalid examples index file or root path
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid parameters
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/examples/{location}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Example API definition not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Example API definition not found.
        "500":
          content:
            application/json:
              example:
                Message: Failed to fetch example API definitions
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get details of a single example API definition
      tags:
      - APIs
  /api/hooks:
    get:
      description: Return a paginated list of webhooks
      operationId: getWebhookList
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                hooks:
                - api_model: {}
                  event_timeout: 0
                  header_map:
                    secret: superscretkey
                    x-auth: authvalue
                  id: "363634393863643165326663643130303031383465636239"
                  method: POST
                  name: Expired Keys webhook
                  org_id: 5e9d9544a1dcd60001d0ed20
                  target_path: https://httpbin.org/expired-keys
                  template_path: ""
                  webhook_id: 1f78e319202b430e92286cff3ca759e3
                - api_model: {}
                  event_timeout: 0
                  header_map:
                    x-auth: keith
                  id: "363634623338353335373135656334633936636265663364"
                  method: POST
                  name: Webhook Receiver Post
                  org_id: 5e9d9544a1dcd60001d0ed20
                  target_path: https://httpbin.org/receiver
                  template_path: ""
                  webhook_id: 9aef65505d694792a25fd0334dde2661
                pages: 1
              schema:
                $ref: '#/components/schemas/WebHooks'
          description: web hook fetched
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve webhooks
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed to retrieve webhooks
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/hooks"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for Apis
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List Web Hooks
      tags:
      - Webhooks
    post:
      description: "Create a webhook.The webhook method and target_path fields are\
        \ required.Method can either be DELETE,GET,PUT,POST or PATCH."
      operationId: createWebhook
      requestBody:
        content:
          application/json:
            example:
              header_map:
                another-value: somevalue
                secret: superscretkey
              method: POST
              name: Expired Keys webhook
              target_path: https://httpbin.org/expired-keys
            schema:
              $ref: '#/components/schemas/createWebhook_request'
        description: web hook data
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Webhook created
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: webhook created
        "400":
          content:
            application/json:
              example:
                Message: Webhook object validation failed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: validation failed(required fields not sent in request body)
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request body
        "409":
          content:
            application/json:
              example:
                Message: duplicate webhook_id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: webhook with id exist
        "500":
          content:
            application/json:
              example:
                Message: "Failed to read response body, body empty"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: empty request body
      summary: Create a Web Hook
      tags:
      - Webhooks
  /api/hooks/{hookId}:
    delete:
      description: Delete webhook with ID
      operationId: deleteWebhook
      parameters:
      - description: id of the webhook to delete
        example: 66498cd1e2fcd1000184ecb9
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Webhook deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: deleted successfully
        "400":
          content:
            application/json:
              example:
                Message: Could not delete the webhook
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: deletion failed
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/hooks/{hookId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve webhook detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: web hook with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: you are not allowed in this org
      summary: Delete Web Hook
      tags:
      - Webhooks
    get:
      description: Get a webhook details with its ID
      operationId: getWebhookDetail
      parameters:
      - description: id of the webhook to fetch
        example: 66498cd1e2fcd1000184ecb9
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                api_model: {}
                event_timeout: 0
                header_map:
                  secret: superscretkey
                  x-auth: authvalue
                id: "363634393863643165326663643130303031383465636239"
                method: POST
                name: Expired Keys webhook
                org_id: 5e9d9544a1dcd60001d0ed20
                target_path: https://httpbin.org/expired-keys
                template_path: ""
                webhook_id: 1f78e319202b430e92286cff3ca759e3
              schema:
                $ref: '#/components/schemas/WebHookHandlerConf'
          description: webhook fetched
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve webhook detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: web hook not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/hooks/{hookId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data for webhook detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get single Web Hook
      tags:
      - Webhooks
    put:
      description: Update a web hook using its id.The webhook method and target_path
        fields are required in the request body when updating.*Note the original webhook
        data will be completely replaced with the new update request object(so if
        for example you don't send the name or webhook_id fields in your request body
        those fields will be updated to empty string even if they existed in your
        original webhook object)*
      operationId: updateWebhook
      parameters:
      - description: id of the webhook to update
        example: 664b70285715ec4c96cbef3f
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              header_map:
                another-value: somevalue
                secret: superscretkey
              method: POST
              name: Update WebHook Name
              target_path: https://httpbin.org/v2/changed-expired-keys
            schema:
              $ref: '#/components/schemas/createWebhook_request'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Hook updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: web hook updated
        "400":
          content:
            application/json:
              example:
                Message: webhook not found
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: webhook with id not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request body
        "500":
          content:
            application/json:
              example:
                Message: "Failed to read response body, body empty"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: empty request body
      summary: Update Web Hook
      tags:
      - Webhooks
  /api/keys:
    post:
      description: |-
        Tyk will generate the access token based on the OrgID specified in the API Definition and a random UUID. This ensures that keys can be "owned" by different API Owners should segmentation be needed at an organisational level.
             <br/><br/>
           API keys without access_rights data will be written to all APIs on the system (this also means that they will be created across all SessionHandlers and StorageHandlers, it is recommended to always embed access_rights data in a key to ensure that only targeted APIs and their back-ends are written to.
      operationId: addKey
      parameters:
      - description: Set this to true to create a basic user.Note you have to send
          basic_auth_data(user and password) in the request body if this value is
          set to true
        example: true
        explode: true
        in: query
        name: basic_auth
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key created
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: "Unmarshalling request body failed, malformed"
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal Key data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create Key
      tags:
      - Keys
  /api/keys/{keyId}:
    delete:
      description: "Deleting a key will remove it permanently from the system, however\
        \ analytics relating to that key will still be available."
      operationId: deleteKey
      parameters:
      - description: 'TODO::'
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: Set to true if the passed key is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the key
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Key deleted successfully
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key deleted
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Trying to access a key your org does not own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/keys/{keyId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Could not delete key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete key
      tags:
      - Keys
    get:
      description: Get the details of a key
      operationId: getKeyDetail
      parameters:
      - description: The ID of the key
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - description: 'TODO::'
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: Set to true if the passed key ID is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key Data fetched
        "400":
          content:
            application/json:
              example:
                Message: Attempted access to non-owned key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Trying to access a key your org does not own
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/keys/{keyId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal key data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get key Details
      tags:
      - Keys
    post:
      description: Creates a key with a custom key ID
      operationId: createCustomKey
      parameters:
      - description: The ID to give the key
        example: my-custom-key
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key created
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: "Unmarshalling request body failed, malformed"
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal Key data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create custom key
      tags:
      - Keys
    put:
      description: You can also manually add keys to Tyk using your own key-generation
        algorithm. It is recommended if using this approach to ensure that the OrgID
        being used in the API Definition and the key data is blank so that Tyk does
        not try to prepend or manage the key in any way.
      operationId: updateKeyDetail
      parameters:
      - description: The ID of the key
        example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - description: Use the hash of the key as input instead of the full key.Any
          none empty string will be interpreted as to say you want to use hash input
        example: "1"
        explode: true
        in: query
        name: hashed
        required: false
        schema:
          type: string
        style: form
      - description: 'TODO::'
        example: true
        explode: true
        in: query
        name: auto_guess
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Set to true if the passed key ID is a username
        example: true
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: boolean
        style: form
      - description: "Adding the suppress_reset parameter and setting it to 1, will\
          \ cause Tyk not to reset the quota limit that is in the current live quota\
          \ manager. By default Tyk will reset the quota in the live quota manager\
          \ (initialising it) when adding a key. Adding the `suppress_reset` flag\
          \ to the URL parameters will avoid this behaviour."
        explode: true
        in: query
        name: suppress_reset
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key updated
        "400":
          content:
            application/json:
              example:
                Message: "User/Key object validation failed, most likely malformed\
                  \ input"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed input
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: "Unmarshalling request body failed, malformed"
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve key detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Key with ID not found
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal Key data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update key
      tags:
      - Keys
  /api/keys/detailed:
    get:
      description: List all the keys and all the keys details.If `q` query parameter
        is passed it will only return keys whose key_id contain the passed text.
      operationId: getKeysDetailed
      parameters:
      - description: Filter and return all keys that contain this text in there key_id
        example: itachi
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysDetailed'
          description: keys fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/keys/detailed"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve keys
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to connect to the gateway
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal keys data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List All the Keys info
      tags:
      - Keys
  /api/keys/preview:
    post:
      description: This will check if the body of a key definition is valid.And return
        a response with how the key would look like if you create it
      operationId: validateAKeyDefinition
      requestBody:
        content:
          application/json:
            example:
              alias: portal-key
              allowance: 1000
              apply_policies:
              - 62a0ec9092faf50001395817
              enable_detailed_recording: true
              expires: 1.718439136E9
              hmac_enabled: false
              is_inactive: false
              meta_data:
                tyk_developer_id: 62b3fb9a1d5e4f00017226f5
              org_id: 5e9d9544a1dcd60001d0ed20
              per: 60
              quota_max: -1
              quota_remaining: 0
              quota_renewal_rate: -1
              quota_renews: 1.715847135E9
              rate: 1000
              tags:
              - edge-eu
              - edge
              throttle_interval: 0
              throttle_retry_limit: 0
            schema:
              $ref: '#/components/schemas/SessionState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyData'
          description: Key definition is valid
        "400":
          content:
            application/json:
              example:
                Message: User/Key object validation failed.
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Malformed key data
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal User data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: This will validate key a definition
      tags:
      - Keys
  /api/org/opa:
    get:
      description: List your organisation OPA Rules.
      operationId: getOPARules
      responses:
        "200":
          content:
            application/json:
              example:
                open_policy:
                  rules: |-
                    package dashboard_users
                    default request_intent = "read"
                    request_intent = "write" { input.request.method == "POST" }
                    request_intent = "write" { input.request.method == "PUT" }
                    request_intent = "delete" { input.request.method == "DELETE" }
                    deny["You cannot create a keyless api."] {
                        request_intent == "write"
                        contains(input.request.path, "api/apis")
                        input.request.body.api_definition.use_keyless == true
                    }
              schema:
                $ref: '#/components/schemas/NewOPARules'
          description: OPA rules fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Your license does not support Open Policy
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: upgrade licence
        "500":
          content:
            application/json:
              example:
                Message: Failed to identify Organisation
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List OPA Rules
      tags:
      - Open Policy Agent
    put:
      description: Modify your OPA Rules
      operationId: updateOrgOPARules
      requestBody:
        content:
          application/json:
            example:
              open_policy:
                rules: |-
                  package dashboard_users
                  default request_intent = "read"
                  request_intent = "write" { input.request.method == "POST" }
                  request_intent = "write" { input.request.method == "PUT" }
                  request_intent = "delete" { input.request.method == "DELETE" }
                  deny["You cannot create a keyless api."] {
                      request_intent == "write"
                      contains(input.request.path, "api/apis")
                      input.request.body.api_definition.use_keyless == true
                  }
            schema:
              $ref: '#/components/schemas/NewOPARules'
        description: Create rule to prevent creation of keyless apis
      responses:
        "200":
          content:
            application/json:
              example:
                Message: OPA rules has been updated on org level
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OPA rules updated
        "400":
          content:
            application/json:
              example:
                Message: Invalid OPA rules
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid OPA rules
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Your license does not support Open Policy
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: upgrade licence
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal response body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request body
      summary: Update OPA Rules
      tags:
      - Open Policy Agent
  /api/org/permissions:
    get:
      description: "This API returns by default the initial set of additional permissions\
        \ defined in your Tyk Dashboard configuration, under `security.additional_permissions`.Once\
        \ you update the permissions via the API, they will be stored at organisation\
        \ level."
      operationId: listAdditionalPermissions
      responses:
        "200":
          content:
            application/json:
              example:
                additional_permissions:
                  api_developer: API Developer
                  api_manager: API Manager
              schema:
                $ref: '#/components/schemas/NewAdditionalPermissions'
          description: Additional Permissions retrieved successfully.
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/org/permissions"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal additional permissions
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List additional permissions
      tags:
      - Additional Permissions
    put:
      description: "Whenever you want to add/update/delete an additional permission,\
        \ just send back the updated list of permissions, through this PUT request\
        \ to the API.For example if you initially had two additional permissions e.g\
        \ ```{additional_permissions: {api_developer: API Developer, api_manager:\
        \ API Manager}}``` to add a third permission called `custom_permission` you\
        \ would append it to the original permission list and your request body would\
        \ be: ```{additional_permissions: {api_developer: API Developer, api_manager:\
        \ API Manager, custom_permission: Custom Permission}}```"
      operationId: updateAdditionalPermissions
      requestBody:
        content:
          application/json:
            example:
              additional_permissions:
                api_developer: API Developer
                api_manager: API Manager
                custom_permission: Custom Permission
            schema:
              $ref: '#/components/schemas/NewAdditionalPermissions'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Additional Permissions updated in org level
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Additional Permissions updated successfully.
        "400":
          content:
            application/json:
              example:
                Message: Failed to read response body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: empty request body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/org/permissions"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal response body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: invalid request body or failed to save permission
      summary: Add/Delete/Update Additional Permission
      tags:
      - Additional Permissions
  /api/portal/catalogue:
    get:
      description: List of services that you are willing to publish into the API portal.
      operationId: getPortalCatalogue
      responses:
        "200":
          content:
            application/json:
              example:
              - apis:
                - api_id: ""
                  auth_type: authToken
                  config:
                    HashKeys: false
                    catalogue_login_only: false
                    dcr_options:
                      access_token: ""
                      grant_types:
                      - urn:ietf:params:oauth:grant-type:jwt-bearer
                      idp_host: https://tyk.io
                      provider: okta
                      registration_endpoint: https://tyk.io/register
                      response_types:
                      - token
                      token_endpoint_auth_method: client_secret_basic
                    disable_auto_login: false
                    disable_login: false
                    disable_signup: false
                    email: support@tyk.io
                    enable_dcr: true
                    enable_multi_selection: false
                    id: ""
                    key_request_fields:
                    - What do you want to use this api for ?
                    mail_options:
                      email_copy:
                        key_email:
                          body: ""
                          enabled: false
                          hide_token_data: false
                          sign_off: ""
                          subject: ""
                        reset_password_email:
                          body: ""
                          enabled: false
                          hide_token_data: false
                          sign_off: ""
                          subject: ""
                        welcome_email:
                          body: ""
                          enabled: false
                          hide_token_data: false
                          sign_off: ""
                          subject: ""
                      mail_from_email: ""
                      mail_from_name: ""
                    oauth_usage_limit: 3
                    org_id: ""
                    override: false
                    redirect_on_key_request: true
                    redirect_to: ""
                    require_key_approval: true
                    secure_key_approval: true
                    signup_fields: []
                  documentation: 66498cd5e2fcd1000184ecbf
                  fields:
                    messages: message api
                  is_keyless: false
                  long_description: Use this Api to send request to a sample api
                  name: Swagger Petstore
                  policy_id: 5ead7120575961000181867e
                  short_description: A sample test api for tyk OAS
                  show: true
                  version: v2
                email: ""
                id: "363634393863643565326663643130303031383465636263"
                org_id: 5e9d9544a1dcd60001d0ed20
              schema:
                items:
                  $ref: '#/components/schemas/ApiCatalogue'
                type: array
          description: api catalogue fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/portal/catalogue"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get Portal Catalogue
      tags:
      - Portal API Catalogue
    post:
      description: Only use this method if no single catalogue exist for your organization.
        If a catalogue already exist for your organization use the PUT and send the
        ApiCatalogue ID in your request body.
      operationId: createPortalCatalogue
      requestBody:
        content:
          application/json:
            example:
              apis:
              - config:
                  email: catalogue@tyk.io
                  enable_dcr: false
                  key_request_fields: []
                  oauth_usage_limit: -1
                  override: false
                  redirect_on_key_request: false
                  require_key_approval: false
                  signup_fields: []
                fields:
                  message: messages-api
                long_description: This API uses the petstore swagger to showcase Tyk
                  OAS capability
                name: Petstore store API
                policy_id: 62a0ec9092faf50001395817
                short_description: Sample api to showcase tyk OAS
                show: true
                version: v2
              email: catalogue_sample@tyk.io
            schema:
              $ref: '#/components/schemas/ApiCatalogue'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: 6653fdac5715ec2c849cf63a
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Catalogue added
        "400":
          content:
            application/json:
              example:
                Message: Portal Catalogue API Swagger Petstore should have a valid
                  policy_id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed request body validation
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed body or insufficient permissions
        "500":
          content:
            application/json:
              example:
                Message: "Failure creating data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create Portal Catalogue
      tags:
      - Portal API Catalogue
    put:
      description: "The ApiCatalogue ID is required in the request body. This will\
        \ override (replace) the APIs that already exist in your organization catalogue\
        \ with the ones you send in the request body (ApiCatalogue.apis field). If\
        \ you want to keep the previous catalogue APIs, you also need to include them\
        \ in the request body."
      operationId: updatePortalCatalogue
      requestBody:
        content:
          application/json:
            example:
              apis:
              - config:
                  email: catalogue@tyk.io
                  enable_dcr: false
                  key_request_fields: []
                  oauth_usage_limit: -1
                  override: false
                  redirect_on_key_request: false
                  require_key_approval: false
                  signup_fields: []
                fields:
                  message: messages-api
                long_description: This API uses the petstore swagger to showcase Tyk
                  OAS capability
                name: Petstore store API
                policy_id: 62a0ec9092faf50001395817
                short_description: Sample api to showcase tyk OAS
                show: true
                version: v2
              - config:
                  email: sample_catalogue@tyk.io
                  enable_dcr: false
                  key_request_fields: []
                  oauth_usage_limit: -1
                  override: false
                  redirect_on_key_request: false
                  require_key_approval: false
                  signup_fields: []
                fields:
                  message: email-sender
                long_description: Sample API to showcase Tyk Throttling capability
                name: Throttling Policy showcase
                policy_id: 5ead72955759610001818688
                short_description: Api catalogue to showcase Throttling
                show: true
                version: v2
              email: catalogue_sample@tyk.io
              id: 665405f15715ec2c849cf641
            schema:
              $ref: '#/components/schemas/ApiCatalogue'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Data updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: catalogue updated
        "400":
          content:
            application/json:
              example:
                Message: Portal Catalogue API Swagger Petstore should have a valid
                  policy_id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed request body validation
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed body or insufficient permissions
        "500":
          content:
            application/json:
              example:
                Message: "Failure creating data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update Organization Portal Catalogue
      tags:
      - Portal API Catalogue
  /api/portal/documentation:
    post:
      description: "Create documentation for your API catalogues. You can then attach\
        \ this documentation to an API in your catalogue by updating the API's documentation\
        \ field and setting it to the ID of the newly created documentation.Once documentation\
        \ is created, its id will be returned in the response body message field"
      operationId: uploadDocumentation
      requestBody:
        content:
          application/json:
            example:
              api_id: ""
              doc_type: swagger_custom_url
              documentation: https://petstore.swagger.io/v2/swagger.json
            schema:
              $ref: '#/components/schemas/APIDocumentation'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: 665452705715ec051dc8fbfe
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: documentation added
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed body or no catalogue added yet
        "500":
          content:
            application/json:
              example:
                Message: "Failure creating data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create Documentation
      tags:
      - Portal API Catalogue
  /api/portal/documentation/{id}:
    delete:
      description: Delete documentation with its ID
      operationId: deleteDocumentation
      parameters:
      - description: ID of the documentation you want to delete
        example: 665453c35715ec051dc8fc02
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Data deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: invalid doc id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid Id
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "Object not owned by this organisation, write is forbidden"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve object for deletion
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Docs not found
        "500":
          content:
            application/json:
              example:
                Message: "Failure deleting data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete documentation
      tags:
      - Portal API Catalogue
  /api/portal/policies:
    get:
      description: Get List of Policies.The result returned are paginated.Use the
        p query parameter to say which page you want returned.The default pagesize
        of the results is 10 but this can be changed in the dashboard config
      operationId: getPolicies
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      - description: Send any value in this query parameter to return only the active
          policies
        example: "true"
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                policiesExample:
                  $ref: '#/components/examples/policiesExample'
              schema:
                $ref: '#/components/schemas/ReturnDataStruct'
          description: List of all policies
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/portal/policies"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned if you do not have access to policies
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve object list
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List Portal Policies
      tags:
      - Policies
    post:
      description: "Creating policy definitions is slightly different to the core\
        \ API, API definitions are wrapped inside an api_definition field and event\
        \ handlers, such as webhooks are not embedded in the main api_defintion object\
        \ (though they can be), webhooks are instead appended as references into the\
        \ hook_references field, the API will embed the correct webhook data into\
        \ the event handler interface."
      operationId: postPolicies
      requestBody:
        content:
          application/json:
            example:
              access_rights:
                Itachi api:
                  allowed_urls:
                  - methods:
                    - GET
                    url: /users
                  api_id: 8ddd91f3cda9453442c477b06c4e2da4
                  api_name: Itachi api
                  disable_introspection: false
                  versions:
                  - Default
              active: true
              hmac_enabled: false
              is_inactive: false
              key_expires_in: 2592000.0
              max_query_depth: -1
              meta_data:
                email: itachi@tyk.io
                user_type: mobile_user
              name: Sample policy
              partitions:
                acl: true
                complexity: false
                per_api: false
                quota: true
                rate_limit: true
              per: 60
              quota_max: 10000
              quota_renewal_rate: 3600
              rate: 1000
              tags:
              - security
              throttle_interval: 10
              throttle_retry_limit: 10
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: 663b4bbd5715ec323b424dca
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Policy created
        "400":
          content:
            application/json:
              example:
                Message: This policy name has already been used. Enter a unique policy
                  name
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when the policy body fails validation
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send a malformed request body or when you
            don't have permission to add this object
        "500":
          content:
            application/json:
              example:
                Message: "Failure creating data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create Policy Definition
      tags:
      - Policies
  /api/portal/policies/{id}:
    delete:
      description: Delete a Policy by ID
      operationId: deletePolicy
      parameters:
      - description: ID of Policy to delete
        example: 66570989d98dd00001da17f1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Data deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Deleted Policy Successfully
        "400":
          content:
            application/json:
              example:
                Message: invalid policy id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send a policy id that is invalid
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/portal/policies/{id}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned if you do not have access to policies
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve object for deletion
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned if policy with specified ID does not exist
        "500":
          content:
            application/json:
              example:
                Message: "Failure deleting data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete a single Policy by ID
      tags:
      - Policies
    get:
      description: Get a Policy by ID
      operationId: getPolicy
      parameters:
      - description: ID of Policy to get
        example: 66570989d98dd00001da17f1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                access_rights:
                  Itachi api:
                    allowed_urls:
                    - methods:
                      - GET
                      url: /users
                    api_id: 8ddd91f3cda9453442c477b06c4e2da4
                    api_name: Itachi api
                    disable_introspection: false
                    versions:
                    - Default
                active: true
                hmac_enabled: false
                is_inactive: false
                key_expires_in: 2592000.0
                max_query_depth: -1
                meta_data:
                  email: itachi@tyk.io
                  user_type: mobile_user
                name: Sample policy
                partitions:
                  acl: true
                  complexity: false
                  per_api: false
                  quota: true
                  rate_limit: true
                per: 60
                quota_max: 10000
                quota_renewal_rate: 3600
                rate: 1000
                tags:
                - security
                throttle_interval: 10
                throttle_retry_limit: 10
              schema:
                $ref: '#/components/schemas/Policy'
          description: Policy fetched
        "400":
          content:
            application/json:
              example:
                Message: invalid policy id
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send a policy id that is invalid
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/portal/policies/{id}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve portal object
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Policy with the given Id was not found
        "500":
          content:
            application/json:
              example:
                Message: "Failure creating data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get a single Policy by ID
      tags:
      - Policies
    put:
      description: Update a Policy Definition
      operationId: putPolicies
      parameters:
      - description: ID of Policy to update
        example: 66570989d98dd00001da17f1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              access_rights:
                Itachi api:
                  allowed_urls:
                  - methods:
                    - GET
                    url: /users
                  api_id: 8ddd91f3cda9453442c477b06c4e2da4
                  api_name: Itachi api
                  disable_introspection: false
                  versions:
                  - Default
              active: true
              hmac_enabled: false
              is_inactive: false
              key_expires_in: 2592000.0
              max_query_depth: -1
              meta_data:
                email: itachi@tyk.io
                user_type: mobile_user
              name: Sample policy
              partitions:
                acl: true
                complexity: false
                per_api: false
                quota: true
                rate_limit: true
              per: 60
              quota_max: 10000
              quota_renewal_rate: 3600
              rate: 1000
              tags:
              - security
              - messages
              throttle_interval: 10
              throttle_retry_limit: 10
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: Data updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Policy updated
        "400":
          content:
            application/json:
              example:
                Message: 'invalid policy id '
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send an invalid ID or when the policy body
            fails validation
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send a malformed request body or when you
            don't have permission to update this object
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve portal object
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned if policy with specified ID does not exist
        "500":
          content:
            application/json:
              example:
                Message: "Failure saving data, please contact your administrator"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update Policy Definition
      tags:
      - Policies
  /api/portal/policies/search:
    get:
      description: "Search List of Policies. If query parameter q is a policy id it\
        \ will look for policies that have the given id. However if q i not a policy\
        \ ID it will return policies with whose name matches the patten based via\
        \ q query parameter.If the send a policy id in query parameter q and also\
        \ send query parameter policy_ids,only policy_ids will be used for searching "
      operationId: searchPolicies
      parameters:
      - description: Search for policy using policy ID or name.
        example: 5eb6349543f0440001373f5c
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: A list of comma separated policy ids that you want to search
          for
        example: "5eb6349543f0440001373f5c,5ead7120575961000181867e"
        explode: true
        in: query
        name: policy_ids
        required: false
        schema:
          type: string
        style: form
      - description: Send any value in this query parameter to return only the active
          policies
        example: "true"
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      - description: Return policies whose state field matches the sent value.e.g
          if you send state as deny policies returned are those whose state filed
          value is set as deny
        example: deny
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - deny
          - active
          - draft
          type: string
        style: form
      - description: Field you want to use to sort the returned policies
        example: name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - date_created
          - name
          - state
          type: string
        style: form
      - description: Comma separete list of Api IDs.Return only policy that that have
          the given api ids in their access_right
        example: 5963f8fdedee405143f5858ea17de422
        explode: true
        in: query
        name: api_id
        required: false
        schema:
          type: string
        style: form
      - description: Return policy whose auth_type field has the given value
        example: authToken
        explode: true
        in: query
        name: auth_type
        required: false
        schema:
          type: string
        style: form
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                policiesExample:
                  $ref: '#/components/examples/policiesExample'
              schema:
                $ref: '#/components/schemas/ReturnDataStruct'
          description: List of policies
        "400":
          content:
            application/json:
              example:
                Message: Policy ID is not in hex format
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Returned when you send policy ids that are not in hexadecimal
            format
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/portal/policies/search"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve policies
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Search List of Policies
      tags:
      - Policies
  /api/usage/apis/{startDay}/{startMonth}/{startYear}/{endDay}/{endMonth}/{endYear}:
    get:
      description: Display activity by each API.Use the start date and end date to
        view activities for a specified period
      operationId: getAverageUsagePerAPI
      parameters:
      - description: Day of analytics to start querying from
        example: "15"
        explode: false
        in: path
        name: startDay
        required: true
        schema:
          type: string
        style: simple
      - description: Month of analytics to start querying from
        example: "1"
        explode: false
        in: path
        name: startMonth
        required: true
        schema:
          type: string
        style: simple
      - description: Start year of analytics to query.
        example: "2024"
        explode: false
        in: path
        name: startYear
        required: true
        schema:
          type: string
        style: simple
      - description: End date of analytics to query.
        example: "20"
        explode: false
        in: path
        name: endDay
        required: true
        schema:
          type: string
        style: simple
      - description: End month of analytics to query.
        example: "6"
        explode: false
        in: path
        name: endMonth
        required: true
        schema:
          type: string
        style: simple
      - description: End year of analytics to query.
        example: "2025"
        explode: false
        in: path
        name: endYear
        required: true
        schema:
          type: string
        style: simple
      - description: Sort the activities
        example: "1"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                aggregateAnalytics:
                  $ref: '#/components/examples/aggregateAnalytics'
              schema:
                $ref: '#/components/schemas/AggregateAnalyticsData'
          description: List of Average Usage Per API
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: user does not have access to the api with ID
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: user does not have access
        "500":
          content:
            application/json:
              example:
                Message: Failed to fetch analytics
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Average Usage Per API
      tags:
      - Analytics
  /api/usergroups:
    get:
      description: This will return a list of all he user groups.The returned user-groups
        are paginated
      operationId: listUserGroups
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                groups:
                - active: true
                  description: devs company
                  id: "363634393938366435373135656334633936636265663262"
                  name: devs
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  user_permissions:
                    analytics: read
                    api_assets: write
                    apis: write
                    certs: write
                    hooks: write
                    idm: write
                    keys: write
                    log: read
                    oauth: write
                    owned_analytics: deny
                    policies: write
                    portal: write
                    system: write
                    user_groups: write
                    users: write
                    websockets: read
                - active: true
                  description: Devops logs and analytics access
                  id: "363634396664346235373135656334633936636265663338"
                  name: Devops
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  user_permissions:
                    analytics: read
                    log: read
                pages: 1
              schema:
                $ref: '#/components/schemas/UserGroups'
          description: User groups fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/usergroups"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user groups
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to fetch groups
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal keys data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List User Groups
      tags:
      - UserGroup
    post:
      description: "Instead of assigning permission to each individual users,per user,\
        \ you can create a user group and configure the permissions for all users\
        \ in the group.This endpoint allow you to create a usergroup and set permission\
        \ for the user group."
      operationId: createUserGroup
      requestBody:
        content:
          application/json:
            example:
              active: true
              description: Devops logs and analytics access
              name: Devops
              org_id: 5e9d9544a1dcd60001d0ed20
              user_permissions:
                analytics: read
                log: read
            schema:
              $ref: '#/components/schemas/UserGroup'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User group created
                Meta: 6649fb3e5715ec4c96cbef36
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User group created
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request data
        "500":
          content:
            application/json:
              example:
                Message: "Failed to read response body, body empty"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create User Group
      tags:
      - UserGroup
  /api/usergroups/{groupId}:
    delete:
      description: Delete user group using the group ID
      operationId: deleteUserGroup
      parameters:
      - description: ID of the group you want to delete
        example: 6649fd535715ec4c96cbef39
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User group deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: Could not delete the user group
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed to delete user group
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/usergroups/{groupId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: group not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete user group
      tags:
      - UserGroup
    get:
      description: Return a user-group object with all the details of a specified
        group
      operationId: getUserGroup
      parameters:
      - description: ID of the group you want to fetch
        example: 6649fd535715ec4c96cbef39
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                description: Devops logs and analytics access
                id: "363634396664346235373135656334633936636265663338"
                name: Devops
                org_id: 5e9d9544a1dcd60001d0ed20
                password_max_days: 0
                user_permissions:
                  analytics: read
                  log: read
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: User grouped fetched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/usergroups/{groupId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user group detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: group not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get User Group details
      tags:
      - UserGroup
    put:
      description: Update the details of a user group.You must have either admin or
        user groups permission to be able to modify user groups.Note you cannot update
        the ResetPassword permission with this endpoint. For that you need to use
        Admin Api.When updating a user group you also need to specify at least one
        permission in the user_permissions field.
      operationId: updateUserGroup
      parameters:
      - description: ID of the group you want to update
        example: 6649fd535715ec4c96cbef39
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              active: true
              description: Devops logs and analytics access
              name: Devops
              org_id: 5e9d9544a1dcd60001d0ed20
              user_permissions:
                analytics: read
                log: read
            schema:
              $ref: '#/components/schemas/UserGroup'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User group updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: group id does not exist
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: group not found or malformed request body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/usergroups/{groupId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update User Group
      tags:
      - UserGroup
  /api/users:
    get:
      description: Lists Dashboard Users
      operationId: getUsers
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                pages: 1
                users:
                - access_key: d7ebef749e4348cb67fec3cfc81f0a50
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T08:23:29.173+03:00
                  email_address: multi-org-user@example.org
                  first_name: Multi Org
                  group_id: ""
                  id: "363634393863643165326663643130303031383465636235"
                  last_login_date: 2024-05-19T08:45:09.53319+03:00
                  last_name: User
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T08:23:29.281+03:00
                  user_permissions:
                    IsAdmin: admin
                    ResetPassword: admin
                - access_key: f4b94c64017043dc4d1918db7e3436dd
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T08:23:29.034+03:00
                  email_address: admin-user@example.org
                  first_name: Admin
                  group_id: ""
                  id: "363634393863643165326663643130303031383465636234"
                  last_login_date: 2024-05-19T08:42:22.659839+03:00
                  last_name: User
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T08:23:29.146+03:00
                  user_permissions:
                    IsAdmin: admin
                    ResetPassword: admin
                - access_key: d19fc75cd3aa497f6cb042f72e47ce8c
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T08:45:09.53319+03:00
                  email_address: itachi.w@tyk.io
                  first_name: sasuke
                  group_id: ""
                  id: "363634393931653535373135656334633936636265663261"
                  last_login_date: 2024-05-19T08:45:09.53319+03:00
                  last_name: itachi
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T08:45:09.53319+03:00
                  user_permissions:
                    IsAdmin: admin
                - access_key: b26feb8ff86b48e15ae2513a2de6f8f7
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T09:14:13.461142+03:00
                  email_address: munene@gmail.com
                  first_name: munene
                  group_id: 6649986d5715ec4c96cbef2b
                  id: "363634393938623535373135656334633936636265663263"
                  last_login_date: 2024-05-19T08:45:09.53319+03:00
                  last_name: wachira
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T09:14:13.461142+03:00
                  user_permissions:
                    analytics: read
                    api_assets: write
                    apis: write
                    certs: write
                    hooks: write
                    idm: write
                    keys: write
                    log: read
                    oauth: write
                    policies: write
                    portal: write
                    system: write
                    user_groups: write
                    users: write
                    websockets: read
              schema:
                $ref: '#/components/schemas/Users'
          description: Users retrieved successfully.
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve users
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: error retrieving users from db
        "500":
          content:
            application/json:
              example:
                Message: Failed to unmarshal keys data from Tyk API
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: List Users
      tags:
      - Users
    post:
      description: "Create a user.If you want to create an admin user, you need to\
        \ send {IsAdmin: admin} in the user_permissions field e.g ```{user_permissions:\
        \ {IsAdmin: admin},last_name: sasuke,email_address: itachi@gmail.com,first_name:\
        \ itachi}```.You can add a user to a given user-group by sending the group_id\
        \ in the request body.If you want to give a user access only to specific objects\
        \ e.g policies you can send the object and the permission granted to the user(read\
        \ or write permission in the  user_permissions field (check the request example\
        \ given for more details))"
      operationId: addUser
      requestBody:
        content:
          application/json:
            example:
              active: true
              email_address: itachi@gmail.com
              first_name: itachi
              last_name: sasuke
              user_permissions:
                analytics: read
                api_assets: write
                apis: write
                certs: write
                hooks: write
                idm: write
                keys: write
                log: read
                oauth: write
                policies: write
                portal: write
                system: write
                user_groups: write
                users: write
                websockets: read
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User and session have been created
                Meta: 6649a9e85715ec4c96cbef2f
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User added successfully
        "400":
          content:
            application/json:
              example:
                Message: User object validation failed.
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failure to send all required fields
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: User email already exists for this Org
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: user already exist
        "500":
          content:
            application/json:
              example:
                Message: Couldn't retrieve user session details
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Add User
      tags:
      - Users
  /api/users/{userId}:
    delete:
      description: Delete a user with userId
      operationId: deleteUser
      parameters:
      - description: USER ID of the user to delete
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User deleted
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: Could not delete the user
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: failed to delete user
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/{userId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete a user
      tags:
      - Users
    get:
      description: Return a user object with details of the user specified by userId
        in path.
      operationId: getUser
      parameters:
      - description: USER ID of the user to retrieve data for
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                access_key: f4b94c64017043dc4d1918db7e3436dd
                active: true
                api_model: {}
                created_at: 2024-05-19T08:23:29.034+03:00
                email_address: admin-user@example.org
                first_name: Admin
                group_id: ""
                id: "363634393863643165326663643130303031383465636234"
                last_login_date: 2024-05-19T08:42:22.659839+03:00
                last_name: User
                org_id: 5e9d9544a1dcd60001d0ed20
                password_max_days: 0
                password_updated: 2024-05-19T08:23:29.146+03:00
                user_permissions:
                  IsAdmin: admin
                  ResetPassword: admin
              schema:
                $ref: '#/components/schemas/User'
          description: User retrieved successfully
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/{userId}"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get user details
      tags:
      - Users
    put:
      description: Update a user with userId. If you update the user as inactive they
        will be logged out of all dashboard sessions.User password can only be updated
        via Admin api or the update password endpoint.ResetPassword is also only available
        via the Admin Api
      operationId: updateUser
      parameters:
      - description: USER ID of the user to update
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              active: true
              email_address: itachi@gmail.com
              first_name: itachi
              last_name: sasuke
              user_permissions:
                IsAdmin: admin
            schema:
              $ref: '#/components/schemas/updateUser_request'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Updated successfully
        "400":
          content:
            application/json:
              example:
                Message: user does not exist
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found or malformed request body
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "To create a user specify at least one permission, or make\
                  \ him an admin."
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Empty user rights or invalid email format
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Update User
      tags:
      - Users
  /api/users/{userId}/actions/key/reset:
    put:
      description: Reset specified user's Dashboard API Access Credentials by generating
        a new access key for the specified user.
      operationId: resetUserKey
      parameters:
      - description: User ID of the user whose key you want to reset
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User session renewed
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: new access key generated
        "400":
          content:
            application/json:
              example:
                Message: Problem updating user with new key
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to update user details
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/{userId}/actions/key/reset"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: user not found
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Reset user Dashboard API Access Credentials
      tags:
      - Users
  /api/users/{userId}/actions/reset:
    post:
      description: Set a user's password.The password need to be 6 character long.If
        you are trying to update another users password you also need to have permission
        to update they password or you need to be a super-admin.You cannot also reuse
        a password
      operationId: setUserPassword
      parameters:
      - description: User ID of the user whose password is being reset
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              current_password: minimum6charactersPassword
              new_password: newMinimum6CharactersPassword
            schema:
              $ref: '#/components/schemas/UserPassword'
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User password updated
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: Request body malformed
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: malformed request body or you don't have permission to change
            this users password
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Set User Password
      tags:
      - Users
  /api/users/{userId}/actions/revoke:
    put:
      description: This will set the use account as inactive.It will also disable
        Api Access and log out the user from all dashboards
      operationId: revokeUser
      parameters:
      - description: User ID of the user whose access you want to revoke
        example: 66498cd1e2fcd1000184ecb4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Message: User revoked
                Meta: null
                Status: OK
              schema:
                $ref: '#/components/schemas/ApiError'
          description: OK
        "400":
          content:
            application/json:
              example:
                Message: Could not retrieve user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/{userId}/actions/revoke"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              example:
                Message: Attempted unauthorised access
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Revoke User
      tags:
      - Users
  /api/users/me:
    get:
      description: Return a user object with the details of the current user.This
        request need to have a session cookie with the key authorisation.
      operationId: currentUserDetail
      parameters:
      - description: authorisation session cookie
        example: 1b7eecc5-6dt5-4df8-5472-0c7frc3ae4f2
        explode: true
        in: cookie
        name: authorisation
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                access_key: d7ebef749e4348cb67fec3cfc81f0a50
                active: true
                api_model: {}
                created_at: 2024-05-19T08:23:29.173+03:00
                email_address: multi-org-user@example.org
                first_name: Multi Org
                group_id: ""
                id: "363634393863643165326663643130303031383465636235"
                last_login_date: 2024-05-19T08:45:09.53319+03:00
                last_name: User
                org_id: 5e9d9544a1dcd60001d0ed20
                password_max_days: 0
                password_updated: 2024-05-19T08:23:29.281+03:00
                user_permissions:
                  IsAdmin: admin
                  ResetPassword: admin
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/me"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not retrieve current user detail
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
        "500":
          content:
            application/json:
              example:
                Message: Failed to marshal current user data
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get Current User
      tags:
      - Users
  /api/users/search:
    get:
      deprecated: true
      description: This endpoint allows you to search for users by providing their
        email address as a query parameter.
      operationId: searchUserGet
      parameters:
      - description: Query term used to search for users (email address)
        example: itachi.w@tyk.io
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                pages: 1
                users:
                - access_key: d19fc75cd3aa497f6cb042f72e47ce8c
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T08:45:09.53319+03:00
                  email_address: itachi.w@tyk.io
                  first_name: sasuke
                  group_id: ""
                  id: "363634393931653535373135656334633936636265663261"
                  last_login_date: 2024-05-19T08:45:09.53319+03:00
                  last_name: itachi
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T08:45:09.53319+03:00
                  user_permissions:
                    IsAdmin: admin
              schema:
                $ref: '#/components/schemas/Users'
          description: User searched
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/search"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not search users
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to search user
      summary: Search Users(Deprecated)
      tags:
      - Users
    post:
      description: "This endpoint allows you to search for users with their email\
        \ address(e.g if you send the filter @gmail.com` in the request payload, all\
        \ users whole email contain the string @gmail.com will be returned)."
      operationId: searchUser
      parameters:
      - description: Use p query parameter to say which page you want returned.Send
          number less than 0 to return all items
        example: 1
        explode: true
        in: query
        name: p
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            example:
              filters:
                query: itachi.w@tyk.io
            schema:
              $ref: '#/components/schemas/UserSearchPayload'
        description: User search criteria
      responses:
        "200":
          content:
            application/json:
              example:
                pages: 1
                users:
                - access_key: d19fc75cd3aa497f6cb042f72e47ce8c
                  active: true
                  api_model: {}
                  created_at: 2024-05-19T08:45:09.53319+03:00
                  email_address: itachi.w@tyk.io
                  first_name: sasuke
                  group_id: ""
                  id: "363634393931653535373135656334633936636265663261"
                  last_login_date: 2024-05-19T08:45:09.53319+03:00
                  last_name: itachi
                  org_id: 5e9d9544a1dcd60001d0ed20
                  password_max_days: 0
                  password_updated: 2024-05-19T08:45:09.53319+03:00
                  user_permissions:
                    IsAdmin: admin
              schema:
                $ref: '#/components/schemas/Users'
          description: User searched
        "400":
          content:
            application/json:
              example:
                Message: Could not extract search filter from request body
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to get filters
        "401":
          content:
            application/json:
              example:
                Message: Not authorised
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                Message: "access denied: You do not have permission to access  /api/users/search"
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                Message: Could not search users
                Meta: null
                Status: Error
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unable to search user
      summary: Search user with email
      tags:
      - Users
components:
  examples:
    aggregateAnalytics:
      value:
        data:
        - error: 4
          hits: 31
          id:
            alias: ""
            api_id: 7364617cc7d345d9755d182635dfd46d
            api_name: Keyless
            code: 404
            day: 0
            hour: 0
            iso_country: ""
            key: ""
            month: 0
            path: ""
            url: ""
            year: 0
          last_hit: 2024-06-19T07:11:39Z
          latency: 0
          max_latency: 0
          max_upstream_latency: 0
          min_latency: 0
          min_upstream_latency: 0
          request_time: 174.5
          success: 27
          upstream_latency: 0
        pages: 1
    oasExample:
      value:
        components:
          securitySchemes:
            bearerAuth:
              description: The API Access Credentials
              scheme: bearer
              type: http
        info:
          description: This is a sample OAS.
          title: OAS Sample
          version: 1.0.0
        openapi: 3.0.3
        paths:
          /api/sample/users:
            get:
              operationId: getUsers
              responses:
                "200":
                  content:
                    application/json:
                      schema:
                        items:
                          properties:
                            name:
                              type: string
                          type: object
                        type: array
                  description: fetched users
              summary: Get users
              tags:
              - users
        security:
        - bearerAuth: []
        servers:
        - url: https://localhost:8080
        x-tyk-api-gateway:
          info:
            name: user
            state:
              active: true
          server:
            listenPath:
              strip: true
              value: /user-test/
          upstream:
            url: https://localhost:8080
    paginatedApiExample:
      value:
        apis:
        - api_definition:
            api_id: b84fe1a04e5648927971c0557971565c
            auth:
              auth_header_name: authorization
            definition:
              key: version
              location: header
            name: Tyk Test API
            org_id: 664a14650619d40001f1f00f
            proxy:
              listen_path: /tyk-api-test/
              strip_listen_path: true
              target_url: https://httpbin.org
            use_oauth2: true
            version_data:
              not_versioned: true
              versions:
                Default:
                  name: Default
        pages: 1
    policiesExample:
      value:
        Data:
        - _id: "363635373039383964393864643030303031646131376631"
          access_rights:
            "8ddd91f3cda9453442c477b06c4e2da4":
              allowance_scope: ""
              allowed_types: []
              allowed_urls:
              - methods:
                - GET
                url: /users
              api_id: 8ddd91f3cda9453442c477b06c4e2da4
              api_name: Itachi api
              disable_introspection: false
              field_access_rights: []
              limit:
                max_query_depth: 0
                per: 0
                quota_max: 0
                quota_remaining: 0
                quota_renewal_rate: 0
                quota_renews: 0
                rate: 0
                set_by_policy: false
                smoothing:
                  delay: 30
                  enabled: false
                  step: 100
                  threshold: 500
                  trigger: 0.8
                throttle_interval: 0
                throttle_retry_limit: 0
              restricted_types: []
              versions:
              - Default
          active: true
          date_created: 2024-05-27T10:24:31.099Z
          hmac_enabled: false
          id: ""
          is_inactive: false
          key_expires_in: 2592000.0
          last_updated: "1716980105"
          max_query_depth: -1
          meta_data:
            user_type: mobile_user
          name: Sample policy
          org_id: 664a14650619d40001f1f00f
          partitions:
            acl: true
            complexity: false
            per_api: false
            quota: true
            rate_limit: true
          per: 60
          quota_max: 10000
          quota_renewal_rate: 3600
          rate: 1000
          smoothing:
            delay: 30
            enabled: false
            step: 100
            threshold: 500
            trigger: 0.8
          tags:
          - security
          throttle_interval: 10
          throttle_retry_limit: 10
        Pages: 1
    singleAPIDef:
      value:
        api_definition:
          api_id: b84fe1a04e5648927971c0557971565c
          auth:
            auth_header_name: authorization
          definition:
            key: version
            location: header
          id: 66596520c7f5720001b22558
          name: Tyk Test API
          org_id: 664a14650619d40001f1f00f
          proxy:
            listen_path: /tyk-api-test/
            strip_listen_path: true
            target_url: https://httpbin.org
          use_oauth2: true
          version_data:
            not_versioned: true
            versions:
              Default:
                name: Default
  schemas:
    APICertificateStatusMessage:
      example:
        id: 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
        message: Certificate added
        status: ok
      properties:
        id:
          example: 5e9d9544a1dcd60001d0ed207c440d66ebb0a4629d21329808dce9091acf5f2fde328067a6e60e5347271d90
          type: string
        message:
          example: Certificate added
          type: string
        status:
          example: ok
          type: string
      type: object
    APIDescription:
      example:
        api_id: api_id
        short_description: Sample api to showcase tyk OAS
        auth_type: jwt
        policy_id: 5ead7295575961000181868
        documentation: documentation
        name: Throttling Api test
        show: true
        long_description: This Api uses the petstore swagger to showcase Tyk OAS capability
        fields:
          message: sms
        config:
          disable_signup: true
          enable_multi_selection: true
          HashKeys: true
          mail_options:
            mail_from_name: mail_from_name
            mail_from_email: mail_from_email
            email_copy:
              key_email:
                subject: subject
                body: body
                enabled: true
                hide_token_data: true
                sign_off: sign_off
              reset_password_email:
                subject: subject
                body: body
                enabled: true
                hide_token_data: true
                sign_off: sign_off
              welcome_email:
                subject: subject
                body: body
                enabled: true
                hide_token_data: true
                sign_off: sign_off
          enable_dcr: true
          require_key_approval: true
          signup_fields:
          - signup_fields
          - signup_fields
          oauth_usage_limit: -1
          redirect_to: redirect_to
          secure_key_approval: true
          disable_login: true
          org_id: org_id
          catalogue_login_only: true
          redirect_on_key_request: true
          id: id
          override: true
          disable_auto_login: true
          dcr_options:
            access_token: access_token
            grant_types:
            - grant_types
            - grant_types
            provider: provider
            idp_host: idp_host
            registration_endpoint: registration_endpoint
            token_endpoint_auth_method: token_endpoint_auth_method
            response_types:
            - response_types
            - response_types
          email: catalogue@tyk.io
          key_request_fields:
          - key_request_fields
          - key_request_fields
        version: v2
        is_keyless: false
      properties:
        api_id:
          type: string
        auth_type:
          example: jwt
          type: string
        config:
          $ref: '#/components/schemas/PortalConfig'
        documentation:
          type: string
        fields:
          additionalProperties:
            type: string
          example:
            message: sms
          nullable: true
          type: object
        is_keyless:
          example: false
          type: boolean
        long_description:
          example: This Api uses the petstore swagger to showcase Tyk OAS capability
          type: string
        name:
          example: Throttling Api test
          type: string
        policy_id:
          example: 5ead7295575961000181868
          type: string
        short_description:
          example: Sample api to showcase tyk OAS
          type: string
        show:
          example: true
          type: boolean
        version:
          enum:
          - v2
          - '""'
          type: string
      type: object
    APIDescriptionList:
      items:
        $ref: '#/components/schemas/APIDescription'
      nullable: true
      type: array
    APIDocumentation:
      example:
        api_id: api_id
        documentation: https://petstore.swagger.io/v2/swagger.json
        doc_type: swagger_custom_url
        id: id
      properties:
        api_id:
          type: string
        doc_type:
          enum:
          - swagger_custom_url
          - blueprint
          - swagger
          example: swagger_custom_url
          type: string
        documentation:
          example: https://petstore.swagger.io/v2/swagger.json
          type: string
        id:
          type: string
      type: object
    APILimit:
      example:
        max_query_depth: 6
        quota_max: 5
        rate: 9.301444243932576
        throttle_retry_limit: 1
        quota_remaining: 5
        throttle_interval: 1.2315135367772556
        quota_renews: 7
        smoothing:
          delay: 3
          step: 2
          threshold: 4
          trigger: 7.386281948385884
          enabled: true
        per: 1.4658129805029452
        quota_renewal_rate: 2
        set_by_policy: true
      properties:
        max_query_depth:
          type: integer
        per:
          type: number
        quota_max:
          type: integer
        quota_remaining:
          type: integer
        quota_renewal_rate:
          type: integer
        quota_renews:
          type: integer
        rate:
          type: number
        set_by_policy:
          type: boolean
        smoothing:
          $ref: '#/components/schemas/RateLimitSmoothing'
        throttle_interval:
          type: number
        throttle_retry_limit:
          type: integer
      type: object
    AccessDefinition:
      example:
        restricted_types:
        - name: name
          fields:
          - fields
          - fields
        - name: name
          fields:
          - fields
          - fields
        allowed_urls:
        - methods:
          - GET
          - PATCH
          - HEAD
          - PUT
          - DELETE
          url: anything/rate-limit-1-per-5
        - methods:
          - GET
          - PATCH
          - HEAD
          - PUT
          - DELETE
          url: anything/rate-limit-1-per-5
        api_id: d1dfc6a927a046c54c0ed470f19757cc
        allowed_types:
        - name: name
          fields:
          - fields
          - fields
        - name: name
          fields:
          - fields
          - fields
        versions:
        - Default
        - v2
        api_name: Rate Limit Proxy API
        allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
        limit:
          max_query_depth: 6
          quota_max: 5
          rate: 9.301444243932576
          throttle_retry_limit: 1
          quota_remaining: 5
          throttle_interval: 1.2315135367772556
          quota_renews: 7
          smoothing:
            delay: 3
            step: 2
            threshold: 4
            trigger: 7.386281948385884
            enabled: true
          per: 1.4658129805029452
          quota_renewal_rate: 2
          set_by_policy: true
        disable_introspection: false
        field_access_rights:
        - type_name: type_name
          limits:
            max_query_depth: 0
          field_name: field_name
        - type_name: type_name
          limits:
            max_query_depth: 0
          field_name: field_name
      properties:
        allowance_scope:
          example: d1dfc6a927a046c54c0ed470f19757cc
          type: string
        allowed_types:
          items:
            $ref: '#/components/schemas/GraphqlType'
          nullable: true
          type: array
        allowed_urls:
          items:
            $ref: '#/components/schemas/AccessSpec'
          nullable: true
          type: array
        api_id:
          example: d1dfc6a927a046c54c0ed470f19757cc
          type: string
        api_name:
          example: Rate Limit Proxy API
          type: string
        disable_introspection:
          example: false
          type: boolean
        field_access_rights:
          items:
            $ref: '#/components/schemas/FieldAccessDefinition'
          nullable: true
          type: array
        limit:
          $ref: '#/components/schemas/APILimit'
        restricted_types:
          items:
            $ref: '#/components/schemas/GraphqlType'
          nullable: true
          type: array
        versions:
          example:
          - Default
          - v2
          items:
            type: string
          nullable: true
          type: array
      type: object
    AccessManagementPayload:
      example:
        userIds:
        - 663b2a835715ecb6edef24e3
        - 663a5bbf5715ec8040251f2a
        userGroupIds:
        - 663a4ed6b6be920001b191aa
        - 663a4ed6b6be920001b191ab
      properties:
        userGroupIds:
          example:
          - 663a4ed6b6be920001b191aa
          - 663a4ed6b6be920001b191ab
          items:
            type: string
          type: array
        userIds:
          example:
          - 663b2a835715ecb6edef24e3
          - 663a5bbf5715ec8040251f2a
          items:
            type: string
          type: array
      type: object
    AccessSpec:
      example:
        methods:
        - GET
        - PATCH
        - HEAD
        - PUT
        - DELETE
        url: anything/rate-limit-1-per-5
      properties:
        methods:
          example:
          - GET
          - PATCH
          - HEAD
          - PUT
          - DELETE
          items:
            type: string
          nullable: true
          type: array
        url:
          example: anything/rate-limit-1-per-5
          type: string
      type: object
    AggregateAnalyticsData:
      example:
        pages: 6
        data:
        - hits: 26
          min_latency: 0
          last_hit: 2024-06-19T06:33:30Z
          max_latency: 0
          request_time: 190.2
          min_upstream_latency: 0
          upstream_latency: 0
          success: 22
          latency: 0
          max_upstream_latency: 0
          id:
            api_id: 7364617cc7d345d9755d182635dfd46d
            iso_country: iso_country
            code: 404
            year: 2024
            queries:
              key: 0
            url: url
            path: path
            hour: 0
            month: 6
            api_name: OAS http
            alias: alias
            day: 12
            key: key
          error: 4
        - hits: 26
          min_latency: 0
          last_hit: 2024-06-19T06:33:30Z
          max_latency: 0
          request_time: 190.2
          min_upstream_latency: 0
          upstream_latency: 0
          success: 22
          latency: 0
          max_upstream_latency: 0
          id:
            api_id: 7364617cc7d345d9755d182635dfd46d
            iso_country: iso_country
            code: 404
            year: 2024
            queries:
              key: 0
            url: url
            path: path
            hour: 0
            month: 6
            api_name: OAS http
            alias: alias
            day: 12
            key: key
          error: 4
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResultUnit'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    AllCategoriesResponse:
      example:
        categories:
        - count: 3
          name: tag1
        - count: 3
          name: tag1
      properties:
        categories:
          items:
            $ref: '#/components/schemas/CategoryCount'
          nullable: true
          type: array
      type: object
    AllKeys:
      example:
        keys:
        - keys
        - keys
      properties:
        keys:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ApiCatalogue:
      example:
        apis:
        - api_id: api_id
          short_description: Sample api to showcase tyk OAS
          auth_type: jwt
          policy_id: 5ead7295575961000181868
          documentation: documentation
          name: Throttling Api test
          show: true
          long_description: This Api uses the petstore swagger to showcase Tyk OAS
            capability
          fields:
            message: sms
          config:
            disable_signup: true
            enable_multi_selection: true
            HashKeys: true
            mail_options:
              mail_from_name: mail_from_name
              mail_from_email: mail_from_email
              email_copy:
                key_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
                reset_password_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
                welcome_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
            enable_dcr: true
            require_key_approval: true
            signup_fields:
            - signup_fields
            - signup_fields
            oauth_usage_limit: -1
            redirect_to: redirect_to
            secure_key_approval: true
            disable_login: true
            org_id: org_id
            catalogue_login_only: true
            redirect_on_key_request: true
            id: id
            override: true
            disable_auto_login: true
            dcr_options:
              access_token: access_token
              grant_types:
              - grant_types
              - grant_types
              provider: provider
              idp_host: idp_host
              registration_endpoint: registration_endpoint
              token_endpoint_auth_method: token_endpoint_auth_method
              response_types:
              - response_types
              - response_types
            email: catalogue@tyk.io
            key_request_fields:
            - key_request_fields
            - key_request_fields
          version: v2
          is_keyless: false
        - api_id: api_id
          short_description: Sample api to showcase tyk OAS
          auth_type: jwt
          policy_id: 5ead7295575961000181868
          documentation: documentation
          name: Throttling Api test
          show: true
          long_description: This Api uses the petstore swagger to showcase Tyk OAS
            capability
          fields:
            message: sms
          config:
            disable_signup: true
            enable_multi_selection: true
            HashKeys: true
            mail_options:
              mail_from_name: mail_from_name
              mail_from_email: mail_from_email
              email_copy:
                key_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
                reset_password_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
                welcome_email:
                  subject: subject
                  body: body
                  enabled: true
                  hide_token_data: true
                  sign_off: sign_off
            enable_dcr: true
            require_key_approval: true
            signup_fields:
            - signup_fields
            - signup_fields
            oauth_usage_limit: -1
            redirect_to: redirect_to
            secure_key_approval: true
            disable_login: true
            org_id: org_id
            catalogue_login_only: true
            redirect_on_key_request: true
            id: id
            override: true
            disable_auto_login: true
            dcr_options:
              access_token: access_token
              grant_types:
              - grant_types
              - grant_types
              provider: provider
              idp_host: idp_host
              registration_endpoint: registration_endpoint
              token_endpoint_auth_method: token_endpoint_auth_method
              response_types:
              - response_types
              - response_types
            email: catalogue@tyk.io
            key_request_fields:
            - key_request_fields
            - key_request_fields
          version: v2
          is_keyless: false
        org_id: org_id
        id: 665405f15715ec2c849cf641
        email: email
      properties:
        apis:
          items:
            $ref: '#/components/schemas/APIDescription'
          nullable: true
          type: array
        email:
          type: string
        id:
          example: 665405f15715ec2c849cf641
          type: string
        org_id:
          type: string
      required:
      - apis
      type: object
    ApiDefinition:
      example:
        is_site: true
        oas:
          components:
            headers:
              key: null
            examples:
              key: null
            schemas:
              key: null
            requestBodies:
              key: null
            callbacks:
              key: null
            responses:
              key: null
            links:
              key: null
            securitySchemes:
              key: null
            parameters:
              key: null
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          openapi: openapi
          paths:
            key:
              summary: summary
              description: description
              delete:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              put:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              head:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              patch:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              trace:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              post:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              get:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              options:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
              $ref: $ref
              parameters:
              - null
              - null
              connect:
                summary: summary
                security:
                - null
                - null
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                requestBody: "{}"
                deprecated: true
                callbacks:
                  key: null
                description: description
                operationId: operationId
                responses:
                  key: null
                externalDocs:
                  description: description
                  url: url
                parameters:
                - null
                - null
                tags:
                - tags
                - tags
          externalDocs:
            description: description
            url: url
          info:
            license:
              name: name
              url: url
            contact:
              name: name
              email: email
              url: url
            description: description
            termsOfService: termsOfService
            title: title
            version: version
          tags:
          - name: name
            description: description
            externalDocs:
              description: description
              url: url
          - name: name
            description: description
            externalDocs:
              description: description
              url: url
        api_model: "{}"
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_owners:
        - user_owners
        - user_owners
        api_definition:
          api_id: api_id
          session_lifetime: 9
          config_data:
            key: ""
          auth:
            auth_header_name: auth_header_name
            use_param: true
            signature:
              allowed_clock_skew: 6
              error_message: error_message
              use_param: true
              header: header
              error_code: 1
              secret: secret
              param_name: param_name
              algorithm: algorithm
            name: name
            disable_header: true
            use_certificate: true
            use_cookie: true
            validate_signature: true
            param_name: param_name
            cookie_name: cookie_name
          jwt_not_before_validation_skew: 0
          jwt_policy_field_name: jwt_policy_field_name
          jwt_signing_method: jwt_signing_method
          use_standard_auth: true
          pinned_public_keys:
            key: pinned_public_keys
          openid_options:
            segregate_by_client: true
            providers:
            - client_ids:
                key: client_ids
              issuer: issuer
            - client_ids:
                key: client_ids
              issuer: issuer
          config_data_disabled: true
          jwt_skip_kid: true
          protocol: protocol
          hmac_allowed_clock_skew: 1.0246457001441578
          tag_headers:
          - tag_headers
          - tag_headers
          enable_context_vars: true
          global_rate_limit:
            rate: 1.2315135367772556
            disabled: true
            per: 7.386281948385884
          jwt_identity_base_field: jwt_identity_base_field
          id: id
          enable_ip_blacklisting: true
          jwt_scope_to_policy_mapping:
            key: jwt_scope_to_policy_mapping
          detailed_tracing: true
          expire_analytics_after: 7
          dont_set_quota_on_create: true
          slug: slug
          hmac_allowed_algorithms:
          - hmac_allowed_algorithms
          - hmac_allowed_algorithms
          custom_middleware_bundle: custom_middleware_bundle
          listen_port: 1
          allowed_ips:
          - allowed_ips
          - allowed_ips
          jwt_issued_at_validation_skew: 0
          client_certificates:
          - client_certificates
          - client_certificates
          response_processors:
          - name: name
            options: ""
          - name: name
            options: ""
          upstream_certificates_disabled: true
          active: true
          custom_middleware:
            id_extractor:
              extractor_config:
                key: ""
              disabled: true
              extract_from: extract_from
              extract_with: extract_with
            pre:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            driver: driver
            post:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            response:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            auth_check:
              path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            post_key_auth:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
          enable_proxy_protocol: true
          request_signing:
            certificate_id: certificate_id
            is_enabled: true
            signature_header: signature_header
            header_list:
            - header_list
            - header_list
            key_id: key_id
            secret: secret
            algorithm: algorithm
          tags:
          - tags
          - tags
          proxy:
            check_host_against_uptime_tests: true
            enable_load_balancing: true
            target_list:
            - target_list
            - target_list
            preserve_host_header: true
            disable_strip_slash: true
            listen_path: listen_path
            target_url: target_url
            service_discovery:
              cache_disabled: true
              parent_data_path: parent_data_path
              query_endpoint: query_endpoint
              use_nested_query: true
              cache_timeout: 4
              use_discovery_service: true
              port_data_path: port_data_path
              use_target_list: true
              endpoint_returns_list: true
              target_path: target_path
              data_path: data_path
            strip_listen_path: true
            transport:
              ssl_max_version: 0
              ssl_min_version: 0
              ssl_insecure_skip_verify: true
              proxy_url: proxy_url
              ssl_ciphers:
              - ssl_ciphers
              - ssl_ciphers
              ssl_force_common_name_check: true
          CORS:
            max_age: 0
            allowed_methods:
            - allowed_methods
            - allowed_methods
            allowed_headers:
            - allowed_headers
            - allowed_headers
            debug: true
            enable: true
            options_passthrough: true
            allow_credentials: true
            exposed_headers:
            - exposed_headers
            - exposed_headers
            allowed_origins:
            - allowed_origins
            - allowed_origins
          certificates:
          - certificates
          - certificates
          jwt_client_base_field: jwt_client_base_field
          org_id: org_id
          domain: domain
          base_identity_provided_by: base_identity_provided_by
          name: name
          cache_options:
            cache_all_safe_requests: true
            enable_upstream_cache_control: true
            enable_cache: true
            cache_timeout: 2
            cache_by_headers:
            - cache_by_headers
            - cache_by_headers
            cache_response_codes:
            - 5
            - 5
            cache_control_ttl_header: cache_control_ttl_header
          external_oauth:
            enabled: true
            providers:
            - introspection:
                cache:
                  enabled: true
                  timeout: 9
                identity_base_field: identity_base_field
                client_secret: client_secret
                client_id: client_id
                enabled: true
                url: url
              jwt:
                expires_at_validation_skew: 0
                identity_base_field: identity_base_field
                signing_method: signing_method
                source: source
                issued_at_validation_skew: 0
                enabled: true
                not_before_validation_skew: 0
            - introspection:
                cache:
                  enabled: true
                  timeout: 9
                identity_base_field: identity_base_field
                client_secret: client_secret
                client_id: client_id
                enabled: true
                url: url
              jwt:
                expires_at_validation_skew: 0
                identity_base_field: identity_base_field
                signing_method: signing_method
                source: source
                issued_at_validation_skew: 0
                enabled: true
                not_before_validation_skew: 0
          custom_plugin_auth_enabled: true
          expiration: expiration
          enable_ip_whitelisting: true
          jwt_expires_at_validation_skew: 0
          notifications:
            oauth_on_keychange_url: oauth_on_keychange_url
            shared_secret: shared_secret
          use_oauth2: true
          internal: true
          use_keyless: true
          use_mutual_tls_auth: true
          session_lifetime_respects_key_expiration: true
          use_openid: true
          oauth_meta:
            allowed_authorize_types:
            - allowed_authorize_types
            - allowed_authorize_types
            auth_login_redirect: auth_login_redirect
            allowed_access_types:
            - allowed_access_types
            - allowed_access_types
          enable_batch_request_support: true
          session_provider:
            meta:
              key: ""
            name: name
            storage_engine: storage_engine
          do_not_track: true
          disable_quota: true
          jwt_scope_claim_name: jwt_scope_claim_name
          jwt_source: jwt_source
          enable_signature_checking: true
          enable_jwt: true
          tags_disabled: true
          definition:
            default: default
            versions:
              key: versions
            strip_versioning_data: true
            name: name
            location: location
            enabled: true
            key: key
            strip_path: true
            fallback_to_default: true
          strip_auth_data: true
          graphql:
            schema: schema
            last_schema_update: 2000-01-23T04:56:07.000+00:00
            proxy:
              features:
                use_immutable_headers: true
              use_response_extensions:
                on_error_forwarding: true
              request_headers:
                key: request_headers
              request_headers_rewrite:
                key:
                  value: value
                  remove: true
              subscription_type: subscription_type
              auth_headers:
                key: auth_headers
            execution_mode: execution_mode
            introspection:
              disabled: true
            engine:
              global_headers:
              - value: value
                key: key
              - value: value
                key: key
              data_sources:
              - internal: true
                kind: kind
                name: name
                config: ""
                root_fields:
                - fields:
                  - fields
                  - fields
                  type: type
                - fields:
                  - fields
                  - fields
                  type: type
              - internal: true
                kind: kind
                name: name
                config: ""
                root_fields:
                - fields:
                  - fields
                  - fields
                  type: type
                - fields:
                  - fields
                  - fields
                  type: type
              field_configs:
              - path:
                - path
                - path
                type_name: type_name
                disable_default_mapping: true
                field_name: field_name
              - path:
                - path
                - path
                type_name: type_name
                disable_default_mapping: true
                field_name: field_name
            subgraph:
              sdl: sdl
            supergraph:
              subgraphs:
              - api_id: api_id
                headers:
                  key: headers
                name: name
                sdl: sdl
                subscription_type: subscription_type
                url: url
              - api_id: api_id
                headers:
                  key: headers
                name: name
                sdl: sdl
                subscription_type: subscription_type
                url: url
              updated_at: 2000-01-23T04:56:07.000+00:00
              global_headers:
                key: global_headers
              disable_query_batching: true
              merged_sdl: merged_sdl
            type_field_configurations:
            - mapping:
                path: path
                disabled: true
              type_name: type_name
              data_source:
                kind: kind
                data_source_config: ""
              field_name: field_name
            - mapping:
                path: path
                disabled: true
              type_name: type_name
              data_source:
                kind: kind
                data_source_config: ""
              field_name: field_name
            playground:
              path: path
              enabled: true
            version: version
            enabled: true
          jwt_default_policies:
          - jwt_default_policies
          - jwt_default_policies
          basic_auth:
            body_user_regexp: body_user_regexp
            cache_ttl: 5
            body_password_regexp: body_password_regexp
            disable_caching: true
            extract_from_body: true
          event_handlers:
            events:
              key:
              - handler_name: handler_name
                handler_meta:
                  key: ""
              - handler_name: handler_name
                handler_meta:
                  key: ""
          is_oas: true
          blacklisted_ips:
          - blacklisted_ips
          - blacklisted_ips
          analytics_plugin:
            enable: true
            plugin_path: plugin_path
            func_name: func_name
          upstream_certificates:
            key: upstream_certificates
          disable_rate_limit: true
          enable_coprocess_auth: true
          enable_detailed_recording: true
          version_data:
            versions:
              key:
                global_response_headers:
                  key: global_response_headers
                global_response_headers_remove:
                - global_response_headers_remove
                - global_response_headers_remove
                extended_paths:
                  circuit_breakers:
                  - path: path
                    threshold_percent: 6.778324963048013
                    method: method
                    disabled: true
                    disable_half_open_state: true
                    return_to_service_after: 1
                    samples: 2
                  - path: path
                    threshold_percent: 6.778324963048013
                    method: method
                    disabled: true
                    disable_half_open_state: true
                    return_to_service_after: 1
                    samples: 2
                  do_not_track_endpoints:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  internal:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  virtual:
                  - path: path
                    proxy_on_error: true
                    method: method
                    response_function_name: response_function_name
                    disabled: true
                    function_source_uri: function_source_uri
                    use_session: true
                    function_source_type: function_source_type
                  - path: path
                    proxy_on_error: true
                    method: method
                    response_function_name: response_function_name
                    disabled: true
                    function_source_uri: function_source_uri
                    use_session: true
                    function_source_type: function_source_type
                  transform_jq_response:
                  - filter: filter
                    path: path
                    method: method
                  - filter: filter
                    path: path
                    method: method
                  validate_json:
                  - schema:
                      key: ""
                    path: path
                    error_response_code: 3
                    method: method
                    disabled: true
                    schema_b64: schema_b64
                  - schema:
                      key: ""
                    path: path
                    error_response_code: 3
                    method: method
                    disabled: true
                    schema_b64: schema_b64
                  black_list:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  mock_response:
                  - ignore_case: true
                    headers:
                      key: headers
                    path: path
                    code: 5
                    method: method
                    disabled: true
                    body: body
                  - ignore_case: true
                    headers:
                      key: headers
                    path: path
                    code: 5
                    method: method
                    disabled: true
                    body: body
                  persist_graphql:
                  - path: path
                    variables:
                      key: ""
                    method: method
                    operation: operation
                  - path: path
                    variables:
                      key: ""
                    method: method
                    operation: operation
                  validate_request:
                  - path: path
                    error_response_code: 3
                    method: method
                    enabled: true
                  - path: path
                    error_response_code: 3
                    method: method
                    enabled: true
                  go_plugin:
                  - path: path
                    method: method
                    disabled: true
                    plugin_path: plugin_path
                    func_name: func_name
                  - path: path
                    method: method
                    disabled: true
                    plugin_path: plugin_path
                    func_name: func_name
                  transform_headers:
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  advance_cache_config:
                  - cache_key_regex: cache_key_regex
                    path: path
                    method: method
                    disabled: true
                    cache_response_codes:
                    - 6
                    - 6
                    timeout: 3
                  - cache_key_regex: cache_key_regex
                    path: path
                    method: method
                    disabled: true
                    cache_response_codes:
                    - 6
                    - 6
                    timeout: 3
                  white_list:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  transform:
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  size_limits:
                  - path: path
                    method: method
                    disabled: true
                    size_limit: 6
                  - path: path
                    method: method
                    disabled: true
                    size_limit: 6
                  transform_response:
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  ignored:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  cache:
                  - cache
                  - cache
                  method_transforms:
                  - path: path
                    method: method
                    disabled: true
                    to_method: to_method
                  - path: path
                    method: method
                    disabled: true
                    to_method: to_method
                  transform_jq:
                  - filter: filter
                    path: path
                    method: method
                  - filter: filter
                    path: path
                    method: method
                  transform_response_headers:
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  track_endpoints:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  hard_timeouts:
                  - path: path
                    method: method
                    disabled: true
                    timeout: 6
                  - path: path
                    method: method
                    disabled: true
                    timeout: 6
                  url_rewrites:
                  - match_pattern: match_pattern
                    path: path
                    method: method
                    disabled: true
                    rewrite_to: rewrite_to
                    triggers:
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                  - match_pattern: match_pattern
                    path: path
                    method: method
                    disabled: true
                    rewrite_to: rewrite_to
                    triggers:
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                expires: expires
                override_target: override_target
                ignore_endpoint_case: true
                global_size_limit: 7
                global_headers:
                  key: global_headers
                paths:
                  ignored:
                  - ignored
                  - ignored
                  white_list:
                  - white_list
                  - white_list
                  black_list:
                  - black_list
                  - black_list
                name: name
                global_headers_disabled: true
                global_headers_remove:
                - global_headers_remove
                - global_headers_remove
                use_extended_paths: true
                global_response_headers_disabled: true
            default_version: default_version
            not_versioned: true
          auth_configs:
            key:
              auth_header_name: auth_header_name
              use_param: true
              signature:
                allowed_clock_skew: 6
                error_message: error_message
                use_param: true
                header: header
                error_code: 1
                secret: secret
                param_name: param_name
                algorithm: algorithm
              name: name
              disable_header: true
              use_certificate: true
              use_cookie: true
              validate_signature: true
              param_name: param_name
              cookie_name: cookie_name
          uptime_tests:
            check_list:
            - headers:
                key: headers
              protocol: protocol
              method: method
              enable_proxy_protocol: true
              body: body
              commands:
              - name: name
                message: message
              - name: name
                message: message
              timeout: 6
              url: url
            - headers:
                key: headers
              protocol: protocol
              method: method
              enable_proxy_protocol: true
              body: body
              commands:
              - name: name
                message: message
              - name: name
                message: message
              timeout: 6
              url: url
            config:
              expire_utime_after: 8
              service_discovery:
                cache_disabled: true
                parent_data_path: parent_data_path
                query_endpoint: query_endpoint
                use_nested_query: true
                cache_timeout: 4
                use_discovery_service: true
                port_data_path: port_data_path
                use_target_list: true
                endpoint_returns_list: true
                target_path: target_path
                data_path: data_path
              recheck_wait: 9
          custom_middleware_bundle_disabled: true
          domain_disabled: true
          use_basic_auth: true
          use_go_plugin_auth: true
          idp_client_id_mapping_disabled: true
          certificate_pinning_disabled: true
          scopes:
            jwt:
              scope_to_policy:
                key: scope_to_policy
              scope_claim_name: scope_claim_name
            oidc:
              scope_to_policy:
                key: scope_to_policy
              scope_claim_name: scope_claim_name
          auth_provider:
            meta:
              key: ""
            name: name
            storage_engine: storage_engine
        created_at: 2000-01-23T04:56:07.000+00:00
        categories:
        - categories
        - categories
        sort_by: 7
        hook_references:
        - event_timeout: 0
          hook:
            event_timeout: 0
            api_model: "{}"
            method: POST
            webhook_id: 1f78e319202b430e92286cff3ca759e3
            org_id: 5e9d9544a1dcd60001d0ed20
            name: Expired Keys webhook
            header_map:
              secret: superscretkey
              x-auth: authvalue
            template_path: templates/default_webhook.json
            id: 664b613f5715ec4c96cbef3e
            target_path: https://httpbin.org/expired-keys
          event_name: event_name
        - event_timeout: 0
          hook:
            event_timeout: 0
            api_model: "{}"
            method: POST
            webhook_id: 1f78e319202b430e92286cff3ca759e3
            org_id: 5e9d9544a1dcd60001d0ed20
            name: Expired Keys webhook
            header_map:
              secret: superscretkey
              x-auth: authvalue
            template_path: templates/default_webhook.json
            id: 664b613f5715ec4c96cbef3e
            target_path: https://httpbin.org/expired-keys
          event_name: event_name
        user_group_owners:
        - user_group_owners
        - user_group_owners
      properties:
        api_definition:
          $ref: '#/components/schemas/ApidefAPIDefinition'
        api_model:
          type: object
        categories:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          nullable: true
          type: string
        hook_references:
          items:
            $ref: '#/components/schemas/HookReference'
          nullable: true
          type: array
        is_site:
          type: boolean
        oas:
          $ref: '#/components/schemas/OasOAS'
        sort_by:
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
        user_group_owners:
          items:
            type: string
          nullable: true
          type: array
        user_owners:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ApiDefinitions:
      example:
        pages: 6
        apis:
        - is_site: true
          oas:
            components:
              headers:
                key: null
              examples:
                key: null
              schemas:
                key: null
              requestBodies:
                key: null
              callbacks:
                key: null
              responses:
                key: null
              links:
                key: null
              securitySchemes:
                key: null
              parameters:
                key: null
            security:
            - null
            - null
            servers:
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            openapi: openapi
            paths:
              key:
                summary: summary
                description: description
                delete:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                put:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                head:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                patch:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                trace:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                post:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                get:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                options:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                $ref: $ref
                parameters:
                - null
                - null
                connect:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
            externalDocs:
              description: description
              url: url
            info:
              license:
                name: name
                url: url
              contact:
                name: name
                email: email
                url: url
              description: description
              termsOfService: termsOfService
              title: title
              version: version
            tags:
            - name: name
              description: description
              externalDocs:
                description: description
                url: url
            - name: name
              description: description
              externalDocs:
                description: description
                url: url
          api_model: "{}"
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_owners:
          - user_owners
          - user_owners
          api_definition:
            api_id: api_id
            session_lifetime: 9
            config_data:
              key: ""
            auth:
              auth_header_name: auth_header_name
              use_param: true
              signature:
                allowed_clock_skew: 6
                error_message: error_message
                use_param: true
                header: header
                error_code: 1
                secret: secret
                param_name: param_name
                algorithm: algorithm
              name: name
              disable_header: true
              use_certificate: true
              use_cookie: true
              validate_signature: true
              param_name: param_name
              cookie_name: cookie_name
            jwt_not_before_validation_skew: 0
            jwt_policy_field_name: jwt_policy_field_name
            jwt_signing_method: jwt_signing_method
            use_standard_auth: true
            pinned_public_keys:
              key: pinned_public_keys
            openid_options:
              segregate_by_client: true
              providers:
              - client_ids:
                  key: client_ids
                issuer: issuer
              - client_ids:
                  key: client_ids
                issuer: issuer
            config_data_disabled: true
            jwt_skip_kid: true
            protocol: protocol
            hmac_allowed_clock_skew: 1.0246457001441578
            tag_headers:
            - tag_headers
            - tag_headers
            enable_context_vars: true
            global_rate_limit:
              rate: 1.2315135367772556
              disabled: true
              per: 7.386281948385884
            jwt_identity_base_field: jwt_identity_base_field
            id: id
            enable_ip_blacklisting: true
            jwt_scope_to_policy_mapping:
              key: jwt_scope_to_policy_mapping
            detailed_tracing: true
            expire_analytics_after: 7
            dont_set_quota_on_create: true
            slug: slug
            hmac_allowed_algorithms:
            - hmac_allowed_algorithms
            - hmac_allowed_algorithms
            custom_middleware_bundle: custom_middleware_bundle
            listen_port: 1
            allowed_ips:
            - allowed_ips
            - allowed_ips
            jwt_issued_at_validation_skew: 0
            client_certificates:
            - client_certificates
            - client_certificates
            response_processors:
            - name: name
              options: ""
            - name: name
              options: ""
            upstream_certificates_disabled: true
            active: true
            custom_middleware:
              id_extractor:
                extractor_config:
                  key: ""
                disabled: true
                extract_from: extract_from
                extract_with: extract_with
              pre:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              driver: driver
              post:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              response:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              auth_check:
                path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              post_key_auth:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
            enable_proxy_protocol: true
            request_signing:
              certificate_id: certificate_id
              is_enabled: true
              signature_header: signature_header
              header_list:
              - header_list
              - header_list
              key_id: key_id
              secret: secret
              algorithm: algorithm
            tags:
            - tags
            - tags
            proxy:
              check_host_against_uptime_tests: true
              enable_load_balancing: true
              target_list:
              - target_list
              - target_list
              preserve_host_header: true
              disable_strip_slash: true
              listen_path: listen_path
              target_url: target_url
              service_discovery:
                cache_disabled: true
                parent_data_path: parent_data_path
                query_endpoint: query_endpoint
                use_nested_query: true
                cache_timeout: 4
                use_discovery_service: true
                port_data_path: port_data_path
                use_target_list: true
                endpoint_returns_list: true
                target_path: target_path
                data_path: data_path
              strip_listen_path: true
              transport:
                ssl_max_version: 0
                ssl_min_version: 0
                ssl_insecure_skip_verify: true
                proxy_url: proxy_url
                ssl_ciphers:
                - ssl_ciphers
                - ssl_ciphers
                ssl_force_common_name_check: true
            CORS:
              max_age: 0
              allowed_methods:
              - allowed_methods
              - allowed_methods
              allowed_headers:
              - allowed_headers
              - allowed_headers
              debug: true
              enable: true
              options_passthrough: true
              allow_credentials: true
              exposed_headers:
              - exposed_headers
              - exposed_headers
              allowed_origins:
              - allowed_origins
              - allowed_origins
            certificates:
            - certificates
            - certificates
            jwt_client_base_field: jwt_client_base_field
            org_id: org_id
            domain: domain
            base_identity_provided_by: base_identity_provided_by
            name: name
            cache_options:
              cache_all_safe_requests: true
              enable_upstream_cache_control: true
              enable_cache: true
              cache_timeout: 2
              cache_by_headers:
              - cache_by_headers
              - cache_by_headers
              cache_response_codes:
              - 5
              - 5
              cache_control_ttl_header: cache_control_ttl_header
            external_oauth:
              enabled: true
              providers:
              - introspection:
                  cache:
                    enabled: true
                    timeout: 9
                  identity_base_field: identity_base_field
                  client_secret: client_secret
                  client_id: client_id
                  enabled: true
                  url: url
                jwt:
                  expires_at_validation_skew: 0
                  identity_base_field: identity_base_field
                  signing_method: signing_method
                  source: source
                  issued_at_validation_skew: 0
                  enabled: true
                  not_before_validation_skew: 0
              - introspection:
                  cache:
                    enabled: true
                    timeout: 9
                  identity_base_field: identity_base_field
                  client_secret: client_secret
                  client_id: client_id
                  enabled: true
                  url: url
                jwt:
                  expires_at_validation_skew: 0
                  identity_base_field: identity_base_field
                  signing_method: signing_method
                  source: source
                  issued_at_validation_skew: 0
                  enabled: true
                  not_before_validation_skew: 0
            custom_plugin_auth_enabled: true
            expiration: expiration
            enable_ip_whitelisting: true
            jwt_expires_at_validation_skew: 0
            notifications:
              oauth_on_keychange_url: oauth_on_keychange_url
              shared_secret: shared_secret
            use_oauth2: true
            internal: true
            use_keyless: true
            use_mutual_tls_auth: true
            session_lifetime_respects_key_expiration: true
            use_openid: true
            oauth_meta:
              allowed_authorize_types:
              - allowed_authorize_types
              - allowed_authorize_types
              auth_login_redirect: auth_login_redirect
              allowed_access_types:
              - allowed_access_types
              - allowed_access_types
            enable_batch_request_support: true
            session_provider:
              meta:
                key: ""
              name: name
              storage_engine: storage_engine
            do_not_track: true
            disable_quota: true
            jwt_scope_claim_name: jwt_scope_claim_name
            jwt_source: jwt_source
            enable_signature_checking: true
            enable_jwt: true
            tags_disabled: true
            definition:
              default: default
              versions:
                key: versions
              strip_versioning_data: true
              name: name
              location: location
              enabled: true
              key: key
              strip_path: true
              fallback_to_default: true
            strip_auth_data: true
            graphql:
              schema: schema
              last_schema_update: 2000-01-23T04:56:07.000+00:00
              proxy:
                features:
                  use_immutable_headers: true
                use_response_extensions:
                  on_error_forwarding: true
                request_headers:
                  key: request_headers
                request_headers_rewrite:
                  key:
                    value: value
                    remove: true
                subscription_type: subscription_type
                auth_headers:
                  key: auth_headers
              execution_mode: execution_mode
              introspection:
                disabled: true
              engine:
                global_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                data_sources:
                - internal: true
                  kind: kind
                  name: name
                  config: ""
                  root_fields:
                  - fields:
                    - fields
                    - fields
                    type: type
                  - fields:
                    - fields
                    - fields
                    type: type
                - internal: true
                  kind: kind
                  name: name
                  config: ""
                  root_fields:
                  - fields:
                    - fields
                    - fields
                    type: type
                  - fields:
                    - fields
                    - fields
                    type: type
                field_configs:
                - path:
                  - path
                  - path
                  type_name: type_name
                  disable_default_mapping: true
                  field_name: field_name
                - path:
                  - path
                  - path
                  type_name: type_name
                  disable_default_mapping: true
                  field_name: field_name
              subgraph:
                sdl: sdl
              supergraph:
                subgraphs:
                - api_id: api_id
                  headers:
                    key: headers
                  name: name
                  sdl: sdl
                  subscription_type: subscription_type
                  url: url
                - api_id: api_id
                  headers:
                    key: headers
                  name: name
                  sdl: sdl
                  subscription_type: subscription_type
                  url: url
                updated_at: 2000-01-23T04:56:07.000+00:00
                global_headers:
                  key: global_headers
                disable_query_batching: true
                merged_sdl: merged_sdl
              type_field_configurations:
              - mapping:
                  path: path
                  disabled: true
                type_name: type_name
                data_source:
                  kind: kind
                  data_source_config: ""
                field_name: field_name
              - mapping:
                  path: path
                  disabled: true
                type_name: type_name
                data_source:
                  kind: kind
                  data_source_config: ""
                field_name: field_name
              playground:
                path: path
                enabled: true
              version: version
              enabled: true
            jwt_default_policies:
            - jwt_default_policies
            - jwt_default_policies
            basic_auth:
              body_user_regexp: body_user_regexp
              cache_ttl: 5
              body_password_regexp: body_password_regexp
              disable_caching: true
              extract_from_body: true
            event_handlers:
              events:
                key:
                - handler_name: handler_name
                  handler_meta:
                    key: ""
                - handler_name: handler_name
                  handler_meta:
                    key: ""
            is_oas: true
            blacklisted_ips:
            - blacklisted_ips
            - blacklisted_ips
            analytics_plugin:
              enable: true
              plugin_path: plugin_path
              func_name: func_name
            upstream_certificates:
              key: upstream_certificates
            disable_rate_limit: true
            enable_coprocess_auth: true
            enable_detailed_recording: true
            version_data:
              versions:
                key:
                  global_response_headers:
                    key: global_response_headers
                  global_response_headers_remove:
                  - global_response_headers_remove
                  - global_response_headers_remove
                  extended_paths:
                    circuit_breakers:
                    - path: path
                      threshold_percent: 6.778324963048013
                      method: method
                      disabled: true
                      disable_half_open_state: true
                      return_to_service_after: 1
                      samples: 2
                    - path: path
                      threshold_percent: 6.778324963048013
                      method: method
                      disabled: true
                      disable_half_open_state: true
                      return_to_service_after: 1
                      samples: 2
                    do_not_track_endpoints:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    internal:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    virtual:
                    - path: path
                      proxy_on_error: true
                      method: method
                      response_function_name: response_function_name
                      disabled: true
                      function_source_uri: function_source_uri
                      use_session: true
                      function_source_type: function_source_type
                    - path: path
                      proxy_on_error: true
                      method: method
                      response_function_name: response_function_name
                      disabled: true
                      function_source_uri: function_source_uri
                      use_session: true
                      function_source_type: function_source_type
                    transform_jq_response:
                    - filter: filter
                      path: path
                      method: method
                    - filter: filter
                      path: path
                      method: method
                    validate_json:
                    - schema:
                        key: ""
                      path: path
                      error_response_code: 3
                      method: method
                      disabled: true
                      schema_b64: schema_b64
                    - schema:
                        key: ""
                      path: path
                      error_response_code: 3
                      method: method
                      disabled: true
                      schema_b64: schema_b64
                    black_list:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    mock_response:
                    - ignore_case: true
                      headers:
                        key: headers
                      path: path
                      code: 5
                      method: method
                      disabled: true
                      body: body
                    - ignore_case: true
                      headers:
                        key: headers
                      path: path
                      code: 5
                      method: method
                      disabled: true
                      body: body
                    persist_graphql:
                    - path: path
                      variables:
                        key: ""
                      method: method
                      operation: operation
                    - path: path
                      variables:
                        key: ""
                      method: method
                      operation: operation
                    validate_request:
                    - path: path
                      error_response_code: 3
                      method: method
                      enabled: true
                    - path: path
                      error_response_code: 3
                      method: method
                      enabled: true
                    go_plugin:
                    - path: path
                      method: method
                      disabled: true
                      plugin_path: plugin_path
                      func_name: func_name
                    - path: path
                      method: method
                      disabled: true
                      plugin_path: plugin_path
                      func_name: func_name
                    transform_headers:
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    advance_cache_config:
                    - cache_key_regex: cache_key_regex
                      path: path
                      method: method
                      disabled: true
                      cache_response_codes:
                      - 6
                      - 6
                      timeout: 3
                    - cache_key_regex: cache_key_regex
                      path: path
                      method: method
                      disabled: true
                      cache_response_codes:
                      - 6
                      - 6
                      timeout: 3
                    white_list:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    transform:
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    size_limits:
                    - path: path
                      method: method
                      disabled: true
                      size_limit: 6
                    - path: path
                      method: method
                      disabled: true
                      size_limit: 6
                    transform_response:
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    ignored:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    cache:
                    - cache
                    - cache
                    method_transforms:
                    - path: path
                      method: method
                      disabled: true
                      to_method: to_method
                    - path: path
                      method: method
                      disabled: true
                      to_method: to_method
                    transform_jq:
                    - filter: filter
                      path: path
                      method: method
                    - filter: filter
                      path: path
                      method: method
                    transform_response_headers:
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    track_endpoints:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    hard_timeouts:
                    - path: path
                      method: method
                      disabled: true
                      timeout: 6
                    - path: path
                      method: method
                      disabled: true
                      timeout: 6
                    url_rewrites:
                    - match_pattern: match_pattern
                      path: path
                      method: method
                      disabled: true
                      rewrite_to: rewrite_to
                      triggers:
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                    - match_pattern: match_pattern
                      path: path
                      method: method
                      disabled: true
                      rewrite_to: rewrite_to
                      triggers:
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                  expires: expires
                  override_target: override_target
                  ignore_endpoint_case: true
                  global_size_limit: 7
                  global_headers:
                    key: global_headers
                  paths:
                    ignored:
                    - ignored
                    - ignored
                    white_list:
                    - white_list
                    - white_list
                    black_list:
                    - black_list
                    - black_list
                  name: name
                  global_headers_disabled: true
                  global_headers_remove:
                  - global_headers_remove
                  - global_headers_remove
                  use_extended_paths: true
                  global_response_headers_disabled: true
              default_version: default_version
              not_versioned: true
            auth_configs:
              key:
                auth_header_name: auth_header_name
                use_param: true
                signature:
                  allowed_clock_skew: 6
                  error_message: error_message
                  use_param: true
                  header: header
                  error_code: 1
                  secret: secret
                  param_name: param_name
                  algorithm: algorithm
                name: name
                disable_header: true
                use_certificate: true
                use_cookie: true
                validate_signature: true
                param_name: param_name
                cookie_name: cookie_name
            uptime_tests:
              check_list:
              - headers:
                  key: headers
                protocol: protocol
                method: method
                enable_proxy_protocol: true
                body: body
                commands:
                - name: name
                  message: message
                - name: name
                  message: message
                timeout: 6
                url: url
              - headers:
                  key: headers
                protocol: protocol
                method: method
                enable_proxy_protocol: true
                body: body
                commands:
                - name: name
                  message: message
                - name: name
                  message: message
                timeout: 6
                url: url
              config:
                expire_utime_after: 8
                service_discovery:
                  cache_disabled: true
                  parent_data_path: parent_data_path
                  query_endpoint: query_endpoint
                  use_nested_query: true
                  cache_timeout: 4
                  use_discovery_service: true
                  port_data_path: port_data_path
                  use_target_list: true
                  endpoint_returns_list: true
                  target_path: target_path
                  data_path: data_path
                recheck_wait: 9
            custom_middleware_bundle_disabled: true
            domain_disabled: true
            use_basic_auth: true
            use_go_plugin_auth: true
            idp_client_id_mapping_disabled: true
            certificate_pinning_disabled: true
            scopes:
              jwt:
                scope_to_policy:
                  key: scope_to_policy
                scope_claim_name: scope_claim_name
              oidc:
                scope_to_policy:
                  key: scope_to_policy
                scope_claim_name: scope_claim_name
            auth_provider:
              meta:
                key: ""
              name: name
              storage_engine: storage_engine
          created_at: 2000-01-23T04:56:07.000+00:00
          categories:
          - categories
          - categories
          sort_by: 7
          hook_references:
          - event_timeout: 0
            hook:
              event_timeout: 0
              api_model: "{}"
              method: POST
              webhook_id: 1f78e319202b430e92286cff3ca759e3
              org_id: 5e9d9544a1dcd60001d0ed20
              name: Expired Keys webhook
              header_map:
                secret: superscretkey
                x-auth: authvalue
              template_path: templates/default_webhook.json
              id: 664b613f5715ec4c96cbef3e
              target_path: https://httpbin.org/expired-keys
            event_name: event_name
          - event_timeout: 0
            hook:
              event_timeout: 0
              api_model: "{}"
              method: POST
              webhook_id: 1f78e319202b430e92286cff3ca759e3
              org_id: 5e9d9544a1dcd60001d0ed20
              name: Expired Keys webhook
              header_map:
                secret: superscretkey
                x-auth: authvalue
              template_path: templates/default_webhook.json
              id: 664b613f5715ec4c96cbef3e
              target_path: https://httpbin.org/expired-keys
            event_name: event_name
          user_group_owners:
          - user_group_owners
          - user_group_owners
        - is_site: true
          oas:
            components:
              headers:
                key: null
              examples:
                key: null
              schemas:
                key: null
              requestBodies:
                key: null
              callbacks:
                key: null
              responses:
                key: null
              links:
                key: null
              securitySchemes:
                key: null
              parameters:
                key: null
            security:
            - null
            - null
            servers:
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            openapi: openapi
            paths:
              key:
                summary: summary
                description: description
                delete:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                put:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                head:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                patch:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                trace:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                servers:
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                - variables:
                    key:
                      default: default
                      description: description
                      enum:
                      - enum
                      - enum
                  description: description
                  url: url
                post:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                get:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                options:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
                $ref: $ref
                parameters:
                - null
                - null
                connect:
                  summary: summary
                  security:
                  - null
                  - null
                  servers:
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  - variables:
                      key:
                        default: default
                        description: description
                        enum:
                        - enum
                        - enum
                    description: description
                    url: url
                  requestBody: "{}"
                  deprecated: true
                  callbacks:
                    key: null
                  description: description
                  operationId: operationId
                  responses:
                    key: null
                  externalDocs:
                    description: description
                    url: url
                  parameters:
                  - null
                  - null
                  tags:
                  - tags
                  - tags
            externalDocs:
              description: description
              url: url
            info:
              license:
                name: name
                url: url
              contact:
                name: name
                email: email
                url: url
              description: description
              termsOfService: termsOfService
              title: title
              version: version
            tags:
            - name: name
              description: description
              externalDocs:
                description: description
                url: url
            - name: name
              description: description
              externalDocs:
                description: description
                url: url
          api_model: "{}"
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_owners:
          - user_owners
          - user_owners
          api_definition:
            api_id: api_id
            session_lifetime: 9
            config_data:
              key: ""
            auth:
              auth_header_name: auth_header_name
              use_param: true
              signature:
                allowed_clock_skew: 6
                error_message: error_message
                use_param: true
                header: header
                error_code: 1
                secret: secret
                param_name: param_name
                algorithm: algorithm
              name: name
              disable_header: true
              use_certificate: true
              use_cookie: true
              validate_signature: true
              param_name: param_name
              cookie_name: cookie_name
            jwt_not_before_validation_skew: 0
            jwt_policy_field_name: jwt_policy_field_name
            jwt_signing_method: jwt_signing_method
            use_standard_auth: true
            pinned_public_keys:
              key: pinned_public_keys
            openid_options:
              segregate_by_client: true
              providers:
              - client_ids:
                  key: client_ids
                issuer: issuer
              - client_ids:
                  key: client_ids
                issuer: issuer
            config_data_disabled: true
            jwt_skip_kid: true
            protocol: protocol
            hmac_allowed_clock_skew: 1.0246457001441578
            tag_headers:
            - tag_headers
            - tag_headers
            enable_context_vars: true
            global_rate_limit:
              rate: 1.2315135367772556
              disabled: true
              per: 7.386281948385884
            jwt_identity_base_field: jwt_identity_base_field
            id: id
            enable_ip_blacklisting: true
            jwt_scope_to_policy_mapping:
              key: jwt_scope_to_policy_mapping
            detailed_tracing: true
            expire_analytics_after: 7
            dont_set_quota_on_create: true
            slug: slug
            hmac_allowed_algorithms:
            - hmac_allowed_algorithms
            - hmac_allowed_algorithms
            custom_middleware_bundle: custom_middleware_bundle
            listen_port: 1
            allowed_ips:
            - allowed_ips
            - allowed_ips
            jwt_issued_at_validation_skew: 0
            client_certificates:
            - client_certificates
            - client_certificates
            response_processors:
            - name: name
              options: ""
            - name: name
              options: ""
            upstream_certificates_disabled: true
            active: true
            custom_middleware:
              id_extractor:
                extractor_config:
                  key: ""
                disabled: true
                extract_from: extract_from
                extract_with: extract_with
              pre:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              driver: driver
              post:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              response:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              auth_check:
                path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              post_key_auth:
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
              - path: path
                require_session: true
                raw_body_only: true
                name: name
                disabled: true
            enable_proxy_protocol: true
            request_signing:
              certificate_id: certificate_id
              is_enabled: true
              signature_header: signature_header
              header_list:
              - header_list
              - header_list
              key_id: key_id
              secret: secret
              algorithm: algorithm
            tags:
            - tags
            - tags
            proxy:
              check_host_against_uptime_tests: true
              enable_load_balancing: true
              target_list:
              - target_list
              - target_list
              preserve_host_header: true
              disable_strip_slash: true
              listen_path: listen_path
              target_url: target_url
              service_discovery:
                cache_disabled: true
                parent_data_path: parent_data_path
                query_endpoint: query_endpoint
                use_nested_query: true
                cache_timeout: 4
                use_discovery_service: true
                port_data_path: port_data_path
                use_target_list: true
                endpoint_returns_list: true
                target_path: target_path
                data_path: data_path
              strip_listen_path: true
              transport:
                ssl_max_version: 0
                ssl_min_version: 0
                ssl_insecure_skip_verify: true
                proxy_url: proxy_url
                ssl_ciphers:
                - ssl_ciphers
                - ssl_ciphers
                ssl_force_common_name_check: true
            CORS:
              max_age: 0
              allowed_methods:
              - allowed_methods
              - allowed_methods
              allowed_headers:
              - allowed_headers
              - allowed_headers
              debug: true
              enable: true
              options_passthrough: true
              allow_credentials: true
              exposed_headers:
              - exposed_headers
              - exposed_headers
              allowed_origins:
              - allowed_origins
              - allowed_origins
            certificates:
            - certificates
            - certificates
            jwt_client_base_field: jwt_client_base_field
            org_id: org_id
            domain: domain
            base_identity_provided_by: base_identity_provided_by
            name: name
            cache_options:
              cache_all_safe_requests: true
              enable_upstream_cache_control: true
              enable_cache: true
              cache_timeout: 2
              cache_by_headers:
              - cache_by_headers
              - cache_by_headers
              cache_response_codes:
              - 5
              - 5
              cache_control_ttl_header: cache_control_ttl_header
            external_oauth:
              enabled: true
              providers:
              - introspection:
                  cache:
                    enabled: true
                    timeout: 9
                  identity_base_field: identity_base_field
                  client_secret: client_secret
                  client_id: client_id
                  enabled: true
                  url: url
                jwt:
                  expires_at_validation_skew: 0
                  identity_base_field: identity_base_field
                  signing_method: signing_method
                  source: source
                  issued_at_validation_skew: 0
                  enabled: true
                  not_before_validation_skew: 0
              - introspection:
                  cache:
                    enabled: true
                    timeout: 9
                  identity_base_field: identity_base_field
                  client_secret: client_secret
                  client_id: client_id
                  enabled: true
                  url: url
                jwt:
                  expires_at_validation_skew: 0
                  identity_base_field: identity_base_field
                  signing_method: signing_method
                  source: source
                  issued_at_validation_skew: 0
                  enabled: true
                  not_before_validation_skew: 0
            custom_plugin_auth_enabled: true
            expiration: expiration
            enable_ip_whitelisting: true
            jwt_expires_at_validation_skew: 0
            notifications:
              oauth_on_keychange_url: oauth_on_keychange_url
              shared_secret: shared_secret
            use_oauth2: true
            internal: true
            use_keyless: true
            use_mutual_tls_auth: true
            session_lifetime_respects_key_expiration: true
            use_openid: true
            oauth_meta:
              allowed_authorize_types:
              - allowed_authorize_types
              - allowed_authorize_types
              auth_login_redirect: auth_login_redirect
              allowed_access_types:
              - allowed_access_types
              - allowed_access_types
            enable_batch_request_support: true
            session_provider:
              meta:
                key: ""
              name: name
              storage_engine: storage_engine
            do_not_track: true
            disable_quota: true
            jwt_scope_claim_name: jwt_scope_claim_name
            jwt_source: jwt_source
            enable_signature_checking: true
            enable_jwt: true
            tags_disabled: true
            definition:
              default: default
              versions:
                key: versions
              strip_versioning_data: true
              name: name
              location: location
              enabled: true
              key: key
              strip_path: true
              fallback_to_default: true
            strip_auth_data: true
            graphql:
              schema: schema
              last_schema_update: 2000-01-23T04:56:07.000+00:00
              proxy:
                features:
                  use_immutable_headers: true
                use_response_extensions:
                  on_error_forwarding: true
                request_headers:
                  key: request_headers
                request_headers_rewrite:
                  key:
                    value: value
                    remove: true
                subscription_type: subscription_type
                auth_headers:
                  key: auth_headers
              execution_mode: execution_mode
              introspection:
                disabled: true
              engine:
                global_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                data_sources:
                - internal: true
                  kind: kind
                  name: name
                  config: ""
                  root_fields:
                  - fields:
                    - fields
                    - fields
                    type: type
                  - fields:
                    - fields
                    - fields
                    type: type
                - internal: true
                  kind: kind
                  name: name
                  config: ""
                  root_fields:
                  - fields:
                    - fields
                    - fields
                    type: type
                  - fields:
                    - fields
                    - fields
                    type: type
                field_configs:
                - path:
                  - path
                  - path
                  type_name: type_name
                  disable_default_mapping: true
                  field_name: field_name
                - path:
                  - path
                  - path
                  type_name: type_name
                  disable_default_mapping: true
                  field_name: field_name
              subgraph:
                sdl: sdl
              supergraph:
                subgraphs:
                - api_id: api_id
                  headers:
                    key: headers
                  name: name
                  sdl: sdl
                  subscription_type: subscription_type
                  url: url
                - api_id: api_id
                  headers:
                    key: headers
                  name: name
                  sdl: sdl
                  subscription_type: subscription_type
                  url: url
                updated_at: 2000-01-23T04:56:07.000+00:00
                global_headers:
                  key: global_headers
                disable_query_batching: true
                merged_sdl: merged_sdl
              type_field_configurations:
              - mapping:
                  path: path
                  disabled: true
                type_name: type_name
                data_source:
                  kind: kind
                  data_source_config: ""
                field_name: field_name
              - mapping:
                  path: path
                  disabled: true
                type_name: type_name
                data_source:
                  kind: kind
                  data_source_config: ""
                field_name: field_name
              playground:
                path: path
                enabled: true
              version: version
              enabled: true
            jwt_default_policies:
            - jwt_default_policies
            - jwt_default_policies
            basic_auth:
              body_user_regexp: body_user_regexp
              cache_ttl: 5
              body_password_regexp: body_password_regexp
              disable_caching: true
              extract_from_body: true
            event_handlers:
              events:
                key:
                - handler_name: handler_name
                  handler_meta:
                    key: ""
                - handler_name: handler_name
                  handler_meta:
                    key: ""
            is_oas: true
            blacklisted_ips:
            - blacklisted_ips
            - blacklisted_ips
            analytics_plugin:
              enable: true
              plugin_path: plugin_path
              func_name: func_name
            upstream_certificates:
              key: upstream_certificates
            disable_rate_limit: true
            enable_coprocess_auth: true
            enable_detailed_recording: true
            version_data:
              versions:
                key:
                  global_response_headers:
                    key: global_response_headers
                  global_response_headers_remove:
                  - global_response_headers_remove
                  - global_response_headers_remove
                  extended_paths:
                    circuit_breakers:
                    - path: path
                      threshold_percent: 6.778324963048013
                      method: method
                      disabled: true
                      disable_half_open_state: true
                      return_to_service_after: 1
                      samples: 2
                    - path: path
                      threshold_percent: 6.778324963048013
                      method: method
                      disabled: true
                      disable_half_open_state: true
                      return_to_service_after: 1
                      samples: 2
                    do_not_track_endpoints:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    internal:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    virtual:
                    - path: path
                      proxy_on_error: true
                      method: method
                      response_function_name: response_function_name
                      disabled: true
                      function_source_uri: function_source_uri
                      use_session: true
                      function_source_type: function_source_type
                    - path: path
                      proxy_on_error: true
                      method: method
                      response_function_name: response_function_name
                      disabled: true
                      function_source_uri: function_source_uri
                      use_session: true
                      function_source_type: function_source_type
                    transform_jq_response:
                    - filter: filter
                      path: path
                      method: method
                    - filter: filter
                      path: path
                      method: method
                    validate_json:
                    - schema:
                        key: ""
                      path: path
                      error_response_code: 3
                      method: method
                      disabled: true
                      schema_b64: schema_b64
                    - schema:
                        key: ""
                      path: path
                      error_response_code: 3
                      method: method
                      disabled: true
                      schema_b64: schema_b64
                    black_list:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    mock_response:
                    - ignore_case: true
                      headers:
                        key: headers
                      path: path
                      code: 5
                      method: method
                      disabled: true
                      body: body
                    - ignore_case: true
                      headers:
                        key: headers
                      path: path
                      code: 5
                      method: method
                      disabled: true
                      body: body
                    persist_graphql:
                    - path: path
                      variables:
                        key: ""
                      method: method
                      operation: operation
                    - path: path
                      variables:
                        key: ""
                      method: method
                      operation: operation
                    validate_request:
                    - path: path
                      error_response_code: 3
                      method: method
                      enabled: true
                    - path: path
                      error_response_code: 3
                      method: method
                      enabled: true
                    go_plugin:
                    - path: path
                      method: method
                      disabled: true
                      plugin_path: plugin_path
                      func_name: func_name
                    - path: path
                      method: method
                      disabled: true
                      plugin_path: plugin_path
                      func_name: func_name
                    transform_headers:
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    advance_cache_config:
                    - cache_key_regex: cache_key_regex
                      path: path
                      method: method
                      disabled: true
                      cache_response_codes:
                      - 6
                      - 6
                      timeout: 3
                    - cache_key_regex: cache_key_regex
                      path: path
                      method: method
                      disabled: true
                      cache_response_codes:
                      - 6
                      - 6
                      timeout: 3
                    white_list:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    transform:
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    size_limits:
                    - path: path
                      method: method
                      disabled: true
                      size_limit: 6
                    - path: path
                      method: method
                      disabled: true
                      size_limit: 6
                    transform_response:
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    - path: path
                      template_data:
                        template_source: template_source
                        input_type: input_type
                        template_mode: template_mode
                        enable_session: true
                      method: method
                      disabled: true
                    ignored:
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    - ignore_case: true
                      path: path
                      method: method
                      method_actions:
                        key:
                          headers:
                            key: headers
                          code: 6
                          data: data
                          action: action
                      disabled: true
                    cache:
                    - cache
                    - cache
                    method_transforms:
                    - path: path
                      method: method
                      disabled: true
                      to_method: to_method
                    - path: path
                      method: method
                      disabled: true
                      to_method: to_method
                    transform_jq:
                    - filter: filter
                      path: path
                      method: method
                    - filter: filter
                      path: path
                      method: method
                    transform_response_headers:
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    - path: path
                      add_headers:
                        key: add_headers
                      act_on: true
                      method: method
                      disabled: true
                      delete_headers:
                      - delete_headers
                      - delete_headers
                    track_endpoints:
                    - path: path
                      method: method
                      disabled: true
                    - path: path
                      method: method
                      disabled: true
                    hard_timeouts:
                    - path: path
                      method: method
                      disabled: true
                      timeout: 6
                    - path: path
                      method: method
                      disabled: true
                      timeout: 6
                    url_rewrites:
                    - match_pattern: match_pattern
                      path: path
                      method: method
                      disabled: true
                      rewrite_to: rewrite_to
                      triggers:
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                    - match_pattern: match_pattern
                      path: path
                      method: method
                      disabled: true
                      rewrite_to: rewrite_to
                      triggers:
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                      - options:
                          path_part_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          query_val_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          header_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          request_context_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          session_meta_matches:
                            key:
                              match_rx: match_rx
                              reverse: true
                          payload_matches:
                            match_rx: match_rx
                            reverse: true
                        rewrite_to: rewrite_to
                        "on": "on"
                  expires: expires
                  override_target: override_target
                  ignore_endpoint_case: true
                  global_size_limit: 7
                  global_headers:
                    key: global_headers
                  paths:
                    ignored:
                    - ignored
                    - ignored
                    white_list:
                    - white_list
                    - white_list
                    black_list:
                    - black_list
                    - black_list
                  name: name
                  global_headers_disabled: true
                  global_headers_remove:
                  - global_headers_remove
                  - global_headers_remove
                  use_extended_paths: true
                  global_response_headers_disabled: true
              default_version: default_version
              not_versioned: true
            auth_configs:
              key:
                auth_header_name: auth_header_name
                use_param: true
                signature:
                  allowed_clock_skew: 6
                  error_message: error_message
                  use_param: true
                  header: header
                  error_code: 1
                  secret: secret
                  param_name: param_name
                  algorithm: algorithm
                name: name
                disable_header: true
                use_certificate: true
                use_cookie: true
                validate_signature: true
                param_name: param_name
                cookie_name: cookie_name
            uptime_tests:
              check_list:
              - headers:
                  key: headers
                protocol: protocol
                method: method
                enable_proxy_protocol: true
                body: body
                commands:
                - name: name
                  message: message
                - name: name
                  message: message
                timeout: 6
                url: url
              - headers:
                  key: headers
                protocol: protocol
                method: method
                enable_proxy_protocol: true
                body: body
                commands:
                - name: name
                  message: message
                - name: name
                  message: message
                timeout: 6
                url: url
              config:
                expire_utime_after: 8
                service_discovery:
                  cache_disabled: true
                  parent_data_path: parent_data_path
                  query_endpoint: query_endpoint
                  use_nested_query: true
                  cache_timeout: 4
                  use_discovery_service: true
                  port_data_path: port_data_path
                  use_target_list: true
                  endpoint_returns_list: true
                  target_path: target_path
                  data_path: data_path
                recheck_wait: 9
            custom_middleware_bundle_disabled: true
            domain_disabled: true
            use_basic_auth: true
            use_go_plugin_auth: true
            idp_client_id_mapping_disabled: true
            certificate_pinning_disabled: true
            scopes:
              jwt:
                scope_to_policy:
                  key: scope_to_policy
                scope_claim_name: scope_claim_name
              oidc:
                scope_to_policy:
                  key: scope_to_policy
                scope_claim_name: scope_claim_name
            auth_provider:
              meta:
                key: ""
              name: name
              storage_engine: storage_engine
          created_at: 2000-01-23T04:56:07.000+00:00
          categories:
          - categories
          - categories
          sort_by: 7
          hook_references:
          - event_timeout: 0
            hook:
              event_timeout: 0
              api_model: "{}"
              method: POST
              webhook_id: 1f78e319202b430e92286cff3ca759e3
              org_id: 5e9d9544a1dcd60001d0ed20
              name: Expired Keys webhook
              header_map:
                secret: superscretkey
                x-auth: authvalue
              template_path: templates/default_webhook.json
              id: 664b613f5715ec4c96cbef3e
              target_path: https://httpbin.org/expired-keys
            event_name: event_name
          - event_timeout: 0
            hook:
              event_timeout: 0
              api_model: "{}"
              method: POST
              webhook_id: 1f78e319202b430e92286cff3ca759e3
              org_id: 5e9d9544a1dcd60001d0ed20
              name: Expired Keys webhook
              header_map:
                secret: superscretkey
                x-auth: authvalue
              template_path: templates/default_webhook.json
              id: 664b613f5715ec4c96cbef3e
              target_path: https://httpbin.org/expired-keys
            event_name: event_name
          user_group_owners:
          - user_group_owners
          - user_group_owners
      properties:
        apis:
          items:
            $ref: '#/components/schemas/ApiDefinition'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    ApiError:
      example:
        Status: Status
        Meta: ""
        Message: Message
        ID: ID
      properties:
        ID:
          type: string
        Message:
          type: string
        Meta: {}
        Status:
          type: string
      type: object
    ApiImportByUrlPayload:
      properties:
        url:
          type: string
      type: object
    ApiModel:
      type: object
    ApiStatusMessage:
      example:
        message: message
        status: status
      properties:
        message:
          type: string
        status:
          type: string
      type: object
    ApidefAPIDefinition:
      example:
        api_id: api_id
        session_lifetime: 9
        config_data:
          key: ""
        auth:
          auth_header_name: auth_header_name
          use_param: true
          signature:
            allowed_clock_skew: 6
            error_message: error_message
            use_param: true
            header: header
            error_code: 1
            secret: secret
            param_name: param_name
            algorithm: algorithm
          name: name
          disable_header: true
          use_certificate: true
          use_cookie: true
          validate_signature: true
          param_name: param_name
          cookie_name: cookie_name
        jwt_not_before_validation_skew: 0
        jwt_policy_field_name: jwt_policy_field_name
        jwt_signing_method: jwt_signing_method
        use_standard_auth: true
        pinned_public_keys:
          key: pinned_public_keys
        openid_options:
          segregate_by_client: true
          providers:
          - client_ids:
              key: client_ids
            issuer: issuer
          - client_ids:
              key: client_ids
            issuer: issuer
        config_data_disabled: true
        jwt_skip_kid: true
        protocol: protocol
        hmac_allowed_clock_skew: 1.0246457001441578
        tag_headers:
        - tag_headers
        - tag_headers
        enable_context_vars: true
        global_rate_limit:
          rate: 1.2315135367772556
          disabled: true
          per: 7.386281948385884
        jwt_identity_base_field: jwt_identity_base_field
        id: id
        enable_ip_blacklisting: true
        jwt_scope_to_policy_mapping:
          key: jwt_scope_to_policy_mapping
        detailed_tracing: true
        expire_analytics_after: 7
        dont_set_quota_on_create: true
        slug: slug
        hmac_allowed_algorithms:
        - hmac_allowed_algorithms
        - hmac_allowed_algorithms
        custom_middleware_bundle: custom_middleware_bundle
        listen_port: 1
        allowed_ips:
        - allowed_ips
        - allowed_ips
        jwt_issued_at_validation_skew: 0
        client_certificates:
        - client_certificates
        - client_certificates
        response_processors:
        - name: name
          options: ""
        - name: name
          options: ""
        upstream_certificates_disabled: true
        active: true
        custom_middleware:
          id_extractor:
            extractor_config:
              key: ""
            disabled: true
            extract_from: extract_from
            extract_with: extract_with
          pre:
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          driver: driver
          post:
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          response:
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          auth_check:
            path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          post_key_auth:
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
          - path: path
            require_session: true
            raw_body_only: true
            name: name
            disabled: true
        enable_proxy_protocol: true
        request_signing:
          certificate_id: certificate_id
          is_enabled: true
          signature_header: signature_header
          header_list:
          - header_list
          - header_list
          key_id: key_id
          secret: secret
          algorithm: algorithm
        tags:
        - tags
        - tags
        proxy:
          check_host_against_uptime_tests: true
          enable_load_balancing: true
          target_list:
          - target_list
          - target_list
          preserve_host_header: true
          disable_strip_slash: true
          listen_path: listen_path
          target_url: target_url
          service_discovery:
            cache_disabled: true
            parent_data_path: parent_data_path
            query_endpoint: query_endpoint
            use_nested_query: true
            cache_timeout: 4
            use_discovery_service: true
            port_data_path: port_data_path
            use_target_list: true
            endpoint_returns_list: true
            target_path: target_path
            data_path: data_path
          strip_listen_path: true
          transport:
            ssl_max_version: 0
            ssl_min_version: 0
            ssl_insecure_skip_verify: true
            proxy_url: proxy_url
            ssl_ciphers:
            - ssl_ciphers
            - ssl_ciphers
            ssl_force_common_name_check: true
        CORS:
          max_age: 0
          allowed_methods:
          - allowed_methods
          - allowed_methods
          allowed_headers:
          - allowed_headers
          - allowed_headers
          debug: true
          enable: true
          options_passthrough: true
          allow_credentials: true
          exposed_headers:
          - exposed_headers
          - exposed_headers
          allowed_origins:
          - allowed_origins
          - allowed_origins
        certificates:
        - certificates
        - certificates
        jwt_client_base_field: jwt_client_base_field
        org_id: org_id
        domain: domain
        base_identity_provided_by: base_identity_provided_by
        name: name
        cache_options:
          cache_all_safe_requests: true
          enable_upstream_cache_control: true
          enable_cache: true
          cache_timeout: 2
          cache_by_headers:
          - cache_by_headers
          - cache_by_headers
          cache_response_codes:
          - 5
          - 5
          cache_control_ttl_header: cache_control_ttl_header
        external_oauth:
          enabled: true
          providers:
          - introspection:
              cache:
                enabled: true
                timeout: 9
              identity_base_field: identity_base_field
              client_secret: client_secret
              client_id: client_id
              enabled: true
              url: url
            jwt:
              expires_at_validation_skew: 0
              identity_base_field: identity_base_field
              signing_method: signing_method
              source: source
              issued_at_validation_skew: 0
              enabled: true
              not_before_validation_skew: 0
          - introspection:
              cache:
                enabled: true
                timeout: 9
              identity_base_field: identity_base_field
              client_secret: client_secret
              client_id: client_id
              enabled: true
              url: url
            jwt:
              expires_at_validation_skew: 0
              identity_base_field: identity_base_field
              signing_method: signing_method
              source: source
              issued_at_validation_skew: 0
              enabled: true
              not_before_validation_skew: 0
        custom_plugin_auth_enabled: true
        expiration: expiration
        enable_ip_whitelisting: true
        jwt_expires_at_validation_skew: 0
        notifications:
          oauth_on_keychange_url: oauth_on_keychange_url
          shared_secret: shared_secret
        use_oauth2: true
        internal: true
        use_keyless: true
        use_mutual_tls_auth: true
        session_lifetime_respects_key_expiration: true
        use_openid: true
        oauth_meta:
          allowed_authorize_types:
          - allowed_authorize_types
          - allowed_authorize_types
          auth_login_redirect: auth_login_redirect
          allowed_access_types:
          - allowed_access_types
          - allowed_access_types
        enable_batch_request_support: true
        session_provider:
          meta:
            key: ""
          name: name
          storage_engine: storage_engine
        do_not_track: true
        disable_quota: true
        jwt_scope_claim_name: jwt_scope_claim_name
        jwt_source: jwt_source
        enable_signature_checking: true
        enable_jwt: true
        tags_disabled: true
        definition:
          default: default
          versions:
            key: versions
          strip_versioning_data: true
          name: name
          location: location
          enabled: true
          key: key
          strip_path: true
          fallback_to_default: true
        strip_auth_data: true
        graphql:
          schema: schema
          last_schema_update: 2000-01-23T04:56:07.000+00:00
          proxy:
            features:
              use_immutable_headers: true
            use_response_extensions:
              on_error_forwarding: true
            request_headers:
              key: request_headers
            request_headers_rewrite:
              key:
                value: value
                remove: true
            subscription_type: subscription_type
            auth_headers:
              key: auth_headers
          execution_mode: execution_mode
          introspection:
            disabled: true
          engine:
            global_headers:
            - value: value
              key: key
            - value: value
              key: key
            data_sources:
            - internal: true
              kind: kind
              name: name
              config: ""
              root_fields:
              - fields:
                - fields
                - fields
                type: type
              - fields:
                - fields
                - fields
                type: type
            - internal: true
              kind: kind
              name: name
              config: ""
              root_fields:
              - fields:
                - fields
                - fields
                type: type
              - fields:
                - fields
                - fields
                type: type
            field_configs:
            - path:
              - path
              - path
              type_name: type_name
              disable_default_mapping: true
              field_name: field_name
            - path:
              - path
              - path
              type_name: type_name
              disable_default_mapping: true
              field_name: field_name
          subgraph:
            sdl: sdl
          supergraph:
            subgraphs:
            - api_id: api_id
              headers:
                key: headers
              name: name
              sdl: sdl
              subscription_type: subscription_type
              url: url
            - api_id: api_id
              headers:
                key: headers
              name: name
              sdl: sdl
              subscription_type: subscription_type
              url: url
            updated_at: 2000-01-23T04:56:07.000+00:00
            global_headers:
              key: global_headers
            disable_query_batching: true
            merged_sdl: merged_sdl
          type_field_configurations:
          - mapping:
              path: path
              disabled: true
            type_name: type_name
            data_source:
              kind: kind
              data_source_config: ""
            field_name: field_name
          - mapping:
              path: path
              disabled: true
            type_name: type_name
            data_source:
              kind: kind
              data_source_config: ""
            field_name: field_name
          playground:
            path: path
            enabled: true
          version: version
          enabled: true
        jwt_default_policies:
        - jwt_default_policies
        - jwt_default_policies
        basic_auth:
          body_user_regexp: body_user_regexp
          cache_ttl: 5
          body_password_regexp: body_password_regexp
          disable_caching: true
          extract_from_body: true
        event_handlers:
          events:
            key:
            - handler_name: handler_name
              handler_meta:
                key: ""
            - handler_name: handler_name
              handler_meta:
                key: ""
        is_oas: true
        blacklisted_ips:
        - blacklisted_ips
        - blacklisted_ips
        analytics_plugin:
          enable: true
          plugin_path: plugin_path
          func_name: func_name
        upstream_certificates:
          key: upstream_certificates
        disable_rate_limit: true
        enable_coprocess_auth: true
        enable_detailed_recording: true
        version_data:
          versions:
            key:
              global_response_headers:
                key: global_response_headers
              global_response_headers_remove:
              - global_response_headers_remove
              - global_response_headers_remove
              extended_paths:
                circuit_breakers:
                - path: path
                  threshold_percent: 6.778324963048013
                  method: method
                  disabled: true
                  disable_half_open_state: true
                  return_to_service_after: 1
                  samples: 2
                - path: path
                  threshold_percent: 6.778324963048013
                  method: method
                  disabled: true
                  disable_half_open_state: true
                  return_to_service_after: 1
                  samples: 2
                do_not_track_endpoints:
                - path: path
                  method: method
                  disabled: true
                - path: path
                  method: method
                  disabled: true
                internal:
                - path: path
                  method: method
                  disabled: true
                - path: path
                  method: method
                  disabled: true
                virtual:
                - path: path
                  proxy_on_error: true
                  method: method
                  response_function_name: response_function_name
                  disabled: true
                  function_source_uri: function_source_uri
                  use_session: true
                  function_source_type: function_source_type
                - path: path
                  proxy_on_error: true
                  method: method
                  response_function_name: response_function_name
                  disabled: true
                  function_source_uri: function_source_uri
                  use_session: true
                  function_source_type: function_source_type
                transform_jq_response:
                - filter: filter
                  path: path
                  method: method
                - filter: filter
                  path: path
                  method: method
                validate_json:
                - schema:
                    key: ""
                  path: path
                  error_response_code: 3
                  method: method
                  disabled: true
                  schema_b64: schema_b64
                - schema:
                    key: ""
                  path: path
                  error_response_code: 3
                  method: method
                  disabled: true
                  schema_b64: schema_b64
                black_list:
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                mock_response:
                - ignore_case: true
                  headers:
                    key: headers
                  path: path
                  code: 5
                  method: method
                  disabled: true
                  body: body
                - ignore_case: true
                  headers:
                    key: headers
                  path: path
                  code: 5
                  method: method
                  disabled: true
                  body: body
                persist_graphql:
                - path: path
                  variables:
                    key: ""
                  method: method
                  operation: operation
                - path: path
                  variables:
                    key: ""
                  method: method
                  operation: operation
                validate_request:
                - path: path
                  error_response_code: 3
                  method: method
                  enabled: true
                - path: path
                  error_response_code: 3
                  method: method
                  enabled: true
                go_plugin:
                - path: path
                  method: method
                  disabled: true
                  plugin_path: plugin_path
                  func_name: func_name
                - path: path
                  method: method
                  disabled: true
                  plugin_path: plugin_path
                  func_name: func_name
                transform_headers:
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  disabled: true
                  delete_headers:
                  - delete_headers
                  - delete_headers
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  disabled: true
                  delete_headers:
                  - delete_headers
                  - delete_headers
                advance_cache_config:
                - cache_key_regex: cache_key_regex
                  path: path
                  method: method
                  disabled: true
                  cache_response_codes:
                  - 6
                  - 6
                  timeout: 3
                - cache_key_regex: cache_key_regex
                  path: path
                  method: method
                  disabled: true
                  cache_response_codes:
                  - 6
                  - 6
                  timeout: 3
                white_list:
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                transform:
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                  disabled: true
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                  disabled: true
                size_limits:
                - path: path
                  method: method
                  disabled: true
                  size_limit: 6
                - path: path
                  method: method
                  disabled: true
                  size_limit: 6
                transform_response:
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                  disabled: true
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                  disabled: true
                ignored:
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                - ignore_case: true
                  path: path
                  method: method
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 6
                      data: data
                      action: action
                  disabled: true
                cache:
                - cache
                - cache
                method_transforms:
                - path: path
                  method: method
                  disabled: true
                  to_method: to_method
                - path: path
                  method: method
                  disabled: true
                  to_method: to_method
                transform_jq:
                - filter: filter
                  path: path
                  method: method
                - filter: filter
                  path: path
                  method: method
                transform_response_headers:
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  disabled: true
                  delete_headers:
                  - delete_headers
                  - delete_headers
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  disabled: true
                  delete_headers:
                  - delete_headers
                  - delete_headers
                track_endpoints:
                - path: path
                  method: method
                  disabled: true
                - path: path
                  method: method
                  disabled: true
                hard_timeouts:
                - path: path
                  method: method
                  disabled: true
                  timeout: 6
                - path: path
                  method: method
                  disabled: true
                  timeout: 6
                url_rewrites:
                - match_pattern: match_pattern
                  path: path
                  method: method
                  disabled: true
                  rewrite_to: rewrite_to
                  triggers:
                  - options:
                      path_part_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      query_val_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      session_meta_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      payload_matches:
                        match_rx: match_rx
                        reverse: true
                    rewrite_to: rewrite_to
                    "on": "on"
                  - options:
                      path_part_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      query_val_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      session_meta_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      payload_matches:
                        match_rx: match_rx
                        reverse: true
                    rewrite_to: rewrite_to
                    "on": "on"
                - match_pattern: match_pattern
                  path: path
                  method: method
                  disabled: true
                  rewrite_to: rewrite_to
                  triggers:
                  - options:
                      path_part_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      query_val_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      session_meta_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      payload_matches:
                        match_rx: match_rx
                        reverse: true
                    rewrite_to: rewrite_to
                    "on": "on"
                  - options:
                      path_part_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      query_val_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      session_meta_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      payload_matches:
                        match_rx: match_rx
                        reverse: true
                    rewrite_to: rewrite_to
                    "on": "on"
              expires: expires
              override_target: override_target
              ignore_endpoint_case: true
              global_size_limit: 7
              global_headers:
                key: global_headers
              paths:
                ignored:
                - ignored
                - ignored
                white_list:
                - white_list
                - white_list
                black_list:
                - black_list
                - black_list
              name: name
              global_headers_disabled: true
              global_headers_remove:
              - global_headers_remove
              - global_headers_remove
              use_extended_paths: true
              global_response_headers_disabled: true
          default_version: default_version
          not_versioned: true
        auth_configs:
          key:
            auth_header_name: auth_header_name
            use_param: true
            signature:
              allowed_clock_skew: 6
              error_message: error_message
              use_param: true
              header: header
              error_code: 1
              secret: secret
              param_name: param_name
              algorithm: algorithm
            name: name
            disable_header: true
            use_certificate: true
            use_cookie: true
            validate_signature: true
            param_name: param_name
            cookie_name: cookie_name
        uptime_tests:
          check_list:
          - headers:
              key: headers
            protocol: protocol
            method: method
            enable_proxy_protocol: true
            body: body
            commands:
            - name: name
              message: message
            - name: name
              message: message
            timeout: 6
            url: url
          - headers:
              key: headers
            protocol: protocol
            method: method
            enable_proxy_protocol: true
            body: body
            commands:
            - name: name
              message: message
            - name: name
              message: message
            timeout: 6
            url: url
          config:
            expire_utime_after: 8
            service_discovery:
              cache_disabled: true
              parent_data_path: parent_data_path
              query_endpoint: query_endpoint
              use_nested_query: true
              cache_timeout: 4
              use_discovery_service: true
              port_data_path: port_data_path
              use_target_list: true
              endpoint_returns_list: true
              target_path: target_path
              data_path: data_path
            recheck_wait: 9
        custom_middleware_bundle_disabled: true
        domain_disabled: true
        use_basic_auth: true
        use_go_plugin_auth: true
        idp_client_id_mapping_disabled: true
        certificate_pinning_disabled: true
        scopes:
          jwt:
            scope_to_policy:
              key: scope_to_policy
            scope_claim_name: scope_claim_name
          oidc:
            scope_to_policy:
              key: scope_to_policy
            scope_claim_name: scope_claim_name
        auth_provider:
          meta:
            key: ""
          name: name
          storage_engine: storage_engine
      properties:
        CORS:
          $ref: '#/components/schemas/ApidefCORSConfig'
        active:
          type: boolean
        allowed_ips:
          items:
            type: string
          nullable: true
          type: array
        analytics_plugin:
          $ref: '#/components/schemas/ApidefAnalyticsPluginConfig'
        api_id:
          type: string
        auth:
          $ref: '#/components/schemas/ApidefAuthConfig'
        auth_configs:
          additionalProperties:
            $ref: '#/components/schemas/ApidefAuthConfig'
          nullable: true
          type: object
        auth_provider:
          $ref: '#/components/schemas/ApidefAuthProviderMeta'
        base_identity_provided_by:
          type: string
        basic_auth:
          $ref: '#/components/schemas/ApidefAPIDefinition_basic_auth'
        blacklisted_ips:
          items:
            type: string
          nullable: true
          type: array
        cache_options:
          $ref: '#/components/schemas/ApidefCacheOptions'
        certificate_pinning_disabled:
          type: boolean
        certificates:
          items:
            type: string
          nullable: true
          type: array
        client_certificates:
          items:
            type: string
          nullable: true
          type: array
        config_data:
          additionalProperties: {}
          nullable: true
          type: object
        config_data_disabled:
          type: boolean
        custom_middleware:
          $ref: '#/components/schemas/ApidefMiddlewareSection'
        custom_middleware_bundle:
          type: string
        custom_middleware_bundle_disabled:
          type: boolean
        custom_plugin_auth_enabled:
          type: boolean
        definition:
          $ref: '#/components/schemas/ApidefVersionDefinition'
        detailed_tracing:
          type: boolean
        disable_quota:
          type: boolean
        disable_rate_limit:
          type: boolean
        do_not_track:
          type: boolean
        domain:
          type: string
        domain_disabled:
          type: boolean
        dont_set_quota_on_create:
          type: boolean
        enable_batch_request_support:
          type: boolean
        enable_context_vars:
          type: boolean
        enable_coprocess_auth:
          type: boolean
        enable_detailed_recording:
          type: boolean
        enable_ip_blacklisting:
          type: boolean
        enable_ip_whitelisting:
          type: boolean
        enable_jwt:
          type: boolean
        enable_proxy_protocol:
          type: boolean
        enable_signature_checking:
          type: boolean
        event_handlers:
          $ref: '#/components/schemas/ApidefEventHandlerMetaConfig'
        expiration:
          type: string
        expire_analytics_after:
          type: integer
        external_oauth:
          $ref: '#/components/schemas/ApidefExternalOAuth'
        global_rate_limit:
          $ref: '#/components/schemas/ApidefGlobalRateLimit'
        graphql:
          $ref: '#/components/schemas/ApidefGraphQLConfig'
        hmac_allowed_algorithms:
          items:
            type: string
          nullable: true
          type: array
        hmac_allowed_clock_skew:
          type: number
        id:
          type: string
        idp_client_id_mapping_disabled:
          type: boolean
        internal:
          type: boolean
        is_oas:
          type: boolean
        jwt_client_base_field:
          type: string
        jwt_default_policies:
          items:
            type: string
          nullable: true
          type: array
        jwt_expires_at_validation_skew:
          minimum: 0
          type: integer
        jwt_identity_base_field:
          type: string
        jwt_issued_at_validation_skew:
          minimum: 0
          type: integer
        jwt_not_before_validation_skew:
          minimum: 0
          type: integer
        jwt_policy_field_name:
          type: string
        jwt_scope_claim_name:
          type: string
        jwt_scope_to_policy_mapping:
          additionalProperties:
            type: string
          nullable: true
          type: object
        jwt_signing_method:
          type: string
        jwt_skip_kid:
          type: boolean
        jwt_source:
          type: string
        listen_port:
          type: integer
        name:
          type: string
        notifications:
          $ref: '#/components/schemas/ApidefNotificationsManager'
        oauth_meta:
          $ref: '#/components/schemas/ApidefAPIDefinition_oauth_meta'
        openid_options:
          $ref: '#/components/schemas/ApidefOpenIDOptions'
        org_id:
          type: string
        pinned_public_keys:
          additionalProperties:
            type: string
          nullable: true
          type: object
        protocol:
          type: string
        proxy:
          $ref: '#/components/schemas/ApidefProxyConfig'
        request_signing:
          $ref: '#/components/schemas/ApidefRequestSigningMeta'
        response_processors:
          items:
            $ref: '#/components/schemas/ApidefResponseProcessor'
          nullable: true
          type: array
        scopes:
          $ref: '#/components/schemas/ApidefScopes'
        session_lifetime:
          type: integer
        session_lifetime_respects_key_expiration:
          type: boolean
        session_provider:
          $ref: '#/components/schemas/ApidefSessionProviderMeta'
        slug:
          type: string
        strip_auth_data:
          type: boolean
        tag_headers:
          items:
            type: string
          nullable: true
          type: array
        tags:
          items:
            type: string
          nullable: true
          type: array
        tags_disabled:
          type: boolean
        upstream_certificates:
          additionalProperties:
            type: string
          nullable: true
          type: object
        upstream_certificates_disabled:
          type: boolean
        uptime_tests:
          $ref: '#/components/schemas/ApidefUptimeTests'
        use_basic_auth:
          type: boolean
        use_go_plugin_auth:
          type: boolean
        use_keyless:
          type: boolean
        use_mutual_tls_auth:
          type: boolean
        use_oauth2:
          type: boolean
        use_openid:
          type: boolean
        use_standard_auth:
          type: boolean
        version_data:
          $ref: '#/components/schemas/ApidefVersionData'
      type: object
    ApidefAnalyticsPluginConfig:
      example:
        enable: true
        plugin_path: plugin_path
        func_name: func_name
      properties:
        enable:
          type: boolean
        func_name:
          type: string
        plugin_path:
          type: string
      type: object
    ApidefAuthConfig:
      example:
        auth_header_name: auth_header_name
        use_param: true
        signature:
          allowed_clock_skew: 6
          error_message: error_message
          use_param: true
          header: header
          error_code: 1
          secret: secret
          param_name: param_name
          algorithm: algorithm
        name: name
        disable_header: true
        use_certificate: true
        use_cookie: true
        validate_signature: true
        param_name: param_name
        cookie_name: cookie_name
      properties:
        auth_header_name:
          type: string
        cookie_name:
          type: string
        disable_header:
          type: boolean
        name:
          type: string
        param_name:
          type: string
        signature:
          $ref: '#/components/schemas/ApidefSignatureConfig'
        use_certificate:
          type: boolean
        use_cookie:
          type: boolean
        use_param:
          type: boolean
        validate_signature:
          type: boolean
      type: object
    ApidefAuthProviderMeta:
      example:
        meta:
          key: ""
        name: name
        storage_engine: storage_engine
      properties:
        meta:
          additionalProperties: {}
          nullable: true
          type: object
        name:
          type: string
        storage_engine:
          type: string
      type: object
    ApidefCORSConfig:
      example:
        max_age: 0
        allowed_methods:
        - allowed_methods
        - allowed_methods
        allowed_headers:
        - allowed_headers
        - allowed_headers
        debug: true
        enable: true
        options_passthrough: true
        allow_credentials: true
        exposed_headers:
        - exposed_headers
        - exposed_headers
        allowed_origins:
        - allowed_origins
        - allowed_origins
      properties:
        allow_credentials:
          type: boolean
        allowed_headers:
          items:
            type: string
          nullable: true
          type: array
        allowed_methods:
          items:
            type: string
          nullable: true
          type: array
        allowed_origins:
          items:
            type: string
          nullable: true
          type: array
        debug:
          type: boolean
        enable:
          type: boolean
        exposed_headers:
          items:
            type: string
          nullable: true
          type: array
        max_age:
          type: integer
        options_passthrough:
          type: boolean
      type: object
    ApidefCacheMeta:
      example:
        cache_key_regex: cache_key_regex
        path: path
        method: method
        disabled: true
        cache_response_codes:
        - 6
        - 6
        timeout: 3
      properties:
        cache_key_regex:
          type: string
        cache_response_codes:
          items:
            type: integer
          nullable: true
          type: array
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        timeout:
          type: integer
      type: object
    ApidefCacheOptions:
      example:
        cache_all_safe_requests: true
        enable_upstream_cache_control: true
        enable_cache: true
        cache_timeout: 2
        cache_by_headers:
        - cache_by_headers
        - cache_by_headers
        cache_response_codes:
        - 5
        - 5
        cache_control_ttl_header: cache_control_ttl_header
      properties:
        cache_all_safe_requests:
          type: boolean
        cache_by_headers:
          items:
            type: string
          nullable: true
          type: array
        cache_control_ttl_header:
          type: string
        cache_response_codes:
          items:
            type: integer
          nullable: true
          type: array
        cache_timeout:
          type: integer
        enable_cache:
          type: boolean
        enable_upstream_cache_control:
          type: boolean
      type: object
    ApidefCheckCommand:
      example:
        name: name
        message: message
      properties:
        message:
          type: string
        name:
          type: string
      type: object
    ApidefCircuitBreakerMeta:
      example:
        path: path
        threshold_percent: 6.778324963048013
        method: method
        disabled: true
        disable_half_open_state: true
        return_to_service_after: 1
        samples: 2
      properties:
        disable_half_open_state:
          type: boolean
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        return_to_service_after:
          type: integer
        samples:
          type: integer
        threshold_percent:
          type: number
      type: object
    ApidefEndPointMeta:
      example:
        ignore_case: true
        path: path
        method: method
        method_actions:
          key:
            headers:
              key: headers
            code: 6
            data: data
            action: action
        disabled: true
      properties:
        disabled:
          type: boolean
        ignore_case:
          type: boolean
        method:
          type: string
        method_actions:
          additionalProperties:
            $ref: '#/components/schemas/ApidefEndpointMethodMeta'
          type: object
        path:
          type: string
      type: object
    ApidefEndpointMethodMeta:
      example:
        headers:
          key: headers
        code: 6
        data: data
        action: action
      properties:
        action:
          type: string
        code:
          type: integer
        data:
          type: string
        headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    ApidefEventHandlerMetaConfig:
      example:
        events:
          key:
          - handler_name: handler_name
            handler_meta:
              key: ""
          - handler_name: handler_name
            handler_meta:
              key: ""
      properties:
        events:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ApidefEventHandlerTriggerConfig'
            type: array
          nullable: true
          type: object
      type: object
    ApidefEventHandlerTriggerConfig:
      example:
        handler_name: handler_name
        handler_meta:
          key: ""
      properties:
        handler_meta:
          additionalProperties: {}
          nullable: true
          type: object
        handler_name:
          type: string
      type: object
    ApidefExtendedPathsSet:
      example:
        circuit_breakers:
        - path: path
          threshold_percent: 6.778324963048013
          method: method
          disabled: true
          disable_half_open_state: true
          return_to_service_after: 1
          samples: 2
        - path: path
          threshold_percent: 6.778324963048013
          method: method
          disabled: true
          disable_half_open_state: true
          return_to_service_after: 1
          samples: 2
        do_not_track_endpoints:
        - path: path
          method: method
          disabled: true
        - path: path
          method: method
          disabled: true
        internal:
        - path: path
          method: method
          disabled: true
        - path: path
          method: method
          disabled: true
        virtual:
        - path: path
          proxy_on_error: true
          method: method
          response_function_name: response_function_name
          disabled: true
          function_source_uri: function_source_uri
          use_session: true
          function_source_type: function_source_type
        - path: path
          proxy_on_error: true
          method: method
          response_function_name: response_function_name
          disabled: true
          function_source_uri: function_source_uri
          use_session: true
          function_source_type: function_source_type
        transform_jq_response:
        - filter: filter
          path: path
          method: method
        - filter: filter
          path: path
          method: method
        validate_json:
        - schema:
            key: ""
          path: path
          error_response_code: 3
          method: method
          disabled: true
          schema_b64: schema_b64
        - schema:
            key: ""
          path: path
          error_response_code: 3
          method: method
          disabled: true
          schema_b64: schema_b64
        black_list:
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        mock_response:
        - ignore_case: true
          headers:
            key: headers
          path: path
          code: 5
          method: method
          disabled: true
          body: body
        - ignore_case: true
          headers:
            key: headers
          path: path
          code: 5
          method: method
          disabled: true
          body: body
        persist_graphql:
        - path: path
          variables:
            key: ""
          method: method
          operation: operation
        - path: path
          variables:
            key: ""
          method: method
          operation: operation
        validate_request:
        - path: path
          error_response_code: 3
          method: method
          enabled: true
        - path: path
          error_response_code: 3
          method: method
          enabled: true
        go_plugin:
        - path: path
          method: method
          disabled: true
          plugin_path: plugin_path
          func_name: func_name
        - path: path
          method: method
          disabled: true
          plugin_path: plugin_path
          func_name: func_name
        transform_headers:
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          disabled: true
          delete_headers:
          - delete_headers
          - delete_headers
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          disabled: true
          delete_headers:
          - delete_headers
          - delete_headers
        advance_cache_config:
        - cache_key_regex: cache_key_regex
          path: path
          method: method
          disabled: true
          cache_response_codes:
          - 6
          - 6
          timeout: 3
        - cache_key_regex: cache_key_regex
          path: path
          method: method
          disabled: true
          cache_response_codes:
          - 6
          - 6
          timeout: 3
        white_list:
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        transform:
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
          disabled: true
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
          disabled: true
        size_limits:
        - path: path
          method: method
          disabled: true
          size_limit: 6
        - path: path
          method: method
          disabled: true
          size_limit: 6
        transform_response:
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
          disabled: true
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
          disabled: true
        ignored:
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        - ignore_case: true
          path: path
          method: method
          method_actions:
            key:
              headers:
                key: headers
              code: 6
              data: data
              action: action
          disabled: true
        cache:
        - cache
        - cache
        method_transforms:
        - path: path
          method: method
          disabled: true
          to_method: to_method
        - path: path
          method: method
          disabled: true
          to_method: to_method
        transform_jq:
        - filter: filter
          path: path
          method: method
        - filter: filter
          path: path
          method: method
        transform_response_headers:
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          disabled: true
          delete_headers:
          - delete_headers
          - delete_headers
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          disabled: true
          delete_headers:
          - delete_headers
          - delete_headers
        track_endpoints:
        - path: path
          method: method
          disabled: true
        - path: path
          method: method
          disabled: true
        hard_timeouts:
        - path: path
          method: method
          disabled: true
          timeout: 6
        - path: path
          method: method
          disabled: true
          timeout: 6
        url_rewrites:
        - match_pattern: match_pattern
          path: path
          method: method
          disabled: true
          rewrite_to: rewrite_to
          triggers:
          - options:
              path_part_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              query_val_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              session_meta_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              payload_matches:
                match_rx: match_rx
                reverse: true
            rewrite_to: rewrite_to
            "on": "on"
          - options:
              path_part_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              query_val_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              session_meta_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              payload_matches:
                match_rx: match_rx
                reverse: true
            rewrite_to: rewrite_to
            "on": "on"
        - match_pattern: match_pattern
          path: path
          method: method
          disabled: true
          rewrite_to: rewrite_to
          triggers:
          - options:
              path_part_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              query_val_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              session_meta_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              payload_matches:
                match_rx: match_rx
                reverse: true
            rewrite_to: rewrite_to
            "on": "on"
          - options:
              path_part_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              query_val_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              session_meta_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              payload_matches:
                match_rx: match_rx
                reverse: true
            rewrite_to: rewrite_to
            "on": "on"
      properties:
        advance_cache_config:
          items:
            $ref: '#/components/schemas/ApidefCacheMeta'
          type: array
        black_list:
          items:
            $ref: '#/components/schemas/ApidefEndPointMeta'
          type: array
        cache:
          items:
            type: string
          type: array
        circuit_breakers:
          items:
            $ref: '#/components/schemas/ApidefCircuitBreakerMeta'
          type: array
        do_not_track_endpoints:
          items:
            $ref: '#/components/schemas/ApidefTrackEndpointMeta'
          type: array
        go_plugin:
          items:
            $ref: '#/components/schemas/ApidefGoPluginMeta'
          type: array
        hard_timeouts:
          items:
            $ref: '#/components/schemas/ApidefHardTimeoutMeta'
          type: array
        ignored:
          items:
            $ref: '#/components/schemas/ApidefEndPointMeta'
          type: array
        internal:
          items:
            $ref: '#/components/schemas/ApidefInternalMeta'
          type: array
        method_transforms:
          items:
            $ref: '#/components/schemas/ApidefMethodTransformMeta'
          type: array
        mock_response:
          items:
            $ref: '#/components/schemas/ApidefMockResponseMeta'
          type: array
        persist_graphql:
          items:
            $ref: '#/components/schemas/ApidefPersistGraphQLMeta'
          nullable: true
          type: array
        size_limits:
          items:
            $ref: '#/components/schemas/ApidefRequestSizeMeta'
          type: array
        track_endpoints:
          items:
            $ref: '#/components/schemas/ApidefTrackEndpointMeta'
          type: array
        transform:
          items:
            $ref: '#/components/schemas/ApidefTemplateMeta'
          type: array
        transform_headers:
          items:
            $ref: '#/components/schemas/ApidefHeaderInjectionMeta'
          type: array
        transform_jq:
          items:
            $ref: '#/components/schemas/ApidefTransformJQMeta'
          type: array
        transform_jq_response:
          items:
            $ref: '#/components/schemas/ApidefTransformJQMeta'
          type: array
        transform_response:
          items:
            $ref: '#/components/schemas/ApidefTemplateMeta'
          type: array
        transform_response_headers:
          items:
            $ref: '#/components/schemas/ApidefHeaderInjectionMeta'
          type: array
        url_rewrites:
          items:
            $ref: '#/components/schemas/ApidefURLRewriteMeta'
          type: array
        validate_json:
          items:
            $ref: '#/components/schemas/ApidefValidatePathMeta'
          type: array
        validate_request:
          items:
            $ref: '#/components/schemas/ApidefValidateRequestMeta'
          type: array
        virtual:
          items:
            $ref: '#/components/schemas/ApidefVirtualMeta'
          type: array
        white_list:
          items:
            $ref: '#/components/schemas/ApidefEndPointMeta'
          type: array
      type: object
    ApidefExternalOAuth:
      example:
        enabled: true
        providers:
        - introspection:
            cache:
              enabled: true
              timeout: 9
            identity_base_field: identity_base_field
            client_secret: client_secret
            client_id: client_id
            enabled: true
            url: url
          jwt:
            expires_at_validation_skew: 0
            identity_base_field: identity_base_field
            signing_method: signing_method
            source: source
            issued_at_validation_skew: 0
            enabled: true
            not_before_validation_skew: 0
        - introspection:
            cache:
              enabled: true
              timeout: 9
            identity_base_field: identity_base_field
            client_secret: client_secret
            client_id: client_id
            enabled: true
            url: url
          jwt:
            expires_at_validation_skew: 0
            identity_base_field: identity_base_field
            signing_method: signing_method
            source: source
            issued_at_validation_skew: 0
            enabled: true
            not_before_validation_skew: 0
      properties:
        enabled:
          type: boolean
        providers:
          items:
            $ref: '#/components/schemas/ApidefProvider'
          nullable: true
          type: array
      type: object
    ApidefGlobalRateLimit:
      example:
        rate: 1.2315135367772556
        disabled: true
        per: 7.386281948385884
      properties:
        disabled:
          type: boolean
        per:
          type: number
        rate:
          type: number
      type: object
    ApidefGoPluginMeta:
      example:
        path: path
        method: method
        disabled: true
        plugin_path: plugin_path
        func_name: func_name
      properties:
        disabled:
          type: boolean
        func_name:
          type: string
        method:
          type: string
        path:
          type: string
        plugin_path:
          type: string
      type: object
    ApidefGraphQLConfig:
      example:
        schema: schema
        last_schema_update: 2000-01-23T04:56:07.000+00:00
        proxy:
          features:
            use_immutable_headers: true
          use_response_extensions:
            on_error_forwarding: true
          request_headers:
            key: request_headers
          request_headers_rewrite:
            key:
              value: value
              remove: true
          subscription_type: subscription_type
          auth_headers:
            key: auth_headers
        execution_mode: execution_mode
        introspection:
          disabled: true
        engine:
          global_headers:
          - value: value
            key: key
          - value: value
            key: key
          data_sources:
          - internal: true
            kind: kind
            name: name
            config: ""
            root_fields:
            - fields:
              - fields
              - fields
              type: type
            - fields:
              - fields
              - fields
              type: type
          - internal: true
            kind: kind
            name: name
            config: ""
            root_fields:
            - fields:
              - fields
              - fields
              type: type
            - fields:
              - fields
              - fields
              type: type
          field_configs:
          - path:
            - path
            - path
            type_name: type_name
            disable_default_mapping: true
            field_name: field_name
          - path:
            - path
            - path
            type_name: type_name
            disable_default_mapping: true
            field_name: field_name
        subgraph:
          sdl: sdl
        supergraph:
          subgraphs:
          - api_id: api_id
            headers:
              key: headers
            name: name
            sdl: sdl
            subscription_type: subscription_type
            url: url
          - api_id: api_id
            headers:
              key: headers
            name: name
            sdl: sdl
            subscription_type: subscription_type
            url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          global_headers:
            key: global_headers
          disable_query_batching: true
          merged_sdl: merged_sdl
        type_field_configurations:
        - mapping:
            path: path
            disabled: true
          type_name: type_name
          data_source:
            kind: kind
            data_source_config: ""
          field_name: field_name
        - mapping:
            path: path
            disabled: true
          type_name: type_name
          data_source:
            kind: kind
            data_source_config: ""
          field_name: field_name
        playground:
          path: path
          enabled: true
        version: version
        enabled: true
      properties:
        enabled:
          type: boolean
        engine:
          $ref: '#/components/schemas/ApidefGraphQLEngineConfig'
        execution_mode:
          type: string
        introspection:
          $ref: '#/components/schemas/ApidefGraphQLIntrospectionConfig'
        last_schema_update:
          format: date-time
          nullable: true
          type: string
        playground:
          $ref: '#/components/schemas/ApidefGraphQLPlayground'
        proxy:
          $ref: '#/components/schemas/ApidefGraphQLProxyConfig'
        schema:
          type: string
        subgraph:
          $ref: '#/components/schemas/ApidefGraphQLSubgraphConfig'
        supergraph:
          $ref: '#/components/schemas/ApidefGraphQLSupergraphConfig'
        type_field_configurations:
          items:
            $ref: '#/components/schemas/DatasourceTypeFieldConfiguration'
          nullable: true
          type: array
        version:
          type: string
      type: object
    ApidefGraphQLEngineConfig:
      example:
        global_headers:
        - value: value
          key: key
        - value: value
          key: key
        data_sources:
        - internal: true
          kind: kind
          name: name
          config: ""
          root_fields:
          - fields:
            - fields
            - fields
            type: type
          - fields:
            - fields
            - fields
            type: type
        - internal: true
          kind: kind
          name: name
          config: ""
          root_fields:
          - fields:
            - fields
            - fields
            type: type
          - fields:
            - fields
            - fields
            type: type
        field_configs:
        - path:
          - path
          - path
          type_name: type_name
          disable_default_mapping: true
          field_name: field_name
        - path:
          - path
          - path
          type_name: type_name
          disable_default_mapping: true
          field_name: field_name
      properties:
        data_sources:
          items:
            $ref: '#/components/schemas/ApidefGraphQLEngineDataSource'
          nullable: true
          type: array
        field_configs:
          items:
            $ref: '#/components/schemas/ApidefGraphQLFieldConfig'
          nullable: true
          type: array
        global_headers:
          items:
            $ref: '#/components/schemas/ApidefUDGGlobalHeader'
          nullable: true
          type: array
      type: object
    ApidefGraphQLEngineDataSource:
      example:
        internal: true
        kind: kind
        name: name
        config: ""
        root_fields:
        - fields:
          - fields
          - fields
          type: type
        - fields:
          - fields
          - fields
          type: type
      properties:
        config: {}
        internal:
          type: boolean
        kind:
          type: string
        name:
          type: string
        root_fields:
          items:
            $ref: '#/components/schemas/ApidefGraphQLTypeFields'
          nullable: true
          type: array
      type: object
    ApidefGraphQLFieldConfig:
      example:
        path:
        - path
        - path
        type_name: type_name
        disable_default_mapping: true
        field_name: field_name
      properties:
        disable_default_mapping:
          type: boolean
        field_name:
          type: string
        path:
          items:
            type: string
          nullable: true
          type: array
        type_name:
          type: string
      type: object
    ApidefGraphQLIntrospectionConfig:
      example:
        disabled: true
      properties:
        disabled:
          type: boolean
      type: object
    ApidefGraphQLPlayground:
      example:
        path: path
        enabled: true
      properties:
        enabled:
          type: boolean
        path:
          type: string
      type: object
    ApidefGraphQLProxyConfig:
      example:
        features:
          use_immutable_headers: true
        use_response_extensions:
          on_error_forwarding: true
        request_headers:
          key: request_headers
        request_headers_rewrite:
          key:
            value: value
            remove: true
        subscription_type: subscription_type
        auth_headers:
          key: auth_headers
      properties:
        auth_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        features:
          $ref: '#/components/schemas/ApidefGraphQLProxyFeaturesConfig'
        request_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        request_headers_rewrite:
          additionalProperties:
            $ref: '#/components/schemas/ApidefRequestHeadersRewriteConfig'
          nullable: true
          type: object
        subscription_type:
          type: string
        use_response_extensions:
          $ref: '#/components/schemas/ApidefGraphQLResponseExtensions'
      type: object
    ApidefGraphQLProxyFeaturesConfig:
      example:
        use_immutable_headers: true
      properties:
        use_immutable_headers:
          type: boolean
      type: object
    ApidefGraphQLResponseExtensions:
      example:
        on_error_forwarding: true
      properties:
        on_error_forwarding:
          type: boolean
      type: object
    ApidefGraphQLSubgraphConfig:
      example:
        sdl: sdl
      properties:
        sdl:
          type: string
      type: object
    ApidefGraphQLSubgraphEntity:
      example:
        api_id: api_id
        headers:
          key: headers
        name: name
        sdl: sdl
        subscription_type: subscription_type
        url: url
      properties:
        api_id:
          type: string
        headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        name:
          type: string
        sdl:
          type: string
        subscription_type:
          type: string
        url:
          type: string
      type: object
    ApidefGraphQLSupergraphConfig:
      example:
        subgraphs:
        - api_id: api_id
          headers:
            key: headers
          name: name
          sdl: sdl
          subscription_type: subscription_type
          url: url
        - api_id: api_id
          headers:
            key: headers
          name: name
          sdl: sdl
          subscription_type: subscription_type
          url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        global_headers:
          key: global_headers
        disable_query_batching: true
        merged_sdl: merged_sdl
      properties:
        disable_query_batching:
          type: boolean
        global_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        merged_sdl:
          type: string
        subgraphs:
          items:
            $ref: '#/components/schemas/ApidefGraphQLSubgraphEntity'
          nullable: true
          type: array
        updated_at:
          format: date-time
          nullable: true
          type: string
      type: object
    ApidefGraphQLTypeFields:
      example:
        fields:
        - fields
        - fields
        type: type
      properties:
        fields:
          items:
            type: string
          nullable: true
          type: array
        type:
          type: string
      type: object
    ApidefHardTimeoutMeta:
      example:
        path: path
        method: method
        disabled: true
        timeout: 6
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        timeout:
          type: integer
      type: object
    ApidefHeaderInjectionMeta:
      example:
        path: path
        add_headers:
          key: add_headers
        act_on: true
        method: method
        disabled: true
        delete_headers:
        - delete_headers
        - delete_headers
      properties:
        act_on:
          type: boolean
        add_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        delete_headers:
          items:
            type: string
          nullable: true
          type: array
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
      type: object
    ApidefHostCheckObject:
      example:
        headers:
          key: headers
        protocol: protocol
        method: method
        enable_proxy_protocol: true
        body: body
        commands:
        - name: name
          message: message
        - name: name
          message: message
        timeout: 6
        url: url
      properties:
        body:
          type: string
        commands:
          items:
            $ref: '#/components/schemas/ApidefCheckCommand'
          nullable: true
          type: array
        enable_proxy_protocol:
          type: boolean
        headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        method:
          type: string
        protocol:
          type: string
        timeout:
          type: integer
        url:
          type: string
      type: object
    ApidefInternalMeta:
      example:
        path: path
        method: method
        disabled: true
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
      type: object
    ApidefIntrospection:
      example:
        cache:
          enabled: true
          timeout: 9
        identity_base_field: identity_base_field
        client_secret: client_secret
        client_id: client_id
        enabled: true
        url: url
      properties:
        cache:
          $ref: '#/components/schemas/ApidefIntrospectionCache'
        client_id:
          type: string
        client_secret:
          type: string
        enabled:
          type: boolean
        identity_base_field:
          type: string
        url:
          type: string
      type: object
    ApidefIntrospectionCache:
      example:
        enabled: true
        timeout: 9
      properties:
        enabled:
          type: boolean
        timeout:
          type: integer
      type: object
    ApidefJWTValidation:
      example:
        expires_at_validation_skew: 0
        identity_base_field: identity_base_field
        signing_method: signing_method
        source: source
        issued_at_validation_skew: 0
        enabled: true
        not_before_validation_skew: 0
      properties:
        enabled:
          type: boolean
        expires_at_validation_skew:
          minimum: 0
          type: integer
        identity_base_field:
          type: string
        issued_at_validation_skew:
          minimum: 0
          type: integer
        not_before_validation_skew:
          minimum: 0
          type: integer
        signing_method:
          type: string
        source:
          type: string
      type: object
    ApidefMethodTransformMeta:
      example:
        path: path
        method: method
        disabled: true
        to_method: to_method
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        to_method:
          type: string
      type: object
    ApidefMiddlewareDefinition:
      example:
        path: path
        require_session: true
        raw_body_only: true
        name: name
        disabled: true
      properties:
        disabled:
          type: boolean
        name:
          type: string
        path:
          type: string
        raw_body_only:
          type: boolean
        require_session:
          type: boolean
      type: object
    ApidefMiddlewareIdExtractor:
      example:
        extractor_config:
          key: ""
        disabled: true
        extract_from: extract_from
        extract_with: extract_with
      properties:
        disabled:
          type: boolean
        extract_from:
          type: string
        extract_with:
          type: string
        extractor_config:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    ApidefMiddlewareSection:
      example:
        id_extractor:
          extractor_config:
            key: ""
          disabled: true
          extract_from: extract_from
          extract_with: extract_with
        pre:
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        driver: driver
        post:
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        response:
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        auth_check:
          path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        post_key_auth:
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
        - path: path
          require_session: true
          raw_body_only: true
          name: name
          disabled: true
      properties:
        auth_check:
          $ref: '#/components/schemas/ApidefMiddlewareDefinition'
        driver:
          type: string
        id_extractor:
          $ref: '#/components/schemas/ApidefMiddlewareIdExtractor'
        post:
          items:
            $ref: '#/components/schemas/ApidefMiddlewareDefinition'
          nullable: true
          type: array
        post_key_auth:
          items:
            $ref: '#/components/schemas/ApidefMiddlewareDefinition'
          nullable: true
          type: array
        pre:
          items:
            $ref: '#/components/schemas/ApidefMiddlewareDefinition'
          nullable: true
          type: array
        response:
          items:
            $ref: '#/components/schemas/ApidefMiddlewareDefinition'
          nullable: true
          type: array
      type: object
    ApidefMockResponseMeta:
      example:
        ignore_case: true
        headers:
          key: headers
        path: path
        code: 5
        method: method
        disabled: true
        body: body
      properties:
        body:
          type: string
        code:
          type: integer
        disabled:
          type: boolean
        headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        ignore_case:
          type: boolean
        method:
          type: string
        path:
          type: string
      type: object
    ApidefNotificationsManager:
      example:
        oauth_on_keychange_url: oauth_on_keychange_url
        shared_secret: shared_secret
      properties:
        oauth_on_keychange_url:
          type: string
        shared_secret:
          type: string
      type: object
    ApidefOIDProviderConfig:
      example:
        client_ids:
          key: client_ids
        issuer: issuer
      properties:
        client_ids:
          additionalProperties:
            type: string
          nullable: true
          type: object
        issuer:
          type: string
      type: object
    ApidefOpenIDOptions:
      example:
        segregate_by_client: true
        providers:
        - client_ids:
            key: client_ids
          issuer: issuer
        - client_ids:
            key: client_ids
          issuer: issuer
      properties:
        providers:
          items:
            $ref: '#/components/schemas/ApidefOIDProviderConfig'
          nullable: true
          type: array
        segregate_by_client:
          type: boolean
      type: object
    ApidefPersistGraphQLMeta:
      example:
        path: path
        variables:
          key: ""
        method: method
        operation: operation
      properties:
        method:
          type: string
        operation:
          type: string
        path:
          type: string
        variables:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    ApidefProvider:
      example:
        introspection:
          cache:
            enabled: true
            timeout: 9
          identity_base_field: identity_base_field
          client_secret: client_secret
          client_id: client_id
          enabled: true
          url: url
        jwt:
          expires_at_validation_skew: 0
          identity_base_field: identity_base_field
          signing_method: signing_method
          source: source
          issued_at_validation_skew: 0
          enabled: true
          not_before_validation_skew: 0
      properties:
        introspection:
          $ref: '#/components/schemas/ApidefIntrospection'
        jwt:
          $ref: '#/components/schemas/ApidefJWTValidation'
      type: object
    ApidefProxyConfig:
      example:
        check_host_against_uptime_tests: true
        enable_load_balancing: true
        target_list:
        - target_list
        - target_list
        preserve_host_header: true
        disable_strip_slash: true
        listen_path: listen_path
        target_url: target_url
        service_discovery:
          cache_disabled: true
          parent_data_path: parent_data_path
          query_endpoint: query_endpoint
          use_nested_query: true
          cache_timeout: 4
          use_discovery_service: true
          port_data_path: port_data_path
          use_target_list: true
          endpoint_returns_list: true
          target_path: target_path
          data_path: data_path
        strip_listen_path: true
        transport:
          ssl_max_version: 0
          ssl_min_version: 0
          ssl_insecure_skip_verify: true
          proxy_url: proxy_url
          ssl_ciphers:
          - ssl_ciphers
          - ssl_ciphers
          ssl_force_common_name_check: true
      properties:
        check_host_against_uptime_tests:
          type: boolean
        disable_strip_slash:
          type: boolean
        enable_load_balancing:
          type: boolean
        listen_path:
          type: string
        preserve_host_header:
          type: boolean
        service_discovery:
          $ref: '#/components/schemas/ApidefServiceDiscoveryConfiguration'
        strip_listen_path:
          type: boolean
        target_list:
          items:
            type: string
          nullable: true
          type: array
        target_url:
          type: string
        transport:
          $ref: '#/components/schemas/ApidefProxyConfig_transport'
      type: object
    ApidefRequestHeadersRewriteConfig:
      example:
        value: value
        remove: true
      properties:
        remove:
          type: boolean
        value:
          type: string
      type: object
    ApidefRequestSigningMeta:
      example:
        certificate_id: certificate_id
        is_enabled: true
        signature_header: signature_header
        header_list:
        - header_list
        - header_list
        key_id: key_id
        secret: secret
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        certificate_id:
          type: string
        header_list:
          items:
            type: string
          nullable: true
          type: array
        is_enabled:
          type: boolean
        key_id:
          type: string
        secret:
          type: string
        signature_header:
          type: string
      type: object
    ApidefRequestSizeMeta:
      example:
        path: path
        method: method
        disabled: true
        size_limit: 6
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        size_limit:
          type: integer
      type: object
    ApidefResponseProcessor:
      example:
        name: name
        options: ""
      properties:
        name:
          type: string
        options: {}
      type: object
    ApidefRoutingTrigger:
      example:
        options:
          path_part_matches:
            key:
              match_rx: match_rx
              reverse: true
          query_val_matches:
            key:
              match_rx: match_rx
              reverse: true
          header_matches:
            key:
              match_rx: match_rx
              reverse: true
          request_context_matches:
            key:
              match_rx: match_rx
              reverse: true
          session_meta_matches:
            key:
              match_rx: match_rx
              reverse: true
          payload_matches:
            match_rx: match_rx
            reverse: true
        rewrite_to: rewrite_to
        "on": "on"
      properties:
        "on":
          type: string
        options:
          $ref: '#/components/schemas/ApidefRoutingTriggerOptions'
        rewrite_to:
          type: string
      type: object
    ApidefRoutingTriggerOptions:
      example:
        path_part_matches:
          key:
            match_rx: match_rx
            reverse: true
        query_val_matches:
          key:
            match_rx: match_rx
            reverse: true
        header_matches:
          key:
            match_rx: match_rx
            reverse: true
        request_context_matches:
          key:
            match_rx: match_rx
            reverse: true
        session_meta_matches:
          key:
            match_rx: match_rx
            reverse: true
        payload_matches:
          match_rx: match_rx
          reverse: true
      properties:
        header_matches:
          additionalProperties:
            $ref: '#/components/schemas/ApidefStringRegexMap'
          nullable: true
          type: object
        path_part_matches:
          additionalProperties:
            $ref: '#/components/schemas/ApidefStringRegexMap'
          nullable: true
          type: object
        payload_matches:
          $ref: '#/components/schemas/ApidefStringRegexMap'
        query_val_matches:
          additionalProperties:
            $ref: '#/components/schemas/ApidefStringRegexMap'
          nullable: true
          type: object
        request_context_matches:
          additionalProperties:
            $ref: '#/components/schemas/ApidefStringRegexMap'
          nullable: true
          type: object
        session_meta_matches:
          additionalProperties:
            $ref: '#/components/schemas/ApidefStringRegexMap'
          nullable: true
          type: object
      type: object
    ApidefScopeClaim:
      example:
        scope_to_policy:
          key: scope_to_policy
        scope_claim_name: scope_claim_name
      properties:
        scope_claim_name:
          type: string
        scope_to_policy:
          additionalProperties:
            type: string
          type: object
      type: object
    ApidefScopes:
      example:
        jwt:
          scope_to_policy:
            key: scope_to_policy
          scope_claim_name: scope_claim_name
        oidc:
          scope_to_policy:
            key: scope_to_policy
          scope_claim_name: scope_claim_name
      properties:
        jwt:
          $ref: '#/components/schemas/ApidefScopeClaim'
        oidc:
          $ref: '#/components/schemas/ApidefScopeClaim'
      type: object
    ApidefServiceDiscoveryConfiguration:
      example:
        cache_disabled: true
        parent_data_path: parent_data_path
        query_endpoint: query_endpoint
        use_nested_query: true
        cache_timeout: 4
        use_discovery_service: true
        port_data_path: port_data_path
        use_target_list: true
        endpoint_returns_list: true
        target_path: target_path
        data_path: data_path
      properties:
        cache_disabled:
          type: boolean
        cache_timeout:
          type: integer
        data_path:
          type: string
        endpoint_returns_list:
          type: boolean
        parent_data_path:
          type: string
        port_data_path:
          type: string
        query_endpoint:
          type: string
        target_path:
          type: string
        use_discovery_service:
          type: boolean
        use_nested_query:
          type: boolean
        use_target_list:
          type: boolean
      type: object
    ApidefSessionProviderMeta:
      example:
        meta:
          key: ""
        name: name
        storage_engine: storage_engine
      properties:
        meta:
          additionalProperties: {}
          nullable: true
          type: object
        name:
          type: string
        storage_engine:
          type: string
      type: object
    ApidefSignatureConfig:
      example:
        allowed_clock_skew: 6
        error_message: error_message
        use_param: true
        header: header
        error_code: 1
        secret: secret
        param_name: param_name
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        allowed_clock_skew:
          type: integer
        error_code:
          type: integer
        error_message:
          type: string
        header:
          type: string
        param_name:
          type: string
        secret:
          type: string
        use_param:
          type: boolean
      type: object
    ApidefStringRegexMap:
      example:
        match_rx: match_rx
        reverse: true
      properties:
        match_rx:
          type: string
        reverse:
          type: boolean
      type: object
    ApidefTemplateData:
      example:
        template_source: template_source
        input_type: input_type
        template_mode: template_mode
        enable_session: true
      properties:
        enable_session:
          type: boolean
        input_type:
          type: string
        template_mode:
          type: string
        template_source:
          type: string
      type: object
    ApidefTemplateMeta:
      example:
        path: path
        template_data:
          template_source: template_source
          input_type: input_type
          template_mode: template_mode
          enable_session: true
        method: method
        disabled: true
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
        template_data:
          $ref: '#/components/schemas/ApidefTemplateData'
      type: object
    ApidefTrackEndpointMeta:
      example:
        path: path
        method: method
        disabled: true
      properties:
        disabled:
          type: boolean
        method:
          type: string
        path:
          type: string
      type: object
    ApidefTransformJQMeta:
      example:
        filter: filter
        path: path
        method: method
      properties:
        filter:
          type: string
        method:
          type: string
        path:
          type: string
      type: object
    ApidefUDGGlobalHeader:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    ApidefURLRewriteMeta:
      example:
        match_pattern: match_pattern
        path: path
        method: method
        disabled: true
        rewrite_to: rewrite_to
        triggers:
        - options:
            path_part_matches:
              key:
                match_rx: match_rx
                reverse: true
            query_val_matches:
              key:
                match_rx: match_rx
                reverse: true
            header_matches:
              key:
                match_rx: match_rx
                reverse: true
            request_context_matches:
              key:
                match_rx: match_rx
                reverse: true
            session_meta_matches:
              key:
                match_rx: match_rx
                reverse: true
            payload_matches:
              match_rx: match_rx
              reverse: true
          rewrite_to: rewrite_to
          "on": "on"
        - options:
            path_part_matches:
              key:
                match_rx: match_rx
                reverse: true
            query_val_matches:
              key:
                match_rx: match_rx
                reverse: true
            header_matches:
              key:
                match_rx: match_rx
                reverse: true
            request_context_matches:
              key:
                match_rx: match_rx
                reverse: true
            session_meta_matches:
              key:
                match_rx: match_rx
                reverse: true
            payload_matches:
              match_rx: match_rx
              reverse: true
          rewrite_to: rewrite_to
          "on": "on"
      properties:
        disabled:
          type: boolean
        match_pattern:
          type: string
        method:
          type: string
        path:
          type: string
        rewrite_to:
          type: string
        triggers:
          items:
            $ref: '#/components/schemas/ApidefRoutingTrigger'
          nullable: true
          type: array
      type: object
    ApidefUptimeTests:
      example:
        check_list:
        - headers:
            key: headers
          protocol: protocol
          method: method
          enable_proxy_protocol: true
          body: body
          commands:
          - name: name
            message: message
          - name: name
            message: message
          timeout: 6
          url: url
        - headers:
            key: headers
          protocol: protocol
          method: method
          enable_proxy_protocol: true
          body: body
          commands:
          - name: name
            message: message
          - name: name
            message: message
          timeout: 6
          url: url
        config:
          expire_utime_after: 8
          service_discovery:
            cache_disabled: true
            parent_data_path: parent_data_path
            query_endpoint: query_endpoint
            use_nested_query: true
            cache_timeout: 4
            use_discovery_service: true
            port_data_path: port_data_path
            use_target_list: true
            endpoint_returns_list: true
            target_path: target_path
            data_path: data_path
          recheck_wait: 9
      properties:
        check_list:
          items:
            $ref: '#/components/schemas/ApidefHostCheckObject'
          nullable: true
          type: array
        config:
          $ref: '#/components/schemas/ApidefUptimeTestsConfig'
      type: object
    ApidefUptimeTestsConfig:
      example:
        expire_utime_after: 8
        service_discovery:
          cache_disabled: true
          parent_data_path: parent_data_path
          query_endpoint: query_endpoint
          use_nested_query: true
          cache_timeout: 4
          use_discovery_service: true
          port_data_path: port_data_path
          use_target_list: true
          endpoint_returns_list: true
          target_path: target_path
          data_path: data_path
        recheck_wait: 9
      properties:
        expire_utime_after:
          type: integer
        recheck_wait:
          type: integer
        service_discovery:
          $ref: '#/components/schemas/ApidefServiceDiscoveryConfiguration'
      type: object
    ApidefValidatePathMeta:
      example:
        schema:
          key: ""
        path: path
        error_response_code: 3
        method: method
        disabled: true
        schema_b64: schema_b64
      properties:
        disabled:
          type: boolean
        error_response_code:
          type: integer
        method:
          type: string
        path:
          type: string
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        schema_b64:
          type: string
      type: object
    ApidefValidateRequestMeta:
      example:
        path: path
        error_response_code: 3
        method: method
        enabled: true
      properties:
        enabled:
          type: boolean
        error_response_code:
          type: integer
        method:
          type: string
        path:
          type: string
      type: object
    ApidefVersionData:
      example:
        versions:
          key:
            global_response_headers:
              key: global_response_headers
            global_response_headers_remove:
            - global_response_headers_remove
            - global_response_headers_remove
            extended_paths:
              circuit_breakers:
              - path: path
                threshold_percent: 6.778324963048013
                method: method
                disabled: true
                disable_half_open_state: true
                return_to_service_after: 1
                samples: 2
              - path: path
                threshold_percent: 6.778324963048013
                method: method
                disabled: true
                disable_half_open_state: true
                return_to_service_after: 1
                samples: 2
              do_not_track_endpoints:
              - path: path
                method: method
                disabled: true
              - path: path
                method: method
                disabled: true
              internal:
              - path: path
                method: method
                disabled: true
              - path: path
                method: method
                disabled: true
              virtual:
              - path: path
                proxy_on_error: true
                method: method
                response_function_name: response_function_name
                disabled: true
                function_source_uri: function_source_uri
                use_session: true
                function_source_type: function_source_type
              - path: path
                proxy_on_error: true
                method: method
                response_function_name: response_function_name
                disabled: true
                function_source_uri: function_source_uri
                use_session: true
                function_source_type: function_source_type
              transform_jq_response:
              - filter: filter
                path: path
                method: method
              - filter: filter
                path: path
                method: method
              validate_json:
              - schema:
                  key: ""
                path: path
                error_response_code: 3
                method: method
                disabled: true
                schema_b64: schema_b64
              - schema:
                  key: ""
                path: path
                error_response_code: 3
                method: method
                disabled: true
                schema_b64: schema_b64
              black_list:
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              mock_response:
              - ignore_case: true
                headers:
                  key: headers
                path: path
                code: 5
                method: method
                disabled: true
                body: body
              - ignore_case: true
                headers:
                  key: headers
                path: path
                code: 5
                method: method
                disabled: true
                body: body
              persist_graphql:
              - path: path
                variables:
                  key: ""
                method: method
                operation: operation
              - path: path
                variables:
                  key: ""
                method: method
                operation: operation
              validate_request:
              - path: path
                error_response_code: 3
                method: method
                enabled: true
              - path: path
                error_response_code: 3
                method: method
                enabled: true
              go_plugin:
              - path: path
                method: method
                disabled: true
                plugin_path: plugin_path
                func_name: func_name
              - path: path
                method: method
                disabled: true
                plugin_path: plugin_path
                func_name: func_name
              transform_headers:
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                disabled: true
                delete_headers:
                - delete_headers
                - delete_headers
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                disabled: true
                delete_headers:
                - delete_headers
                - delete_headers
              advance_cache_config:
              - cache_key_regex: cache_key_regex
                path: path
                method: method
                disabled: true
                cache_response_codes:
                - 6
                - 6
                timeout: 3
              - cache_key_regex: cache_key_regex
                path: path
                method: method
                disabled: true
                cache_response_codes:
                - 6
                - 6
                timeout: 3
              white_list:
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              transform:
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
                disabled: true
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
                disabled: true
              size_limits:
              - path: path
                method: method
                disabled: true
                size_limit: 6
              - path: path
                method: method
                disabled: true
                size_limit: 6
              transform_response:
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
                disabled: true
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
                disabled: true
              ignored:
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              - ignore_case: true
                path: path
                method: method
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 6
                    data: data
                    action: action
                disabled: true
              cache:
              - cache
              - cache
              method_transforms:
              - path: path
                method: method
                disabled: true
                to_method: to_method
              - path: path
                method: method
                disabled: true
                to_method: to_method
              transform_jq:
              - filter: filter
                path: path
                method: method
              - filter: filter
                path: path
                method: method
              transform_response_headers:
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                disabled: true
                delete_headers:
                - delete_headers
                - delete_headers
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                disabled: true
                delete_headers:
                - delete_headers
                - delete_headers
              track_endpoints:
              - path: path
                method: method
                disabled: true
              - path: path
                method: method
                disabled: true
              hard_timeouts:
              - path: path
                method: method
                disabled: true
                timeout: 6
              - path: path
                method: method
                disabled: true
                timeout: 6
              url_rewrites:
              - match_pattern: match_pattern
                path: path
                method: method
                disabled: true
                rewrite_to: rewrite_to
                triggers:
                - options:
                    path_part_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    query_val_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    session_meta_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    payload_matches:
                      match_rx: match_rx
                      reverse: true
                  rewrite_to: rewrite_to
                  "on": "on"
                - options:
                    path_part_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    query_val_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    session_meta_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    payload_matches:
                      match_rx: match_rx
                      reverse: true
                  rewrite_to: rewrite_to
                  "on": "on"
              - match_pattern: match_pattern
                path: path
                method: method
                disabled: true
                rewrite_to: rewrite_to
                triggers:
                - options:
                    path_part_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    query_val_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    session_meta_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    payload_matches:
                      match_rx: match_rx
                      reverse: true
                  rewrite_to: rewrite_to
                  "on": "on"
                - options:
                    path_part_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    query_val_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    session_meta_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    payload_matches:
                      match_rx: match_rx
                      reverse: true
                  rewrite_to: rewrite_to
                  "on": "on"
            expires: expires
            override_target: override_target
            ignore_endpoint_case: true
            global_size_limit: 7
            global_headers:
              key: global_headers
            paths:
              ignored:
              - ignored
              - ignored
              white_list:
              - white_list
              - white_list
              black_list:
              - black_list
              - black_list
            name: name
            global_headers_disabled: true
            global_headers_remove:
            - global_headers_remove
            - global_headers_remove
            use_extended_paths: true
            global_response_headers_disabled: true
        default_version: default_version
        not_versioned: true
      properties:
        default_version:
          type: string
        not_versioned:
          type: boolean
        versions:
          additionalProperties:
            $ref: '#/components/schemas/ApidefVersionInfo'
          nullable: true
          type: object
      type: object
    ApidefVersionDefinition:
      example:
        default: default
        versions:
          key: versions
        strip_versioning_data: true
        name: name
        location: location
        enabled: true
        key: key
        strip_path: true
        fallback_to_default: true
      properties:
        default:
          type: string
        enabled:
          type: boolean
        fallback_to_default:
          type: boolean
        key:
          type: string
        location:
          type: string
        name:
          type: string
        strip_path:
          type: boolean
        strip_versioning_data:
          type: boolean
        versions:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    ApidefVersionInfo:
      example:
        global_response_headers:
          key: global_response_headers
        global_response_headers_remove:
        - global_response_headers_remove
        - global_response_headers_remove
        extended_paths:
          circuit_breakers:
          - path: path
            threshold_percent: 6.778324963048013
            method: method
            disabled: true
            disable_half_open_state: true
            return_to_service_after: 1
            samples: 2
          - path: path
            threshold_percent: 6.778324963048013
            method: method
            disabled: true
            disable_half_open_state: true
            return_to_service_after: 1
            samples: 2
          do_not_track_endpoints:
          - path: path
            method: method
            disabled: true
          - path: path
            method: method
            disabled: true
          internal:
          - path: path
            method: method
            disabled: true
          - path: path
            method: method
            disabled: true
          virtual:
          - path: path
            proxy_on_error: true
            method: method
            response_function_name: response_function_name
            disabled: true
            function_source_uri: function_source_uri
            use_session: true
            function_source_type: function_source_type
          - path: path
            proxy_on_error: true
            method: method
            response_function_name: response_function_name
            disabled: true
            function_source_uri: function_source_uri
            use_session: true
            function_source_type: function_source_type
          transform_jq_response:
          - filter: filter
            path: path
            method: method
          - filter: filter
            path: path
            method: method
          validate_json:
          - schema:
              key: ""
            path: path
            error_response_code: 3
            method: method
            disabled: true
            schema_b64: schema_b64
          - schema:
              key: ""
            path: path
            error_response_code: 3
            method: method
            disabled: true
            schema_b64: schema_b64
          black_list:
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          mock_response:
          - ignore_case: true
            headers:
              key: headers
            path: path
            code: 5
            method: method
            disabled: true
            body: body
          - ignore_case: true
            headers:
              key: headers
            path: path
            code: 5
            method: method
            disabled: true
            body: body
          persist_graphql:
          - path: path
            variables:
              key: ""
            method: method
            operation: operation
          - path: path
            variables:
              key: ""
            method: method
            operation: operation
          validate_request:
          - path: path
            error_response_code: 3
            method: method
            enabled: true
          - path: path
            error_response_code: 3
            method: method
            enabled: true
          go_plugin:
          - path: path
            method: method
            disabled: true
            plugin_path: plugin_path
            func_name: func_name
          - path: path
            method: method
            disabled: true
            plugin_path: plugin_path
            func_name: func_name
          transform_headers:
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            disabled: true
            delete_headers:
            - delete_headers
            - delete_headers
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            disabled: true
            delete_headers:
            - delete_headers
            - delete_headers
          advance_cache_config:
          - cache_key_regex: cache_key_regex
            path: path
            method: method
            disabled: true
            cache_response_codes:
            - 6
            - 6
            timeout: 3
          - cache_key_regex: cache_key_regex
            path: path
            method: method
            disabled: true
            cache_response_codes:
            - 6
            - 6
            timeout: 3
          white_list:
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          transform:
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
            disabled: true
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
            disabled: true
          size_limits:
          - path: path
            method: method
            disabled: true
            size_limit: 6
          - path: path
            method: method
            disabled: true
            size_limit: 6
          transform_response:
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
            disabled: true
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
            disabled: true
          ignored:
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          - ignore_case: true
            path: path
            method: method
            method_actions:
              key:
                headers:
                  key: headers
                code: 6
                data: data
                action: action
            disabled: true
          cache:
          - cache
          - cache
          method_transforms:
          - path: path
            method: method
            disabled: true
            to_method: to_method
          - path: path
            method: method
            disabled: true
            to_method: to_method
          transform_jq:
          - filter: filter
            path: path
            method: method
          - filter: filter
            path: path
            method: method
          transform_response_headers:
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            disabled: true
            delete_headers:
            - delete_headers
            - delete_headers
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            disabled: true
            delete_headers:
            - delete_headers
            - delete_headers
          track_endpoints:
          - path: path
            method: method
            disabled: true
          - path: path
            method: method
            disabled: true
          hard_timeouts:
          - path: path
            method: method
            disabled: true
            timeout: 6
          - path: path
            method: method
            disabled: true
            timeout: 6
          url_rewrites:
          - match_pattern: match_pattern
            path: path
            method: method
            disabled: true
            rewrite_to: rewrite_to
            triggers:
            - options:
                path_part_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                query_val_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                session_meta_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                payload_matches:
                  match_rx: match_rx
                  reverse: true
              rewrite_to: rewrite_to
              "on": "on"
            - options:
                path_part_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                query_val_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                session_meta_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                payload_matches:
                  match_rx: match_rx
                  reverse: true
              rewrite_to: rewrite_to
              "on": "on"
          - match_pattern: match_pattern
            path: path
            method: method
            disabled: true
            rewrite_to: rewrite_to
            triggers:
            - options:
                path_part_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                query_val_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                session_meta_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                payload_matches:
                  match_rx: match_rx
                  reverse: true
              rewrite_to: rewrite_to
              "on": "on"
            - options:
                path_part_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                query_val_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                session_meta_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                payload_matches:
                  match_rx: match_rx
                  reverse: true
              rewrite_to: rewrite_to
              "on": "on"
        expires: expires
        override_target: override_target
        ignore_endpoint_case: true
        global_size_limit: 7
        global_headers:
          key: global_headers
        paths:
          ignored:
          - ignored
          - ignored
          white_list:
          - white_list
          - white_list
          black_list:
          - black_list
          - black_list
        name: name
        global_headers_disabled: true
        global_headers_remove:
        - global_headers_remove
        - global_headers_remove
        use_extended_paths: true
        global_response_headers_disabled: true
      properties:
        expires:
          type: string
        extended_paths:
          $ref: '#/components/schemas/ApidefExtendedPathsSet'
        global_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        global_headers_disabled:
          type: boolean
        global_headers_remove:
          items:
            type: string
          nullable: true
          type: array
        global_response_headers:
          additionalProperties:
            type: string
          nullable: true
          type: object
        global_response_headers_disabled:
          type: boolean
        global_response_headers_remove:
          items:
            type: string
          nullable: true
          type: array
        global_size_limit:
          type: integer
        ignore_endpoint_case:
          type: boolean
        name:
          type: string
        override_target:
          type: string
        paths:
          $ref: '#/components/schemas/ApidefVersionInfo_paths'
        use_extended_paths:
          type: boolean
      type: object
    ApidefVirtualMeta:
      example:
        path: path
        proxy_on_error: true
        method: method
        response_function_name: response_function_name
        disabled: true
        function_source_uri: function_source_uri
        use_session: true
        function_source_type: function_source_type
      properties:
        disabled:
          type: boolean
        function_source_type:
          type: string
        function_source_uri:
          type: string
        method:
          type: string
        path:
          type: string
        proxy_on_error:
          type: boolean
        response_function_name:
          type: string
        use_session:
          type: boolean
      type: object
    Asset:
      example:
        last_updated: 2024-05-21T16:02:43.585483+03:00
        data:
          info:
            title: Our Sample OAS
            version: 1.0.0
          openapi: 3.0.3
          paths:
            /anything:
              post:
                operationId: anythingpost
                responses:
                  "200":
                    description: Post created
          x-tyk-api-gateway:
            middleware:
              global:
                cache:
                  cacheAllSafeRequests: true
                  enabled: true
                  timeout: 5
              operations:
                anythingpost:
                  requestSizeLimit:
                    enabled: true
                    value: 100
        kind: oas-template
        org_id: org_id
        name: name
        mid: 664c9b735715ec3f798bbcd2
        description: description
        id: my-unique-template-id
      properties:
        mid:
          description: a unique identifier assigned by Tyk when the template is registered
            in the Dashboard database
          example: 664c9b735715ec3f798bbcd2
          type: string
        data:
          example:
            info:
              title: Our Sample OAS
              version: 1.0.0
            openapi: 3.0.3
            paths:
              /anything:
                post:
                  operationId: anythingpost
                  responses:
                    "200":
                      description: Post created
            x-tyk-api-gateway:
              middleware:
                global:
                  cache:
                    cacheAllSafeRequests: true
                    enabled: true
                    timeout: 5
                operations:
                  anythingpost:
                    requestSizeLimit:
                      enabled: true
                      value: 100
          type: object
        description:
          description: " a short description of the template, that could be used for\
            \ example to indicate the configuration held within the template"
          type: string
        id:
          description: a unique string type identifier for the template
          example: my-unique-template-id
          type: string
        kind:
          description: "the asset type, which is set to oas-template"
          enum:
          - oas-template
          example: oas-template
          type: string
        last_updated:
          example: 2024-05-21T16:02:43.585483+03:00
          format: date-time
          type: string
        name:
          description: human-readable name for the template
          type: string
        org_id:
          type: string
      type: object
    Categories:
      items:
        type: string
      type: array
    CategoriesPayload:
      example:
        categories:
        - categories
        - categories
      properties:
        categories:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CategoryCount:
      example:
        count: 3
        name: tag1
      properties:
        count:
          example: 3
          type: integer
        name:
          example: tag1
          type: string
      type: object
    CertificateBasics:
      example:
        pages: 0
        cert_basics:
        - not_after: 2000-01-23T04:56:07.000+00:00
          subject_cn: subject_cn
          issuer_cn: issuer_cn
          dns_names:
          - dns_names
          - dns_names
          has_private: true
          not_before: 2000-01-23T04:56:07.000+00:00
          id: id
        - not_after: 2000-01-23T04:56:07.000+00:00
          subject_cn: subject_cn
          issuer_cn: issuer_cn
          dns_names:
          - dns_names
          - dns_names
          has_private: true
          not_before: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        cert_basics:
          items:
            $ref: '#/components/schemas/CertsCertificateBasics'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    CertificateDependencies:
      example:
        client_cert_api_names:
        - Ngrok Dashboard API
        key_cert: 5e9d9544a1dcd60001d0ed205e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
        upstream_cert_apis:
        - 627efb71ebae49df7a853b9769b65fce
        client_cert_apis:
        - edc9b2bd3e7b4cc55c4ff0a7e1529b45
        certID: 5e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
        upstream_cert_api_names:
        - External HTTPbin
      properties:
        certID:
          example: 5e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
          type: string
        client_cert_api_names:
          example:
          - Ngrok Dashboard API
          items:
            type: string
          nullable: true
          type: array
        client_cert_apis:
          example:
          - edc9b2bd3e7b4cc55c4ff0a7e1529b45
          items:
            type: string
          nullable: true
          type: array
        key_cert:
          example: 5e9d9544a1dcd60001d0ed205e9d9544a1dcd60001d0ed20a6ab77653d5da938f452bb8cc9b55b0630a6743dabd8dc92bfb025abb09ce035
          type: string
        upstream_cert_api_names:
          example:
          - External HTTPbin
          items:
            type: string
          nullable: true
          type: array
        upstream_cert_apis:
          example:
          - 627efb71ebae49df7a853b9769b65fce
          items:
            type: string
          nullable: true
          type: array
      type: object
    CertificateDetailedList:
      example:
        pages: 0
        certificates:
        - not_after: 2000-01-23T04:56:07.000+00:00
          dns_names:
          - dns_names
          - dns_names
          has_private: true
          not_before: 2000-01-23T04:56:07.000+00:00
          subject: "{}"
          fingerprint: fingerprint
          id: id
          issuer: "{}"
        - not_after: 2000-01-23T04:56:07.000+00:00
          dns_names:
          - dns_names
          - dns_names
          has_private: true
          not_before: 2000-01-23T04:56:07.000+00:00
          subject: "{}"
          fingerprint: fingerprint
          id: id
          issuer: "{}"
      properties:
        certificates:
          items:
            $ref: '#/components/schemas/CertsCertificateMeta'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    CertificateList:
      properties:
        certs:
          items:
            type: string
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    CertsCertificateBasics:
      example:
        not_after: 2000-01-23T04:56:07.000+00:00
        subject_cn: subject_cn
        issuer_cn: issuer_cn
        dns_names:
        - dns_names
        - dns_names
        has_private: true
        not_before: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        dns_names:
          items:
            type: string
          nullable: true
          type: array
        has_private:
          type: boolean
        id:
          type: string
        issuer_cn:
          type: string
        not_after:
          format: date-time
          type: string
        not_before:
          format: date-time
          type: string
        subject_cn:
          type: string
      type: object
    CertsCertificateMeta:
      example:
        not_after: 2000-01-23T04:56:07.000+00:00
        dns_names:
        - dns_names
        - dns_names
        has_private: true
        not_before: 2000-01-23T04:56:07.000+00:00
        subject: "{}"
        fingerprint: fingerprint
        id: id
        issuer: "{}"
      properties:
        dns_names:
          items:
            type: string
          type: array
        fingerprint:
          type: string
        has_private:
          type: boolean
        id:
          type: string
        issuer:
          type: object
        not_after:
          format: date-time
          type: string
        not_before:
          format: date-time
          type: string
        subject:
          type: object
      type: object
    DCROptions:
      example:
        access_token: access_token
        grant_types:
        - grant_types
        - grant_types
        provider: provider
        idp_host: idp_host
        registration_endpoint: registration_endpoint
        token_endpoint_auth_method: token_endpoint_auth_method
        response_types:
        - response_types
        - response_types
      properties:
        access_token:
          type: string
        grant_types:
          items:
            type: string
          nullable: true
          type: array
        idp_host:
          type: string
        provider:
          type: string
        registration_endpoint:
          type: string
        response_types:
          items:
            type: string
          nullable: true
          type: array
        token_endpoint_auth_method:
          type: string
      type: object
    DatasourceMappingConfiguration:
      example:
        path: path
        disabled: true
      properties:
        disabled:
          type: boolean
        path:
          type: string
      type: object
    DatasourceSourceConfig:
      example:
        kind: kind
        data_source_config: ""
      properties:
        data_source_config: {}
        kind:
          type: string
      type: object
    DatasourceTypeFieldConfiguration:
      example:
        mapping:
          path: path
          disabled: true
        type_name: type_name
        data_source:
          kind: kind
          data_source_config: ""
        field_name: field_name
      properties:
        data_source:
          $ref: '#/components/schemas/DatasourceSourceConfig'
        field_name:
          type: string
        mapping:
          $ref: '#/components/schemas/DatasourceMappingConfiguration'
        type_name:
          type: string
      type: object
    DcrpRegistration:
      example:
        access_token: access_token
        client_uri: client_uri
        provider: provider
      properties:
        access_token:
          type: string
        client_uri:
          type: string
        provider:
          type: string
      type: object
    DetailedExampleAPIMetadata:
      example:
        min_version: min_version
        features:
        - features
        - features
        api_definition:
          api_id: api_id
          session_lifetime: 9
          config_data:
            key: ""
          auth:
            auth_header_name: auth_header_name
            use_param: true
            signature:
              allowed_clock_skew: 6
              error_message: error_message
              use_param: true
              header: header
              error_code: 1
              secret: secret
              param_name: param_name
              algorithm: algorithm
            name: name
            disable_header: true
            use_certificate: true
            use_cookie: true
            validate_signature: true
            param_name: param_name
            cookie_name: cookie_name
          jwt_not_before_validation_skew: 0
          jwt_policy_field_name: jwt_policy_field_name
          jwt_signing_method: jwt_signing_method
          use_standard_auth: true
          pinned_public_keys:
            key: pinned_public_keys
          openid_options:
            segregate_by_client: true
            providers:
            - client_ids:
                key: client_ids
              issuer: issuer
            - client_ids:
                key: client_ids
              issuer: issuer
          config_data_disabled: true
          jwt_skip_kid: true
          protocol: protocol
          hmac_allowed_clock_skew: 1.0246457001441578
          tag_headers:
          - tag_headers
          - tag_headers
          enable_context_vars: true
          global_rate_limit:
            rate: 1.2315135367772556
            disabled: true
            per: 7.386281948385884
          jwt_identity_base_field: jwt_identity_base_field
          id: id
          enable_ip_blacklisting: true
          jwt_scope_to_policy_mapping:
            key: jwt_scope_to_policy_mapping
          detailed_tracing: true
          expire_analytics_after: 7
          dont_set_quota_on_create: true
          slug: slug
          hmac_allowed_algorithms:
          - hmac_allowed_algorithms
          - hmac_allowed_algorithms
          custom_middleware_bundle: custom_middleware_bundle
          listen_port: 1
          allowed_ips:
          - allowed_ips
          - allowed_ips
          jwt_issued_at_validation_skew: 0
          client_certificates:
          - client_certificates
          - client_certificates
          response_processors:
          - name: name
            options: ""
          - name: name
            options: ""
          upstream_certificates_disabled: true
          active: true
          custom_middleware:
            id_extractor:
              extractor_config:
                key: ""
              disabled: true
              extract_from: extract_from
              extract_with: extract_with
            pre:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            driver: driver
            post:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            response:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            auth_check:
              path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            post_key_auth:
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
            - path: path
              require_session: true
              raw_body_only: true
              name: name
              disabled: true
          enable_proxy_protocol: true
          request_signing:
            certificate_id: certificate_id
            is_enabled: true
            signature_header: signature_header
            header_list:
            - header_list
            - header_list
            key_id: key_id
            secret: secret
            algorithm: algorithm
          tags:
          - tags
          - tags
          proxy:
            check_host_against_uptime_tests: true
            enable_load_balancing: true
            target_list:
            - target_list
            - target_list
            preserve_host_header: true
            disable_strip_slash: true
            listen_path: listen_path
            target_url: target_url
            service_discovery:
              cache_disabled: true
              parent_data_path: parent_data_path
              query_endpoint: query_endpoint
              use_nested_query: true
              cache_timeout: 4
              use_discovery_service: true
              port_data_path: port_data_path
              use_target_list: true
              endpoint_returns_list: true
              target_path: target_path
              data_path: data_path
            strip_listen_path: true
            transport:
              ssl_max_version: 0
              ssl_min_version: 0
              ssl_insecure_skip_verify: true
              proxy_url: proxy_url
              ssl_ciphers:
              - ssl_ciphers
              - ssl_ciphers
              ssl_force_common_name_check: true
          CORS:
            max_age: 0
            allowed_methods:
            - allowed_methods
            - allowed_methods
            allowed_headers:
            - allowed_headers
            - allowed_headers
            debug: true
            enable: true
            options_passthrough: true
            allow_credentials: true
            exposed_headers:
            - exposed_headers
            - exposed_headers
            allowed_origins:
            - allowed_origins
            - allowed_origins
          certificates:
          - certificates
          - certificates
          jwt_client_base_field: jwt_client_base_field
          org_id: org_id
          domain: domain
          base_identity_provided_by: base_identity_provided_by
          name: name
          cache_options:
            cache_all_safe_requests: true
            enable_upstream_cache_control: true
            enable_cache: true
            cache_timeout: 2
            cache_by_headers:
            - cache_by_headers
            - cache_by_headers
            cache_response_codes:
            - 5
            - 5
            cache_control_ttl_header: cache_control_ttl_header
          external_oauth:
            enabled: true
            providers:
            - introspection:
                cache:
                  enabled: true
                  timeout: 9
                identity_base_field: identity_base_field
                client_secret: client_secret
                client_id: client_id
                enabled: true
                url: url
              jwt:
                expires_at_validation_skew: 0
                identity_base_field: identity_base_field
                signing_method: signing_method
                source: source
                issued_at_validation_skew: 0
                enabled: true
                not_before_validation_skew: 0
            - introspection:
                cache:
                  enabled: true
                  timeout: 9
                identity_base_field: identity_base_field
                client_secret: client_secret
                client_id: client_id
                enabled: true
                url: url
              jwt:
                expires_at_validation_skew: 0
                identity_base_field: identity_base_field
                signing_method: signing_method
                source: source
                issued_at_validation_skew: 0
                enabled: true
                not_before_validation_skew: 0
          custom_plugin_auth_enabled: true
          expiration: expiration
          enable_ip_whitelisting: true
          jwt_expires_at_validation_skew: 0
          notifications:
            oauth_on_keychange_url: oauth_on_keychange_url
            shared_secret: shared_secret
          use_oauth2: true
          internal: true
          use_keyless: true
          use_mutual_tls_auth: true
          session_lifetime_respects_key_expiration: true
          use_openid: true
          oauth_meta:
            allowed_authorize_types:
            - allowed_authorize_types
            - allowed_authorize_types
            auth_login_redirect: auth_login_redirect
            allowed_access_types:
            - allowed_access_types
            - allowed_access_types
          enable_batch_request_support: true
          session_provider:
            meta:
              key: ""
            name: name
            storage_engine: storage_engine
          do_not_track: true
          disable_quota: true
          jwt_scope_claim_name: jwt_scope_claim_name
          jwt_source: jwt_source
          enable_signature_checking: true
          enable_jwt: true
          tags_disabled: true
          definition:
            default: default
            versions:
              key: versions
            strip_versioning_data: true
            name: name
            location: location
            enabled: true
            key: key
            strip_path: true
            fallback_to_default: true
          strip_auth_data: true
          graphql:
            schema: schema
            last_schema_update: 2000-01-23T04:56:07.000+00:00
            proxy:
              features:
                use_immutable_headers: true
              use_response_extensions:
                on_error_forwarding: true
              request_headers:
                key: request_headers
              request_headers_rewrite:
                key:
                  value: value
                  remove: true
              subscription_type: subscription_type
              auth_headers:
                key: auth_headers
            execution_mode: execution_mode
            introspection:
              disabled: true
            engine:
              global_headers:
              - value: value
                key: key
              - value: value
                key: key
              data_sources:
              - internal: true
                kind: kind
                name: name
                config: ""
                root_fields:
                - fields:
                  - fields
                  - fields
                  type: type
                - fields:
                  - fields
                  - fields
                  type: type
              - internal: true
                kind: kind
                name: name
                config: ""
                root_fields:
                - fields:
                  - fields
                  - fields
                  type: type
                - fields:
                  - fields
                  - fields
                  type: type
              field_configs:
              - path:
                - path
                - path
                type_name: type_name
                disable_default_mapping: true
                field_name: field_name
              - path:
                - path
                - path
                type_name: type_name
                disable_default_mapping: true
                field_name: field_name
            subgraph:
              sdl: sdl
            supergraph:
              subgraphs:
              - api_id: api_id
                headers:
                  key: headers
                name: name
                sdl: sdl
                subscription_type: subscription_type
                url: url
              - api_id: api_id
                headers:
                  key: headers
                name: name
                sdl: sdl
                subscription_type: subscription_type
                url: url
              updated_at: 2000-01-23T04:56:07.000+00:00
              global_headers:
                key: global_headers
              disable_query_batching: true
              merged_sdl: merged_sdl
            type_field_configurations:
            - mapping:
                path: path
                disabled: true
              type_name: type_name
              data_source:
                kind: kind
                data_source_config: ""
              field_name: field_name
            - mapping:
                path: path
                disabled: true
              type_name: type_name
              data_source:
                kind: kind
                data_source_config: ""
              field_name: field_name
            playground:
              path: path
              enabled: true
            version: version
            enabled: true
          jwt_default_policies:
          - jwt_default_policies
          - jwt_default_policies
          basic_auth:
            body_user_regexp: body_user_regexp
            cache_ttl: 5
            body_password_regexp: body_password_regexp
            disable_caching: true
            extract_from_body: true
          event_handlers:
            events:
              key:
              - handler_name: handler_name
                handler_meta:
                  key: ""
              - handler_name: handler_name
                handler_meta:
                  key: ""
          is_oas: true
          blacklisted_ips:
          - blacklisted_ips
          - blacklisted_ips
          analytics_plugin:
            enable: true
            plugin_path: plugin_path
            func_name: func_name
          upstream_certificates:
            key: upstream_certificates
          disable_rate_limit: true
          enable_coprocess_auth: true
          enable_detailed_recording: true
          version_data:
            versions:
              key:
                global_response_headers:
                  key: global_response_headers
                global_response_headers_remove:
                - global_response_headers_remove
                - global_response_headers_remove
                extended_paths:
                  circuit_breakers:
                  - path: path
                    threshold_percent: 6.778324963048013
                    method: method
                    disabled: true
                    disable_half_open_state: true
                    return_to_service_after: 1
                    samples: 2
                  - path: path
                    threshold_percent: 6.778324963048013
                    method: method
                    disabled: true
                    disable_half_open_state: true
                    return_to_service_after: 1
                    samples: 2
                  do_not_track_endpoints:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  internal:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  virtual:
                  - path: path
                    proxy_on_error: true
                    method: method
                    response_function_name: response_function_name
                    disabled: true
                    function_source_uri: function_source_uri
                    use_session: true
                    function_source_type: function_source_type
                  - path: path
                    proxy_on_error: true
                    method: method
                    response_function_name: response_function_name
                    disabled: true
                    function_source_uri: function_source_uri
                    use_session: true
                    function_source_type: function_source_type
                  transform_jq_response:
                  - filter: filter
                    path: path
                    method: method
                  - filter: filter
                    path: path
                    method: method
                  validate_json:
                  - schema:
                      key: ""
                    path: path
                    error_response_code: 3
                    method: method
                    disabled: true
                    schema_b64: schema_b64
                  - schema:
                      key: ""
                    path: path
                    error_response_code: 3
                    method: method
                    disabled: true
                    schema_b64: schema_b64
                  black_list:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  mock_response:
                  - ignore_case: true
                    headers:
                      key: headers
                    path: path
                    code: 5
                    method: method
                    disabled: true
                    body: body
                  - ignore_case: true
                    headers:
                      key: headers
                    path: path
                    code: 5
                    method: method
                    disabled: true
                    body: body
                  persist_graphql:
                  - path: path
                    variables:
                      key: ""
                    method: method
                    operation: operation
                  - path: path
                    variables:
                      key: ""
                    method: method
                    operation: operation
                  validate_request:
                  - path: path
                    error_response_code: 3
                    method: method
                    enabled: true
                  - path: path
                    error_response_code: 3
                    method: method
                    enabled: true
                  go_plugin:
                  - path: path
                    method: method
                    disabled: true
                    plugin_path: plugin_path
                    func_name: func_name
                  - path: path
                    method: method
                    disabled: true
                    plugin_path: plugin_path
                    func_name: func_name
                  transform_headers:
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  advance_cache_config:
                  - cache_key_regex: cache_key_regex
                    path: path
                    method: method
                    disabled: true
                    cache_response_codes:
                    - 6
                    - 6
                    timeout: 3
                  - cache_key_regex: cache_key_regex
                    path: path
                    method: method
                    disabled: true
                    cache_response_codes:
                    - 6
                    - 6
                    timeout: 3
                  white_list:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  transform:
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  size_limits:
                  - path: path
                    method: method
                    disabled: true
                    size_limit: 6
                  - path: path
                    method: method
                    disabled: true
                    size_limit: 6
                  transform_response:
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  - path: path
                    template_data:
                      template_source: template_source
                      input_type: input_type
                      template_mode: template_mode
                      enable_session: true
                    method: method
                    disabled: true
                  ignored:
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  - ignore_case: true
                    path: path
                    method: method
                    method_actions:
                      key:
                        headers:
                          key: headers
                        code: 6
                        data: data
                        action: action
                    disabled: true
                  cache:
                  - cache
                  - cache
                  method_transforms:
                  - path: path
                    method: method
                    disabled: true
                    to_method: to_method
                  - path: path
                    method: method
                    disabled: true
                    to_method: to_method
                  transform_jq:
                  - filter: filter
                    path: path
                    method: method
                  - filter: filter
                    path: path
                    method: method
                  transform_response_headers:
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  - path: path
                    add_headers:
                      key: add_headers
                    act_on: true
                    method: method
                    disabled: true
                    delete_headers:
                    - delete_headers
                    - delete_headers
                  track_endpoints:
                  - path: path
                    method: method
                    disabled: true
                  - path: path
                    method: method
                    disabled: true
                  hard_timeouts:
                  - path: path
                    method: method
                    disabled: true
                    timeout: 6
                  - path: path
                    method: method
                    disabled: true
                    timeout: 6
                  url_rewrites:
                  - match_pattern: match_pattern
                    path: path
                    method: method
                    disabled: true
                    rewrite_to: rewrite_to
                    triggers:
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                  - match_pattern: match_pattern
                    path: path
                    method: method
                    disabled: true
                    rewrite_to: rewrite_to
                    triggers:
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                    - options:
                        path_part_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        query_val_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        header_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        request_context_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        session_meta_matches:
                          key:
                            match_rx: match_rx
                            reverse: true
                        payload_matches:
                          match_rx: match_rx
                          reverse: true
                      rewrite_to: rewrite_to
                      "on": "on"
                expires: expires
                override_target: override_target
                ignore_endpoint_case: true
                global_size_limit: 7
                global_headers:
                  key: global_headers
                paths:
                  ignored:
                  - ignored
                  - ignored
                  white_list:
                  - white_list
                  - white_list
                  black_list:
                  - black_list
                  - black_list
                name: name
                global_headers_disabled: true
                global_headers_remove:
                - global_headers_remove
                - global_headers_remove
                use_extended_paths: true
                global_response_headers_disabled: true
            default_version: default_version
            not_versioned: true
          auth_configs:
            key:
              auth_header_name: auth_header_name
              use_param: true
              signature:
                allowed_clock_skew: 6
                error_message: error_message
                use_param: true
                header: header
                error_code: 1
                secret: secret
                param_name: param_name
                algorithm: algorithm
              name: name
              disable_header: true
              use_certificate: true
              use_cookie: true
              validate_signature: true
              param_name: param_name
              cookie_name: cookie_name
          uptime_tests:
            check_list:
            - headers:
                key: headers
              protocol: protocol
              method: method
              enable_proxy_protocol: true
              body: body
              commands:
              - name: name
                message: message
              - name: name
                message: message
              timeout: 6
              url: url
            - headers:
                key: headers
              protocol: protocol
              method: method
              enable_proxy_protocol: true
              body: body
              commands:
              - name: name
                message: message
              - name: name
                message: message
              timeout: 6
              url: url
            config:
              expire_utime_after: 8
              service_discovery:
                cache_disabled: true
                parent_data_path: parent_data_path
                query_endpoint: query_endpoint
                use_nested_query: true
                cache_timeout: 4
                use_discovery_service: true
                port_data_path: port_data_path
                use_target_list: true
                endpoint_returns_list: true
                target_path: target_path
                data_path: data_path
              recheck_wait: 9
          custom_middleware_bundle_disabled: true
          domain_disabled: true
          use_basic_auth: true
          use_go_plugin_auth: true
          idp_client_id_mapping_disabled: true
          certificate_pinning_disabled: true
          scopes:
            jwt:
              scope_to_policy:
                key: scope_to_policy
              scope_claim_name: scope_claim_name
            oidc:
              scope_to_policy:
                key: scope_to_policy
              scope_claim_name: scope_claim_name
          auth_provider:
            meta:
              key: ""
            name: name
            storage_engine: storage_engine
        name: name
        description: description
        location: location
        readme: readme
      properties:
        api_definition:
          $ref: '#/components/schemas/ApidefAPIDefinition'
        description:
          type: string
        features:
          items:
            type: string
          nullable: true
          type: array
        location:
          type: string
        min_version:
          type: string
        name:
          type: string
        readme:
          type: string
      type: object
    EmailConfigMeta:
      example:
        subject: subject
        body: body
        enabled: true
        hide_token_data: true
        sign_off: sign_off
      properties:
        body:
          type: string
        enabled:
          type: boolean
        hide_token_data:
          type: boolean
        sign_off:
          type: string
        subject:
          type: string
      type: object
    EmailCopyOptions:
      example:
        key_email:
          subject: subject
          body: body
          enabled: true
          hide_token_data: true
          sign_off: sign_off
        reset_password_email:
          subject: subject
          body: body
          enabled: true
          hide_token_data: true
          sign_off: sign_off
        welcome_email:
          subject: subject
          body: body
          enabled: true
          hide_token_data: true
          sign_off: sign_off
      properties:
        key_email:
          $ref: '#/components/schemas/EmailConfigMeta'
        reset_password_email:
          $ref: '#/components/schemas/EmailConfigMeta'
        welcome_email:
          $ref: '#/components/schemas/EmailConfigMeta'
      type: object
    ExampleAPIMetadata:
      example:
        name: VAT number checker UDG
        location: udg/vat-checker
        shortDescription: Simple REST API wrapped in GQL using Universal Data Graph
          that allows user to check validity of a VAT number and display some details
          about it.
      properties:
        location:
          example: udg/vat-checker
          type: string
        name:
          example: VAT number checker UDG
          type: string
        shortDescription:
          example: Simple REST API wrapped in GQL using Universal Data Graph that
            allows user to check validity of a VAT number and display some details
            about it.
          type: string
      type: object
    FieldAccessDefinition:
      example:
        type_name: type_name
        limits:
          max_query_depth: 0
        field_name: field_name
      properties:
        field_name:
          type: string
        limits:
          $ref: '#/components/schemas/FieldLimits'
        type_name:
          type: string
      type: object
    FieldLimits:
      example:
        max_query_depth: 0
      properties:
        max_query_depth:
          type: integer
      type: object
    FormDataFile:
      properties:
        file:
          $ref: '#/components/schemas/MultipartFile'
      required:
      - file
      type: object
    GraphqlType:
      example:
        name: name
        fields:
        - fields
        - fields
      properties:
        fields:
          items:
            type: string
          nullable: true
          type: array
        name:
          type: string
      type: object
    HookReference:
      example:
        event_timeout: 0
        hook:
          event_timeout: 0
          api_model: "{}"
          method: POST
          webhook_id: 1f78e319202b430e92286cff3ca759e3
          org_id: 5e9d9544a1dcd60001d0ed20
          name: Expired Keys webhook
          header_map:
            secret: superscretkey
            x-auth: authvalue
          template_path: templates/default_webhook.json
          id: 664b613f5715ec4c96cbef3e
          target_path: https://httpbin.org/expired-keys
        event_name: event_name
      properties:
        event_name:
          type: string
        event_timeout:
          type: integer
        hook:
          $ref: '#/components/schemas/WebHookHandlerConf'
      type: object
    JSONRawMessage:
      example:
        info:
          title: Our Sample OAS
          version: 1.0.0
        openapi: 3.0.3
        paths:
          /anything:
            post:
              operationId: anythingpost
              responses:
                "200":
                  description: Post created
        x-tyk-api-gateway:
          middleware:
            global:
              cache:
                cacheAllSafeRequests: true
                enabled: true
                timeout: 5
            operations:
              anythingpost:
                requestSizeLimit:
                  enabled: true
                  value: 100
      type: object
    KeyData:
      example:
        api_model: "{}"
        data:
          expires: 1716895221
          session_lifetime: 0
          max_query_depth: 5
          apply_policies:
          - 641c15dd0fffb800010197bf
          - 615d2e528bf3980001c7c6c2
          throttle_retry_limit: -1
          certificate: certificate
          is_inactive: true
          access_rights:
            key:
              restricted_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              allowed_urls:
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              api_id: d1dfc6a927a046c54c0ed470f19757cc
              allowed_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              versions:
              - Default
              - v2
              api_name: Rate Limit Proxy API
              allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
              limit:
                max_query_depth: 6
                quota_max: 5
                rate: 9.301444243932576
                throttle_retry_limit: 1
                quota_remaining: 5
                throttle_interval: 1.2315135367772556
                quota_renews: 7
                smoothing:
                  delay: 3
                  step: 2
                  threshold: 4
                  trigger: 7.386281948385884
                  enabled: true
                per: 1.4658129805029452
                quota_renewal_rate: 2
                set_by_policy: true
              disable_introspection: false
              field_access_rights:
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
          quota_renewal_rate: -1
          id_extractor_deadline: 0
          rate: 1000
          data_expires: 0
          meta_data:
            tyk_developer_id: 62b3fb9a1d5e4f00017226f5
          alias: portal-developer@example.org
          smoothing:
            delay: 3
            step: 2
            threshold: 4
            trigger: 7.386281948385884
            enabled: true
          hmac_enabled: false
          hmac_string: hmac_string
          per: 60
          oauth_client_id: oauth_client_id
          apply_policy_id: 641c15dd0fffb800010197bf
          last_updated: "1715681746"
          key_id: key_id
          date_created: 2024-05-14T13:15:46.560506+03:00
          quota_remaining: 20000
          throttle_interval: 10
          allowance: 1000
          monitor:
            trigger_limits:
            - 80
            - 60
            - 50
          enable_detailed_recording: true
          basic_auth_data:
            password: testuse1
            user: admin-user@example.org
            hash_type: bcrypt
          tags:
          - edge
          - edge-eu
          quota_max: 1710302205
          org_id: 5e9d9544a1dcd60001d0ed20
          quota_renews: 1715681745
          last_check: 0
          oauth_keys:
            key: oauth_keys
          jwt_data:
            secret: secret
        key_id: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
        key_hash: 41c5cb1e
      properties:
        api_model:
          type: object
        data:
          $ref: '#/components/schemas/SessionState'
        key_hash:
          example: 41c5cb1e
          type: string
        key_id:
          example: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
          type: string
      type: object
    Keys:
      example:
        pages: 0
        data:
          keys:
          - keys
          - keys
      properties:
        data:
          $ref: '#/components/schemas/AllKeys'
        pages:
          type: integer
      type: object
    KeysDetailed:
      example:
        pages: 1
        keys:
        - api_model: "{}"
          data:
            expires: 1716895221
            session_lifetime: 0
            max_query_depth: 5
            apply_policies:
            - 641c15dd0fffb800010197bf
            - 615d2e528bf3980001c7c6c2
            throttle_retry_limit: -1
            certificate: certificate
            is_inactive: true
            access_rights:
              key:
                restricted_types:
                - name: name
                  fields:
                  - fields
                  - fields
                - name: name
                  fields:
                  - fields
                  - fields
                allowed_urls:
                - methods:
                  - GET
                  - PATCH
                  - HEAD
                  - PUT
                  - DELETE
                  url: anything/rate-limit-1-per-5
                - methods:
                  - GET
                  - PATCH
                  - HEAD
                  - PUT
                  - DELETE
                  url: anything/rate-limit-1-per-5
                api_id: d1dfc6a927a046c54c0ed470f19757cc
                allowed_types:
                - name: name
                  fields:
                  - fields
                  - fields
                - name: name
                  fields:
                  - fields
                  - fields
                versions:
                - Default
                - v2
                api_name: Rate Limit Proxy API
                allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
                limit:
                  max_query_depth: 6
                  quota_max: 5
                  rate: 9.301444243932576
                  throttle_retry_limit: 1
                  quota_remaining: 5
                  throttle_interval: 1.2315135367772556
                  quota_renews: 7
                  smoothing:
                    delay: 3
                    step: 2
                    threshold: 4
                    trigger: 7.386281948385884
                    enabled: true
                  per: 1.4658129805029452
                  quota_renewal_rate: 2
                  set_by_policy: true
                disable_introspection: false
                field_access_rights:
                - type_name: type_name
                  limits:
                    max_query_depth: 0
                  field_name: field_name
                - type_name: type_name
                  limits:
                    max_query_depth: 0
                  field_name: field_name
            quota_renewal_rate: -1
            id_extractor_deadline: 0
            rate: 1000
            data_expires: 0
            meta_data:
              tyk_developer_id: 62b3fb9a1d5e4f00017226f5
            alias: portal-developer@example.org
            smoothing:
              delay: 3
              step: 2
              threshold: 4
              trigger: 7.386281948385884
              enabled: true
            hmac_enabled: false
            hmac_string: hmac_string
            per: 60
            oauth_client_id: oauth_client_id
            apply_policy_id: 641c15dd0fffb800010197bf
            last_updated: "1715681746"
            key_id: key_id
            date_created: 2024-05-14T13:15:46.560506+03:00
            quota_remaining: 20000
            throttle_interval: 10
            allowance: 1000
            monitor:
              trigger_limits:
              - 80
              - 60
              - 50
            enable_detailed_recording: true
            basic_auth_data:
              password: testuse1
              user: admin-user@example.org
              hash_type: bcrypt
            tags:
            - edge
            - edge-eu
            quota_max: 1710302205
            org_id: 5e9d9544a1dcd60001d0ed20
            quota_renews: 1715681745
            last_check: 0
            oauth_keys:
              key: oauth_keys
            jwt_data:
              secret: secret
          key_id: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
          key_hash: 41c5cb1e
        - api_model: "{}"
          data:
            expires: 1716895221
            session_lifetime: 0
            max_query_depth: 5
            apply_policies:
            - 641c15dd0fffb800010197bf
            - 615d2e528bf3980001c7c6c2
            throttle_retry_limit: -1
            certificate: certificate
            is_inactive: true
            access_rights:
              key:
                restricted_types:
                - name: name
                  fields:
                  - fields
                  - fields
                - name: name
                  fields:
                  - fields
                  - fields
                allowed_urls:
                - methods:
                  - GET
                  - PATCH
                  - HEAD
                  - PUT
                  - DELETE
                  url: anything/rate-limit-1-per-5
                - methods:
                  - GET
                  - PATCH
                  - HEAD
                  - PUT
                  - DELETE
                  url: anything/rate-limit-1-per-5
                api_id: d1dfc6a927a046c54c0ed470f19757cc
                allowed_types:
                - name: name
                  fields:
                  - fields
                  - fields
                - name: name
                  fields:
                  - fields
                  - fields
                versions:
                - Default
                - v2
                api_name: Rate Limit Proxy API
                allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
                limit:
                  max_query_depth: 6
                  quota_max: 5
                  rate: 9.301444243932576
                  throttle_retry_limit: 1
                  quota_remaining: 5
                  throttle_interval: 1.2315135367772556
                  quota_renews: 7
                  smoothing:
                    delay: 3
                    step: 2
                    threshold: 4
                    trigger: 7.386281948385884
                    enabled: true
                  per: 1.4658129805029452
                  quota_renewal_rate: 2
                  set_by_policy: true
                disable_introspection: false
                field_access_rights:
                - type_name: type_name
                  limits:
                    max_query_depth: 0
                  field_name: field_name
                - type_name: type_name
                  limits:
                    max_query_depth: 0
                  field_name: field_name
            quota_renewal_rate: -1
            id_extractor_deadline: 0
            rate: 1000
            data_expires: 0
            meta_data:
              tyk_developer_id: 62b3fb9a1d5e4f00017226f5
            alias: portal-developer@example.org
            smoothing:
              delay: 3
              step: 2
              threshold: 4
              trigger: 7.386281948385884
              enabled: true
            hmac_enabled: false
            hmac_string: hmac_string
            per: 60
            oauth_client_id: oauth_client_id
            apply_policy_id: 641c15dd0fffb800010197bf
            last_updated: "1715681746"
            key_id: key_id
            date_created: 2024-05-14T13:15:46.560506+03:00
            quota_remaining: 20000
            throttle_interval: 10
            allowance: 1000
            monitor:
              trigger_limits:
              - 80
              - 60
              - 50
            enable_detailed_recording: true
            basic_auth_data:
              password: testuse1
              user: admin-user@example.org
              hash_type: bcrypt
            tags:
            - edge
            - edge-eu
            quota_max: 1710302205
            org_id: 5e9d9544a1dcd60001d0ed20
            quota_renews: 1715681745
            last_check: 0
            oauth_keys:
              key: oauth_keys
            jwt_data:
              secret: secret
          key_id: 5e9d9544a1dcd60001d0ed20e7f75f9e03534825b7aef9df749582e5
          key_hash: 41c5cb1e
      properties:
        keys:
          items:
            $ref: '#/components/schemas/KeyData'
          nullable: true
          type: array
        pages:
          example: 1
          type: integer
      type: object
    MultipartFile:
      format: binary
      type: string
    NewAdditionalPermissions:
      example:
        additional_permissions:
          api_developer: API Developer
          api_manager: API Manager
          custom_permission: Custom Permission
      properties:
        additional_permissions:
          additionalProperties:
            type: string
          example:
            api_developer: API Developer
            api_manager: API Manager
            custom_permission: Custom Permission
          nullable: true
          type: object
      type: object
    NewClientRequest:
      example:
        api_id: e95400eba23c4a2d4622a722be06fe95
        api_model: "{}"
        policy_id: 665d51505715ec2d76022c87
        meta_data:
          user_id: 362b3fb9a1d5e4f00017226f5
        description: google client login
        redirect_uri: https://httpbin.org/ip
        secret: MmQwNTI5NGQtYjU0YS00NjMyLWIwZjktNTZjY2M1ZjhjYWY0
        client_name: client_name
        client_id: 2a06b398c17f46908de3dffcb71ef87b
      properties:
        api_id:
          example: e95400eba23c4a2d4622a722be06fe95
          type: string
        api_model:
          type: object
        client_id:
          example: 2a06b398c17f46908de3dffcb71ef87b
          type: string
        client_name:
          type: string
        description:
          example: google client login
          type: string
        meta_data:
          description: "Tyk keys can hold metadata that can be used in some middleware\
            \ components, for example, User IDs"
          example:
            user_id: 362b3fb9a1d5e4f00017226f5
        policy_id:
          description: Please note that if you don't attach a policy to the OAuth
            client you will need to provide dynamic key rules to client authorization
            endpoint.
          example: 665d51505715ec2d76022c87
          type: string
        redirect_uri:
          example: https://httpbin.org/ip
          type: string
        secret:
          example: MmQwNTI5NGQtYjU0YS00NjMyLWIwZjktNTZjY2M1ZjhjYWY0
          type: string
      required:
      - redirect_uri
      type: object
    NewOPARules:
      example:
        open_policy:
          rules: rules
      properties:
        open_policy:
          $ref: '#/components/schemas/NewOPARules_open_policy'
      type: object
    OAuthApps:
      example:
        pages: 0
        apps:
        - policy_id: policy_id
          meta_data:
            key: meta_data
          description: description
          redirect_uri: redirect_uri
          secret: secret
          client_name: client_name
          client_id: client_id
          dcr_registration:
            access_token: access_token
            client_uri: client_uri
            provider: provider
        - policy_id: policy_id
          meta_data:
            key: meta_data
          description: description
          redirect_uri: redirect_uri
          secret: secret
          client_name: client_name
          client_id: client_id
          dcr_registration:
            access_token: access_token
            client_uri: client_uri
            provider: provider
      properties:
        apps:
          items:
            $ref: '#/components/schemas/OAuthClient'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    OAuthClient:
      example:
        policy_id: policy_id
        meta_data:
          key: meta_data
        description: description
        redirect_uri: redirect_uri
        secret: secret
        client_name: client_name
        client_id: client_id
        dcr_registration:
          access_token: access_token
          client_uri: client_uri
          provider: provider
      properties:
        client_id:
          type: string
        client_name:
          type: string
        dcr_registration:
          $ref: '#/components/schemas/DcrpRegistration'
        description:
          type: string
        meta_data:
          additionalProperties:
            type: string
          type: object
        policy_id:
          type: string
        redirect_uri:
          type: string
        secret:
          type: string
      type: object
    OAuthClientToken:
      example:
        expires: 0
        code: code
      properties:
        code:
          type: string
        expires:
          type: integer
      type: object
    OAuthClientTokens:
      items:
        $ref: '#/components/schemas/OAuthClientToken'
      nullable: true
      type: array
    OasOAS:
      example:
        components:
          headers:
            key: null
          examples:
            key: null
          schemas:
            key: null
          requestBodies:
            key: null
          callbacks:
            key: null
          responses:
            key: null
          links:
            key: null
          securitySchemes:
            key: null
          parameters:
            key: null
        security:
        - null
        - null
        servers:
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        openapi: openapi
        paths:
          key:
            summary: summary
            description: description
            delete:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            put:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            head:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            patch:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            trace:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            servers:
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            - variables:
                key:
                  default: default
                  description: description
                  enum:
                  - enum
                  - enum
              description: description
              url: url
            post:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            get:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            options:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
            $ref: $ref
            parameters:
            - null
            - null
            connect:
              summary: summary
              security:
              - null
              - null
              servers:
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              - variables:
                  key:
                    default: default
                    description: description
                    enum:
                    - enum
                    - enum
                description: description
                url: url
              requestBody: "{}"
              deprecated: true
              callbacks:
                key: null
              description: description
              operationId: operationId
              responses:
                key: null
              externalDocs:
                description: description
                url: url
              parameters:
              - null
              - null
              tags:
              - tags
              - tags
        externalDocs:
          description: description
          url: url
        info:
          license:
            name: name
            url: url
          contact:
            name: name
            email: email
            url: url
          description: description
          termsOfService: termsOfService
          title: title
          version: version
        tags:
        - name: name
          description: description
          externalDocs:
            description: description
            url: url
        - name: name
          description: description
          externalDocs:
            description: description
            url: url
      properties:
        components:
          $ref: '#/components/schemas/Openapi3Components'
        externalDocs:
          $ref: '#/components/schemas/Openapi3ExternalDocs'
        info:
          $ref: '#/components/schemas/Openapi3Info'
        openapi:
          type: string
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3PathItem'
          type: object
        security:
          items:
            $ref: '#/components/schemas/Openapi3SecurityRequirement'
          nullable: true
          type: array
        servers:
          items:
            $ref: '#/components/schemas/Openapi3Server'
          nullable: true
          type: array
        tags:
          items:
            $ref: '#/components/schemas/Openapi3Tag'
          type: array
      type: object
    Openapi3CallbackRef:
      type: object
    Openapi3Callbacks:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3CallbackRef'
      type: object
    Openapi3Components:
      example:
        headers:
          key: null
        examples:
          key: null
        schemas:
          key: null
        requestBodies:
          key: null
        callbacks:
          key: null
        responses:
          key: null
        links:
          key: null
        securitySchemes:
          key: null
        parameters:
          key: null
      properties:
        callbacks:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3CallbackRef'
          type: object
        examples:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3ExampleRef'
          type: object
        headers:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3HeaderRef'
          type: object
        links:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3LinkRef'
          type: object
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3ParameterRef'
          type: object
        requestBodies:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3RequestBodyRef'
          type: object
        responses:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3ResponseRef'
          type: object
        schemas:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3SchemaRef'
          type: object
        securitySchemes:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3SecuritySchemeRef'
          type: object
      type: object
    Openapi3Contact:
      example:
        name: name
        email: email
        url: url
      properties:
        email:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    Openapi3ExampleRef:
      type: object
    Openapi3Examples:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3ExampleRef'
      type: object
    Openapi3ExternalDocs:
      example:
        description: description
        url: url
      properties:
        description:
          type: string
        url:
          type: string
      type: object
    Openapi3HeaderRef:
      type: object
    Openapi3Headers:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3HeaderRef'
      type: object
    Openapi3Info:
      example:
        license:
          name: name
          url: url
        contact:
          name: name
          email: email
          url: url
        description: description
        termsOfService: termsOfService
        title: title
        version: version
      properties:
        contact:
          $ref: '#/components/schemas/Openapi3Contact'
        description:
          type: string
        license:
          $ref: '#/components/schemas/Openapi3License'
        termsOfService:
          type: string
        title:
          type: string
        version:
          type: string
      type: object
    Openapi3License:
      example:
        name: name
        url: url
      properties:
        name:
          type: string
        url:
          type: string
      type: object
    Openapi3LinkRef:
      type: object
    Openapi3Links:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3LinkRef'
      type: object
    Openapi3Operation:
      example:
        summary: summary
        security:
        - null
        - null
        servers:
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        requestBody: "{}"
        deprecated: true
        callbacks:
          key: null
        description: description
        operationId: operationId
        responses:
          key: null
        externalDocs:
          description: description
          url: url
        parameters:
        - null
        - null
        tags:
        - tags
        - tags
      properties:
        callbacks:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3CallbackRef'
          type: object
        deprecated:
          type: boolean
        description:
          type: string
        externalDocs:
          $ref: '#/components/schemas/Openapi3ExternalDocs'
        operationId:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Openapi3ParameterRef'
          type: array
        requestBody:
          type: object
        responses:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3ResponseRef'
          type: object
        security:
          items:
            $ref: '#/components/schemas/Openapi3SecurityRequirement'
          nullable: true
          type: array
        servers:
          items:
            $ref: '#/components/schemas/Openapi3Server'
          nullable: true
          type: array
        summary:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    Openapi3ParameterRef:
      type: object
    Openapi3Parameters:
      items:
        $ref: '#/components/schemas/Openapi3ParameterRef'
      type: array
    Openapi3ParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3ParameterRef'
      type: object
    Openapi3PathItem:
      example:
        summary: summary
        description: description
        delete:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        put:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        head:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        patch:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        trace:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        servers:
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        post:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        get:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        options:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
        $ref: $ref
        parameters:
        - null
        - null
        connect:
          summary: summary
          security:
          - null
          - null
          servers:
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          - variables:
              key:
                default: default
                description: description
                enum:
                - enum
                - enum
            description: description
            url: url
          requestBody: "{}"
          deprecated: true
          callbacks:
            key: null
          description: description
          operationId: operationId
          responses:
            key: null
          externalDocs:
            description: description
            url: url
          parameters:
          - null
          - null
          tags:
          - tags
          - tags
      properties:
        $ref:
          type: string
        connect:
          $ref: '#/components/schemas/Openapi3Operation'
        delete:
          $ref: '#/components/schemas/Openapi3Operation'
        description:
          type: string
        get:
          $ref: '#/components/schemas/Openapi3Operation'
        head:
          $ref: '#/components/schemas/Openapi3Operation'
        options:
          $ref: '#/components/schemas/Openapi3Operation'
        parameters:
          items:
            $ref: '#/components/schemas/Openapi3ParameterRef'
          type: array
        patch:
          $ref: '#/components/schemas/Openapi3Operation'
        post:
          $ref: '#/components/schemas/Openapi3Operation'
        put:
          $ref: '#/components/schemas/Openapi3Operation'
        servers:
          items:
            $ref: '#/components/schemas/Openapi3Server'
          nullable: true
          type: array
        summary:
          type: string
        trace:
          $ref: '#/components/schemas/Openapi3Operation'
      type: object
    Openapi3Paths:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3PathItem'
      type: object
    Openapi3RequestBodies:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3RequestBodyRef'
      type: object
    Openapi3RequestBodyRef:
      type: object
    Openapi3ResponseRef:
      type: object
    Openapi3Responses:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3ResponseRef'
      type: object
    Openapi3SchemaRef:
      type: object
    Openapi3Schemas:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3SchemaRef'
      type: object
    Openapi3SecurityRequirement:
      additionalProperties:
        items:
          type: string
        type: array
      type: object
    Openapi3SecurityRequirements:
      items:
        $ref: '#/components/schemas/Openapi3SecurityRequirement'
      nullable: true
      type: array
    Openapi3SecuritySchemeRef:
      type: object
    Openapi3SecuritySchemes:
      additionalProperties:
        $ref: '#/components/schemas/Openapi3SecuritySchemeRef'
      type: object
    Openapi3Server:
      example:
        variables:
          key:
            default: default
            description: description
            enum:
            - enum
            - enum
        description: description
        url: url
      properties:
        description:
          type: string
        url:
          type: string
        variables:
          additionalProperties:
            $ref: '#/components/schemas/Openapi3ServerVariable'
          type: object
      type: object
    Openapi3ServerVariable:
      example:
        default: default
        description: description
        enum:
        - enum
        - enum
      properties:
        default:
          type: string
        description:
          type: string
        enum:
          items:
            type: string
          type: array
      type: object
    Openapi3Servers:
      items:
        $ref: '#/components/schemas/Openapi3Server'
      nullable: true
      type: array
    Openapi3Tag:
      example:
        name: name
        description: description
        externalDocs:
          description: description
          url: url
      properties:
        description:
          type: string
        externalDocs:
          $ref: '#/components/schemas/Openapi3ExternalDocs'
        name:
          type: string
      type: object
    Openapi3Tags:
      items:
        $ref: '#/components/schemas/Openapi3Tag'
      type: array
    PkixName:
      type: object
    Policy:
      example:
        partitions:
          complexity: true
          rate_limit: true
          quota: true
          acl: true
          per_api: true
        last_updated: last_updated
        max_query_depth: 6
        date_created: 2000-01-23T04:56:07.000+00:00
        throttle_retry_limit: 9
        is_inactive: true
        throttle_interval: 7.061401241503109
        mid: mid
        active: true
        access_rights:
          key:
            restricted_types:
            - name: name
              fields:
              - fields
              - fields
            - name: name
              fields:
              - fields
              - fields
            allowed_urls:
            - methods:
              - GET
              - PATCH
              - HEAD
              - PUT
              - DELETE
              url: anything/rate-limit-1-per-5
            - methods:
              - GET
              - PATCH
              - HEAD
              - PUT
              - DELETE
              url: anything/rate-limit-1-per-5
            api_id: d1dfc6a927a046c54c0ed470f19757cc
            allowed_types:
            - name: name
              fields:
              - fields
              - fields
            - name: name
              fields:
              - fields
              - fields
            versions:
            - Default
            - v2
            api_name: Rate Limit Proxy API
            allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
            limit:
              max_query_depth: 6
              quota_max: 5
              rate: 9.301444243932576
              throttle_retry_limit: 1
              quota_remaining: 5
              throttle_interval: 1.2315135367772556
              quota_renews: 7
              smoothing:
                delay: 3
                step: 2
                threshold: 4
                trigger: 7.386281948385884
                enabled: true
              per: 1.4658129805029452
              quota_renewal_rate: 2
              set_by_policy: true
            disable_introspection: false
            field_access_rights:
            - type_name: type_name
              limits:
                max_query_depth: 0
              field_name: field_name
            - type_name: type_name
              limits:
                max_query_depth: 0
              field_name: field_name
        quota_renewal_rate: 5
        tags:
        - tags
        - tags
        quota_max: 5
        rate: 2.3021358869347655
        org_id: org_id
        key_expires_in: 0
        meta_data:
          key: ""
        name: name
        id: id
        smoothing:
          delay: 3
          step: 2
          threshold: 4
          trigger: 7.386281948385884
          enabled: true
        hmac_enabled: true
        per: 1.4658129805029452
      properties:
        mid:
          type: string
        access_rights:
          additionalProperties:
            $ref: '#/components/schemas/AccessDefinition'
          nullable: true
          type: object
        active:
          type: boolean
        date_created:
          format: date-time
          type: string
        hmac_enabled:
          type: boolean
        id:
          type: string
        is_inactive:
          type: boolean
        key_expires_in:
          type: integer
        last_updated:
          type: string
        max_query_depth:
          type: integer
        meta_data:
          additionalProperties: {}
          nullable: true
          type: object
        name:
          type: string
        org_id:
          type: string
        partitions:
          $ref: '#/components/schemas/Policy_partitions'
        per:
          type: number
        quota_max:
          type: integer
        quota_renewal_rate:
          type: integer
        rate:
          type: number
        smoothing:
          $ref: '#/components/schemas/RateLimitSmoothing'
        tags:
          items:
            type: string
          nullable: true
          type: array
        throttle_interval:
          type: number
        throttle_retry_limit:
          type: integer
      type: object
    PolicyList:
      items:
        $ref: '#/components/schemas/Policy'
      nullable: true
      type: array
    PortalConfig:
      example:
        disable_signup: true
        enable_multi_selection: true
        HashKeys: true
        mail_options:
          mail_from_name: mail_from_name
          mail_from_email: mail_from_email
          email_copy:
            key_email:
              subject: subject
              body: body
              enabled: true
              hide_token_data: true
              sign_off: sign_off
            reset_password_email:
              subject: subject
              body: body
              enabled: true
              hide_token_data: true
              sign_off: sign_off
            welcome_email:
              subject: subject
              body: body
              enabled: true
              hide_token_data: true
              sign_off: sign_off
        enable_dcr: true
        require_key_approval: true
        signup_fields:
        - signup_fields
        - signup_fields
        oauth_usage_limit: -1
        redirect_to: redirect_to
        secure_key_approval: true
        disable_login: true
        org_id: org_id
        catalogue_login_only: true
        redirect_on_key_request: true
        id: id
        override: true
        disable_auto_login: true
        dcr_options:
          access_token: access_token
          grant_types:
          - grant_types
          - grant_types
          provider: provider
          idp_host: idp_host
          registration_endpoint: registration_endpoint
          token_endpoint_auth_method: token_endpoint_auth_method
          response_types:
          - response_types
          - response_types
        email: catalogue@tyk.io
        key_request_fields:
        - key_request_fields
        - key_request_fields
      properties:
        HashKeys:
          type: boolean
        catalogue_login_only:
          type: boolean
        dcr_options:
          $ref: '#/components/schemas/DCROptions'
        disable_auto_login:
          type: boolean
        disable_login:
          type: boolean
        disable_signup:
          type: boolean
        email:
          example: catalogue@tyk.io
          type: string
        enable_dcr:
          type: boolean
        enable_multi_selection:
          type: boolean
        id:
          type: string
        key_request_fields:
          items:
            type: string
          nullable: true
          type: array
        mail_options:
          $ref: '#/components/schemas/PortalConfig_mail_options'
        oauth_usage_limit:
          example: -1
          type: integer
        org_id:
          type: string
        override:
          type: boolean
        redirect_on_key_request:
          type: boolean
        redirect_to:
          type: string
        require_key_approval:
          type: boolean
        secure_key_approval:
          type: boolean
        signup_fields:
          items:
            type: string
          nullable: true
          type: array
      type: object
    RateLimitSmoothing:
      example:
        delay: 3
        step: 2
        threshold: 4
        trigger: 7.386281948385884
        enabled: true
      properties:
        delay:
          type: integer
        enabled:
          type: boolean
        step:
          type: integer
        threshold:
          type: integer
        trigger:
          type: number
      type: object
    ResultId:
      example:
        api_id: 7364617cc7d345d9755d182635dfd46d
        iso_country: iso_country
        code: 404
        year: 2024
        queries:
          key: 0
        url: url
        path: path
        hour: 0
        month: 6
        api_name: OAS http
        alias: alias
        day: 12
        key: key
      properties:
        alias:
          type: string
        api_id:
          example: 7364617cc7d345d9755d182635dfd46d
          type: string
        api_name:
          example: OAS http
          type: string
        code:
          example: 404
          type: integer
        day:
          example: 12
          type: integer
        hour:
          example: 0
          type: integer
        iso_country:
          type: string
        key:
          type: string
        month:
          example: 6
          type: integer
        path:
          type: string
        queries:
          additionalProperties:
            type: integer
          type: object
        url:
          type: string
        year:
          example: 2024
          type: integer
      type: object
    ResultUnit:
      example:
        hits: 26
        min_latency: 0
        last_hit: 2024-06-19T06:33:30Z
        max_latency: 0
        request_time: 190.2
        min_upstream_latency: 0
        upstream_latency: 0
        success: 22
        latency: 0
        max_upstream_latency: 0
        id:
          api_id: 7364617cc7d345d9755d182635dfd46d
          iso_country: iso_country
          code: 404
          year: 2024
          queries:
            key: 0
          url: url
          path: path
          hour: 0
          month: 6
          api_name: OAS http
          alias: alias
          day: 12
          key: key
        error: 4
      properties:
        error:
          example: 4
          type: integer
        hits:
          example: 26
          type: integer
        id:
          $ref: '#/components/schemas/ResultId'
        last_hit:
          example: 2024-06-19T06:33:30Z
          format: date-time
          type: string
        latency:
          example: 0
          type: number
        max_latency:
          example: 0
          type: integer
        max_upstream_latency:
          example: 0
          type: integer
        min_latency:
          example: 0
          type: integer
        min_upstream_latency:
          example: 0
          type: integer
        request_time:
          example: 190.2
          type: number
        success:
          example: 22
          type: integer
        upstream_latency:
          example: 0
          type: number
      type: object
    ReturnDataStruct:
      example:
        Pages: 3
        Data:
        - partitions:
            complexity: true
            rate_limit: true
            quota: true
            acl: true
            per_api: true
          last_updated: last_updated
          max_query_depth: 6
          date_created: 2000-01-23T04:56:07.000+00:00
          throttle_retry_limit: 9
          is_inactive: true
          throttle_interval: 7.061401241503109
          mid: mid
          active: true
          access_rights:
            key:
              restricted_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              allowed_urls:
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              api_id: d1dfc6a927a046c54c0ed470f19757cc
              allowed_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              versions:
              - Default
              - v2
              api_name: Rate Limit Proxy API
              allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
              limit:
                max_query_depth: 6
                quota_max: 5
                rate: 9.301444243932576
                throttle_retry_limit: 1
                quota_remaining: 5
                throttle_interval: 1.2315135367772556
                quota_renews: 7
                smoothing:
                  delay: 3
                  step: 2
                  threshold: 4
                  trigger: 7.386281948385884
                  enabled: true
                per: 1.4658129805029452
                quota_renewal_rate: 2
                set_by_policy: true
              disable_introspection: false
              field_access_rights:
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
          quota_renewal_rate: 5
          tags:
          - tags
          - tags
          quota_max: 5
          rate: 2.3021358869347655
          org_id: org_id
          key_expires_in: 0
          meta_data:
            key: ""
          name: name
          id: id
          smoothing:
            delay: 3
            step: 2
            threshold: 4
            trigger: 7.386281948385884
            enabled: true
          hmac_enabled: true
          per: 1.4658129805029452
        - partitions:
            complexity: true
            rate_limit: true
            quota: true
            acl: true
            per_api: true
          last_updated: last_updated
          max_query_depth: 6
          date_created: 2000-01-23T04:56:07.000+00:00
          throttle_retry_limit: 9
          is_inactive: true
          throttle_interval: 7.061401241503109
          mid: mid
          active: true
          access_rights:
            key:
              restricted_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              allowed_urls:
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              - methods:
                - GET
                - PATCH
                - HEAD
                - PUT
                - DELETE
                url: anything/rate-limit-1-per-5
              api_id: d1dfc6a927a046c54c0ed470f19757cc
              allowed_types:
              - name: name
                fields:
                - fields
                - fields
              - name: name
                fields:
                - fields
                - fields
              versions:
              - Default
              - v2
              api_name: Rate Limit Proxy API
              allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
              limit:
                max_query_depth: 6
                quota_max: 5
                rate: 9.301444243932576
                throttle_retry_limit: 1
                quota_remaining: 5
                throttle_interval: 1.2315135367772556
                quota_renews: 7
                smoothing:
                  delay: 3
                  step: 2
                  threshold: 4
                  trigger: 7.386281948385884
                  enabled: true
                per: 1.4658129805029452
                quota_renewal_rate: 2
                set_by_policy: true
              disable_introspection: false
              field_access_rights:
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
              - type_name: type_name
                limits:
                  max_query_depth: 0
                field_name: field_name
          quota_renewal_rate: 5
          tags:
          - tags
          - tags
          quota_max: 5
          rate: 2.3021358869347655
          org_id: org_id
          key_expires_in: 0
          meta_data:
            key: ""
          name: name
          id: id
          smoothing:
            delay: 3
            step: 2
            threshold: 4
            trigger: 7.386281948385884
            enabled: true
          hmac_enabled: true
          per: 1.4658129805029452
      properties:
        Data:
          items:
            $ref: '#/components/schemas/Policy'
          nullable: true
          type: array
        Pages:
          type: integer
      type: object
    SessionState:
      example:
        expires: 1716895221
        session_lifetime: 0
        max_query_depth: 5
        apply_policies:
        - 641c15dd0fffb800010197bf
        - 615d2e528bf3980001c7c6c2
        throttle_retry_limit: -1
        certificate: certificate
        is_inactive: true
        access_rights:
          key:
            restricted_types:
            - name: name
              fields:
              - fields
              - fields
            - name: name
              fields:
              - fields
              - fields
            allowed_urls:
            - methods:
              - GET
              - PATCH
              - HEAD
              - PUT
              - DELETE
              url: anything/rate-limit-1-per-5
            - methods:
              - GET
              - PATCH
              - HEAD
              - PUT
              - DELETE
              url: anything/rate-limit-1-per-5
            api_id: d1dfc6a927a046c54c0ed470f19757cc
            allowed_types:
            - name: name
              fields:
              - fields
              - fields
            - name: name
              fields:
              - fields
              - fields
            versions:
            - Default
            - v2
            api_name: Rate Limit Proxy API
            allowance_scope: d1dfc6a927a046c54c0ed470f19757cc
            limit:
              max_query_depth: 6
              quota_max: 5
              rate: 9.301444243932576
              throttle_retry_limit: 1
              quota_remaining: 5
              throttle_interval: 1.2315135367772556
              quota_renews: 7
              smoothing:
                delay: 3
                step: 2
                threshold: 4
                trigger: 7.386281948385884
                enabled: true
              per: 1.4658129805029452
              quota_renewal_rate: 2
              set_by_policy: true
            disable_introspection: false
            field_access_rights:
            - type_name: type_name
              limits:
                max_query_depth: 0
              field_name: field_name
            - type_name: type_name
              limits:
                max_query_depth: 0
              field_name: field_name
        quota_renewal_rate: -1
        id_extractor_deadline: 0
        rate: 1000
        data_expires: 0
        meta_data:
          tyk_developer_id: 62b3fb9a1d5e4f00017226f5
        alias: portal-developer@example.org
        smoothing:
          delay: 3
          step: 2
          threshold: 4
          trigger: 7.386281948385884
          enabled: true
        hmac_enabled: false
        hmac_string: hmac_string
        per: 60
        oauth_client_id: oauth_client_id
        apply_policy_id: 641c15dd0fffb800010197bf
        last_updated: "1715681746"
        key_id: key_id
        date_created: 2024-05-14T13:15:46.560506+03:00
        quota_remaining: 20000
        throttle_interval: 10
        allowance: 1000
        monitor:
          trigger_limits:
          - 80
          - 60
          - 50
        enable_detailed_recording: true
        basic_auth_data:
          password: testuse1
          user: admin-user@example.org
          hash_type: bcrypt
        tags:
        - edge
        - edge-eu
        quota_max: 1710302205
        org_id: 5e9d9544a1dcd60001d0ed20
        quota_renews: 1715681745
        last_check: 0
        oauth_keys:
          key: oauth_keys
        jwt_data:
          secret: secret
      properties:
        access_rights:
          additionalProperties:
            $ref: '#/components/schemas/AccessDefinition'
          nullable: true
          type: object
        alias:
          example: portal-developer@example.org
          type: string
        allowance:
          example: 1000
          format: double
          type: number
        apply_policies:
          example:
          - 641c15dd0fffb800010197bf
          - 615d2e528bf3980001c7c6c2
          items:
            type: string
          nullable: true
          type: array
        apply_policy_id:
          deprecated: true
          description: deprecated use apply_policies going forward instead to send
            a list of policies ids
          example: 641c15dd0fffb800010197bf
          type: string
        basic_auth_data:
          $ref: '#/components/schemas/SessionState_basic_auth_data'
        certificate:
          type: string
        data_expires:
          example: 0
          format: int64
          type: integer
        date_created:
          example: 2024-05-14T13:15:46.560506+03:00
          format: date-time
          type: string
        enable_detailed_recording:
          example: true
          type: boolean
        expires:
          example: 1716895221
          format: int64
          type: integer
        hmac_enabled:
          example: false
          type: boolean
        hmac_string:
          type: string
        id_extractor_deadline:
          example: 0
          format: int64
          type: integer
        is_inactive:
          type: boolean
        jwt_data:
          $ref: '#/components/schemas/SessionState_jwt_data'
        key_id:
          type: string
        last_check:
          example: 0
          format: int64
          type: integer
        last_updated:
          example: "1715681746"
          type: string
        max_query_depth:
          example: 5
          type: integer
        meta_data:
          example:
            tyk_developer_id: 62b3fb9a1d5e4f00017226f5
        monitor:
          $ref: '#/components/schemas/SessionState_monitor'
        oauth_client_id:
          type: string
        oauth_keys:
          additionalProperties:
            type: string
          nullable: true
          type: object
        org_id:
          example: 5e9d9544a1dcd60001d0ed20
          type: string
        per:
          example: 60
          format: double
          type: number
        quota_max:
          example: 1710302205
          format: int64
          type: integer
        quota_remaining:
          example: 20000
          format: int64
          type: integer
        quota_renewal_rate:
          example: -1
          format: int64
          type: integer
        quota_renews:
          example: 1715681745
          format: int64
          type: integer
        rate:
          example: 1000
          format: double
          type: number
        session_lifetime:
          example: 0
          format: int64
          type: integer
        smoothing:
          $ref: '#/components/schemas/RateLimitSmoothing'
        tags:
          example:
          - edge
          - edge-eu
          items:
            type: string
          nullable: true
          type: array
        throttle_interval:
          example: 10
          format: double
          type: number
        throttle_retry_limit:
          example: -1
          type: integer
      type: object
    URLVals:
      example:
        ApiURL: ApiURL
        BasePath: BasePath
        Host: Host
      properties:
        ApiURL:
          type: string
        BasePath:
          type: string
        Host:
          type: string
      type: object
    User:
      example:
        password_updated: 2024-05-19T08:23:29.146+03:00
        user_permissions:
          key: user_permissions
        active: true
        created_at: 2024-05-19T08:23:29.034+03:00
        last_name: sasuke
        last_login_date: 2024-05-19T08:42:22.659839+03:00
        password: testuser1
        email_address: multi-org-user@example.org
        api_model: "{}"
        group_id: 5e9d9544a1dcd60001d0ed20
        org_id: 5e9d9544a1dcd60001d0ed20
        access_key: d7ebef749e4348cb67fec3cfc81f0a50
        password_max_days: 0
        id: 66498cd1e2fcd1000184ecb5
        first_name: itachi
      properties:
        access_key:
          example: d7ebef749e4348cb67fec3cfc81f0a50
          type: string
        active:
          example: true
          type: boolean
        api_model:
          type: object
        created_at:
          example: 2024-05-19T08:23:29.034+03:00
          format: date-time
          type: string
        email_address:
          example: multi-org-user@example.org
          type: string
        first_name:
          example: itachi
          type: string
        group_id:
          example: 5e9d9544a1dcd60001d0ed20
          type: string
        id:
          example: 66498cd1e2fcd1000184ecb5
          type: string
        last_login_date:
          example: 2024-05-19T08:42:22.659839+03:00
          format: date-time
          type: string
        last_name:
          example: sasuke
          type: string
        org_id:
          example: 5e9d9544a1dcd60001d0ed20
          type: string
        password:
          example: testuser1
          minLength: 6
          type: string
        password_max_days:
          example: 0
          type: integer
        password_updated:
          example: 2024-05-19T08:23:29.146+03:00
          format: date-time
          type: string
        user_permissions:
          additionalProperties:
            type: string
          type: object
      required:
      - email_address
      - first_name
      - last_name
      - user_permissions
      type: object
    UserGroup:
      example:
        user_permissions:
          key: user_permissions
        org_id: 5e9d9544a1dcd60001d0ed20
        name: 66498cd1e2fcd1000184ecb8
        active: true
        description: Devops logs and analytics access
        password_max_days: 0
        id: 6649986d5715ec4c96cbef2b
      properties:
        active:
          example: true
          type: boolean
        description:
          example: Devops logs and analytics access
          type: string
        id:
          example: 6649986d5715ec4c96cbef2b
          type: string
        name:
          example: 66498cd1e2fcd1000184ecb8
          type: string
        org_id:
          example: 5e9d9544a1dcd60001d0ed20
          type: string
        password_max_days:
          example: 0
          type: integer
        user_permissions:
          additionalProperties:
            type: string
          type: object
      type: object
    UserGroups:
      example:
        pages: 0
        groups:
        - user_permissions:
            key: user_permissions
          org_id: 5e9d9544a1dcd60001d0ed20
          name: 66498cd1e2fcd1000184ecb8
          active: true
          description: Devops logs and analytics access
          password_max_days: 0
          id: 6649986d5715ec4c96cbef2b
        - user_permissions:
            key: user_permissions
          org_id: 5e9d9544a1dcd60001d0ed20
          name: 66498cd1e2fcd1000184ecb8
          active: true
          description: Devops logs and analytics access
          password_max_days: 0
          id: 6649986d5715ec4c96cbef2b
      properties:
        groups:
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    UserPassword:
      example:
        api_model: "{}"
        new_password: newtestuser1password
        current_password: testuser1password
      properties:
        api_model:
          type: object
        current_password:
          example: testuser1password
          minLength: 6
          type: string
        new_password:
          example: newtestuser1password
          minLength: 6
          type: string
      type: object
    UserPermissionObject:
      additionalProperties:
        type: string
      type: object
    UserSearchPayload:
      example:
        filters:
          query: itachi@tyk.io
      properties:
        filters:
          $ref: '#/components/schemas/UserSearchPayload_filters'
      type: object
    Users:
      example:
        pages: 0
        users:
        - password_updated: 2024-05-19T08:23:29.146+03:00
          user_permissions:
            key: user_permissions
          active: true
          created_at: 2024-05-19T08:23:29.034+03:00
          last_name: sasuke
          last_login_date: 2024-05-19T08:42:22.659839+03:00
          password: testuser1
          email_address: multi-org-user@example.org
          api_model: "{}"
          group_id: 5e9d9544a1dcd60001d0ed20
          org_id: 5e9d9544a1dcd60001d0ed20
          access_key: d7ebef749e4348cb67fec3cfc81f0a50
          password_max_days: 0
          id: 66498cd1e2fcd1000184ecb5
          first_name: itachi
        - password_updated: 2024-05-19T08:23:29.146+03:00
          user_permissions:
            key: user_permissions
          active: true
          created_at: 2024-05-19T08:23:29.034+03:00
          last_name: sasuke
          last_login_date: 2024-05-19T08:42:22.659839+03:00
          password: testuser1
          email_address: multi-org-user@example.org
          api_model: "{}"
          group_id: 5e9d9544a1dcd60001d0ed20
          org_id: 5e9d9544a1dcd60001d0ed20
          access_key: d7ebef749e4348cb67fec3cfc81f0a50
          password_max_days: 0
          id: 66498cd1e2fcd1000184ecb5
          first_name: itachi
      properties:
        pages:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/User'
          nullable: true
          type: array
      type: object
    VersionMeta:
      example:
        internal: true
        isDefaultVersion: true
        name: name
        id: id
        versionName: versionName
        expirationDate: expirationDate
      properties:
        expirationDate:
          type: string
        id:
          type: string
        internal:
          type: boolean
        isDefaultVersion:
          type: boolean
        name:
          type: string
        versionName:
          type: string
      type: object
    VersionMetas:
      example:
        pages: 0
        apis:
        - internal: true
          isDefaultVersion: true
          name: name
          id: id
          versionName: versionName
          expirationDate: expirationDate
        - internal: true
          isDefaultVersion: true
          name: name
          id: id
          versionName: versionName
          expirationDate: expirationDate
      properties:
        apis:
          items:
            $ref: '#/components/schemas/VersionMeta'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    WebHookHandlerConf:
      example:
        event_timeout: 0
        api_model: "{}"
        method: POST
        webhook_id: 1f78e319202b430e92286cff3ca759e3
        org_id: 5e9d9544a1dcd60001d0ed20
        name: Expired Keys webhook
        header_map:
          secret: superscretkey
          x-auth: authvalue
        template_path: templates/default_webhook.json
        id: 664b613f5715ec4c96cbef3e
        target_path: https://httpbin.org/expired-keys
      properties:
        api_model:
          type: object
        event_timeout:
          example: 0
          type: integer
        header_map:
          additionalProperties:
            type: string
          example:
            secret: superscretkey
            x-auth: authvalue
          nullable: true
          type: object
        id:
          example: 664b613f5715ec4c96cbef3e
          type: string
        method:
          example: POST
          type: string
        name:
          example: Expired Keys webhook
          type: string
        org_id:
          example: 5e9d9544a1dcd60001d0ed20
          type: string
        target_path:
          example: https://httpbin.org/expired-keys
          type: string
        template_path:
          example: templates/default_webhook.json
          type: string
        webhook_id:
          example: 1f78e319202b430e92286cff3ca759e3
          type: string
      required:
      - method
      - target_path
      type: object
    WebHooks:
      example:
        pages: 0
        hooks:
        - event_timeout: 0
          api_model: "{}"
          method: POST
          webhook_id: 1f78e319202b430e92286cff3ca759e3
          org_id: 5e9d9544a1dcd60001d0ed20
          name: Expired Keys webhook
          header_map:
            secret: superscretkey
            x-auth: authvalue
          template_path: templates/default_webhook.json
          id: 664b613f5715ec4c96cbef3e
          target_path: https://httpbin.org/expired-keys
        - event_timeout: 0
          api_model: "{}"
          method: POST
          webhook_id: 1f78e319202b430e92286cff3ca759e3
          org_id: 5e9d9544a1dcd60001d0ed20
          name: Expired Keys webhook
          header_map:
            secret: superscretkey
            x-auth: authvalue
          template_path: templates/default_webhook.json
          id: 664b613f5715ec4c96cbef3e
          target_path: https://httpbin.org/expired-keys
      properties:
        hooks:
          items:
            $ref: '#/components/schemas/WebHookHandlerConf'
          nullable: true
          type: array
        pages:
          type: integer
      type: object
    schema:
      additionalProperties: false
      description: "The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3"
      example:
        security:
        - null
        - null
        components:
          headers: "{}"
          examples: "{}"
          schemas: "{}"
          requestBodies: "{}"
          responses: "{}"
          callbacks: "{}"
          links: "{}"
          securitySchemes: "{}"
          parameters: "{}"
        servers:
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        - variables:
            key:
              default: default
              description: description
              enum:
              - enum
              - enum
          description: description
          url: url
        openapi: openapi
        paths: "{}"
        externalDocs:
          description: description
          url: url
        info:
          license:
            name: name
            url: url
          contact:
            name: name
            url: url
            email: email
          description: description
          termsOfService: termsOfService
          title: title
          version: version
        tags:
        - name: name
          description: description
          externalDocs:
            description: description
            url: url
        - name: name
          description: description
          externalDocs:
            description: description
            url: url
      properties:
        openapi:
          pattern: ^3\.0\.\d(-.+)?$
          type: string
        info:
          $ref: '#/components/schemas/Info'
        externalDocs:
          $ref: '#/components/schemas/ExternalDocumentation'
        servers:
          items:
            $ref: '#/components/schemas/Server'
          type: array
        security:
          items:
            $ref: '#/components/schemas/SecurityRequirement'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          uniqueItems: true
        paths:
          additionalProperties: false
          type: object
        components:
          $ref: '#/components/schemas/Components'
      required:
      - info
      - openapi
      - paths
      type: object
    Info:
      additionalProperties: false
      example:
        license:
          name: name
          url: url
        contact:
          name: name
          url: url
          email: email
        description: description
        termsOfService: termsOfService
        title: title
        version: version
      properties:
        title:
          type: string
        description:
          type: string
        termsOfService:
          format: uri-reference
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        license:
          $ref: '#/components/schemas/License'
        version:
          type: string
      required:
      - title
      - version
      type: object
    Contact:
      additionalProperties: false
      example:
        name: name
        url: url
        email: email
      properties:
        name:
          type: string
        url:
          format: uri-reference
          type: string
        email:
          format: email
          type: string
      type: object
    License:
      additionalProperties: false
      example:
        name: name
        url: url
      properties:
        name:
          type: string
        url:
          format: uri-reference
          type: string
      required:
      - name
      type: object
    ExternalDocumentation:
      additionalProperties: false
      example:
        description: description
        url: url
      properties:
        description:
          type: string
        url:
          format: uri-reference
          type: string
      required:
      - url
      type: object
    Server:
      additionalProperties: false
      example:
        variables:
          key:
            default: default
            description: description
            enum:
            - enum
            - enum
        description: description
        url: url
      properties:
        url:
          type: string
        description:
          type: string
        variables:
          additionalProperties:
            $ref: '#/components/schemas/ServerVariable'
          type: object
      required:
      - url
      type: object
    ServerVariable:
      additionalProperties: false
      example:
        default: default
        description: description
        enum:
        - enum
        - enum
      properties:
        enum:
          items:
            type: string
          type: array
        default:
          type: string
        description:
          type: string
      required:
      - default
      type: object
    SecurityRequirement:
      additionalProperties:
        items:
          type: string
        type: array
      type: object
    Tag:
      additionalProperties: false
      example:
        name: name
        description: description
        externalDocs:
          description: description
          url: url
      properties:
        name:
          type: string
        description:
          type: string
        externalDocs:
          $ref: '#/components/schemas/ExternalDocumentation'
      required:
      - name
      type: object
    Paths:
      additionalProperties: false
      type: object
    Components:
      additionalProperties: false
      example:
        headers: "{}"
        examples: "{}"
        schemas: "{}"
        requestBodies: "{}"
        responses: "{}"
        callbacks: "{}"
        links: "{}"
        securitySchemes: "{}"
        parameters: "{}"
      properties:
        schemas:
          type: object
        responses:
          type: object
        parameters:
          type: object
        examples:
          type: object
        requestBodies:
          type: object
        headers:
          type: object
        securitySchemes:
          type: object
        links:
          type: object
        callbacks:
          type: object
      type: object
    patchApiOAS_request:
      oneOf:
      - $ref: '#/components/schemas/ApiImportByUrlPayload'
      - $ref: '#/components/schemas/schema'
    addAsset_request:
      properties:
        data:
          example:
            info:
              title: Our Sample OAS
              version: 1.0.0
            openapi: 3.0.3
            paths:
              /anything:
                post:
                  operationId: anythingpost
                  responses:
                    "200":
                      description: Post created
            x-tyk-api-gateway:
              middleware:
                global:
                  cache:
                    cacheAllSafeRequests: true
                    enabled: true
                    timeout: 5
                operations:
                  anythingpost:
                    requestSizeLimit:
                      enabled: true
                      value: 100
          type: object
        description:
          type: string
        id:
          type: string
        kind:
          type: string
        name:
          type: string
      type: object
    listCertificates_200_response:
      oneOf:
      - $ref: '#/components/schemas/CertificateBasics'
      - $ref: '#/components/schemas/CertificateList'
    createWebhook_request:
      properties:
        header_map:
          additionalProperties:
            type: string
          nullable: true
          type: object
        method:
          type: string
        name:
          type: string
        target_path:
          type: string
      type: object
    updateUser_request:
      properties:
        active:
          type: boolean
        email_address:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        user_permissions:
          additionalProperties:
            type: string
          type: object
      type: object
    ApidefAPIDefinition_basic_auth:
      example:
        body_user_regexp: body_user_regexp
        cache_ttl: 5
        body_password_regexp: body_password_regexp
        disable_caching: true
        extract_from_body: true
      properties:
        body_password_regexp:
          type: string
        body_user_regexp:
          type: string
        cache_ttl:
          type: integer
        disable_caching:
          type: boolean
        extract_from_body:
          type: boolean
      type: object
    ApidefAPIDefinition_oauth_meta:
      example:
        allowed_authorize_types:
        - allowed_authorize_types
        - allowed_authorize_types
        auth_login_redirect: auth_login_redirect
        allowed_access_types:
        - allowed_access_types
        - allowed_access_types
      properties:
        allowed_access_types:
          items:
            type: string
          nullable: true
          type: array
        allowed_authorize_types:
          items:
            type: string
          nullable: true
          type: array
        auth_login_redirect:
          type: string
      type: object
    ApidefProxyConfig_transport:
      example:
        ssl_max_version: 0
        ssl_min_version: 0
        ssl_insecure_skip_verify: true
        proxy_url: proxy_url
        ssl_ciphers:
        - ssl_ciphers
        - ssl_ciphers
        ssl_force_common_name_check: true
      properties:
        proxy_url:
          type: string
        ssl_ciphers:
          items:
            type: string
          nullable: true
          type: array
        ssl_force_common_name_check:
          type: boolean
        ssl_insecure_skip_verify:
          type: boolean
        ssl_max_version:
          minimum: 0
          type: integer
        ssl_min_version:
          minimum: 0
          type: integer
      type: object
    ApidefVersionInfo_paths:
      example:
        ignored:
        - ignored
        - ignored
        white_list:
        - white_list
        - white_list
        black_list:
        - black_list
        - black_list
      properties:
        black_list:
          items:
            type: string
          nullable: true
          type: array
        ignored:
          items:
            type: string
          nullable: true
          type: array
        white_list:
          items:
            type: string
          nullable: true
          type: array
      type: object
    NewOPARules_open_policy:
      example:
        rules: rules
      properties:
        rules:
          type: string
      type: object
    Policy_partitions:
      example:
        complexity: true
        rate_limit: true
        quota: true
        acl: true
        per_api: true
      properties:
        acl:
          type: boolean
        complexity:
          type: boolean
        per_api:
          type: boolean
        quota:
          type: boolean
        rate_limit:
          type: boolean
      type: object
    PortalConfig_mail_options:
      example:
        mail_from_name: mail_from_name
        mail_from_email: mail_from_email
        email_copy:
          key_email:
            subject: subject
            body: body
            enabled: true
            hide_token_data: true
            sign_off: sign_off
          reset_password_email:
            subject: subject
            body: body
            enabled: true
            hide_token_data: true
            sign_off: sign_off
          welcome_email:
            subject: subject
            body: body
            enabled: true
            hide_token_data: true
            sign_off: sign_off
      properties:
        email_copy:
          $ref: '#/components/schemas/EmailCopyOptions'
        mail_from_email:
          type: string
        mail_from_name:
          type: string
      type: object
    SessionState_basic_auth_data:
      example:
        password: testuse1
        user: admin-user@example.org
        hash_type: bcrypt
      properties:
        hash_type:
          example: bcrypt
          type: string
        password:
          example: testuse1
          type: string
        user:
          example: admin-user@example.org
          type: string
      type: object
    SessionState_jwt_data:
      example:
        secret: secret
      properties:
        secret:
          type: string
      type: object
    SessionState_monitor:
      example:
        trigger_limits:
        - 80
        - 60
        - 50
      properties:
        trigger_limits:
          example:
          - 80
          - 60
          - 50
          items:
            type: number
          nullable: true
          type: array
      type: object
    UserSearchPayload_filters:
      example:
        query: itachi@tyk.io
      properties:
        query:
          example: itachi@tyk.io
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      description: The Tyk Dashboard API Access Credentials
      scheme: bearer
      type: http
