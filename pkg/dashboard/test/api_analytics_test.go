/*
Tyk Dashboard API

Testing AnalyticsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dashboard

import (
	"context"
	openapiclient "github.com/TykTechnologies/dashboard-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_dashboard_AnalyticsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AnalyticsAPIService GetAnalyticsOfApiKey", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var startDay string
		var startMonth string
		var startYear string
		var endDay string
		var endMonth string
		var endYear string
		var keyHash string

		resp, httpRes, err := apiClient.AnalyticsAPI.GetAnalyticsOfApiKey(context.Background(), startDay, startMonth, startYear, endDay, endMonth, endYear, keyHash).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AnalyticsAPIService GetAnalyticsOfOauthClientId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var startDay string
		var startMonth string
		var startYear string
		var endDay string
		var endMonth string
		var endYear string
		var oAuthClientID string

		resp, httpRes, err := apiClient.AnalyticsAPI.GetAnalyticsOfOauthClientId(context.Background(), startDay, startMonth, startYear, endDay, endMonth, endYear, oAuthClientID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
